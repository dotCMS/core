<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.dotcms</groupId>
        <artifactId>dotcms-nodejs-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../nodejs-parent/pom.xml</relativePath>
    </parent>

    <packaging>jar</packaging>
    <artifactId>dotcms-postman</artifactId>
    <version>1.0.0-SNAPSHOT</version>

    <properties>
        <!--suppress UnresolvedMavenProperty -->
        <postman.collections>${ext.postman.collections}</postman.collections>
        <license.use>true</license.use>
        <version.cargo.plugin>1.10.6</version.cargo.plugin>
        <clean.docker.volumes>true</clean.docker.volumes>
        <buildDocker>true</buildDocker>
        <docker.base.image>tomcat:9.0.74-jdk11</docker.base.image>
        <testdata.dir>${project.build.directory}/testdata</testdata.dir>
        <it.test.fork-folder.prefix>${project.build.directory}/testdata/fork-</it.test.fork-folder.prefix>
        <it.test.fork-folder>${it.test.fork-folder.prefix}</it.test.fork-folder>
        <cleanup.before.tests>true</cleanup.before.tests>
        <postman.test.skip>true</postman.test.skip>
        <yarn.install.cmd>install --frozen-lockfile</yarn.install.cmd>
        <skip.npm.install>false</skip.npm.install>
        <postman.server.url>http://localhost:${tomcat.port}</postman.server.url>
        <postman.collection.dir>../dotCMS/src/curl-test</postman.collection.dir>
        <!-- Some tests e.g. in ApiToken_Resource.postman_collection currently fail unless docker external port is same as internal -->
        <tomcat.port>8080</tomcat.port>
        <docker.jacoco.skip>false</docker.jacoco.skip>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>install</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <!-- optional: the default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                        <configuration>
                            <skip>${skip.npm.install}</skip>
                            <arguments>${yarn.install.cmd}</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>run node script</id>
                        <!-- Adjust the phase as per your requirement -->
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <phase>integration-test</phase>
                        <configuration>
                            <skip>${postman.test.skip}</skip>
                            <arguments>run start --serverUrl=${postman.server.url} --postmanTestsDir=${postman.collection.dir} ${postman.collections}</arguments>
                            <!-- 'start' is the script name defined in package.json -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skipTests>${postman.test.skip}</skipTests> <!-- This will skip the test execution -->
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <phase>none</phase> <!-- This disables automatic test execution in the integration-test phase -->
                    </execution>
                    <execution>
                        <id>verify</id>
                        <goals>
                            <goal>verify</goal> <!-- This ensures the verify goal is still active -->
                        </goals>
                        <configuration>
                            <!-- Configuration specific to verify goal can go here if needed -->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <showLogs>true</showLogs>
                    <follow>true</follow>
                    <skip>${postman.test.skip}</skip>
                    <imagesMap>
                        <dotcms>
                            <run>
                                <env>
                                    <CATALINA_OPTS>-XX:+PrintFlagsFinal</CATALINA_OPTS>
                                    <DB_MAX_TOTAL>15</DB_MAX_TOTAL>
                                    <DOT_INDEX_POLICY_SINGLE_CONTENT>FORCE</DOT_INDEX_POLICY_SINGLE_CONTENT>
                                    <DOT_ASYNC_REINDEX_COMMIT_LISTENERS>false</DOT_ASYNC_REINDEX_COMMIT_LISTENERS>
                                    <DOT_ASYNC_COMMIT_LISTENERS>false</DOT_ASYNC_COMMIT_LISTENERS>
                                    <DOT_CACHE_GRAPHQLQUERYCACHE_SECONDS>600</DOT_CACHE_GRAPHQLQUERYCACHE_SECONDS>
                                    <JVM_ENDPOINT_TEST_PASS>obfuscate_me</JVM_ENDPOINT_TEST_PASS>
                                    <DOT_ENABLE_SCRIPTING>true</DOT_ENABLE_SCRIPTING>
                                    <DOT_ANNOUNCEMENTS_BASE_URL>http://localhost:8080</DOT_ANNOUNCEMENTS_BASE_URL>
                                </env>
                            </run>
                        </dotcms>
                    </imagesMap>
                </configuration>
                <executions>
                    <execution>
                        <id>cleanup-at-start</id>
                        <goals>
                            <goal>stop</goal>
                            <goal>volume-remove</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                    </execution>
                    <execution>
                        <id>start</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <!-- should be post-integration test but need to make sure it does not stop
                        before dump of jacoco -->
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
    </profiles>

    <repositories>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>dotcms-libs</id>
            <url>https://repo.dotcms.com/artifactory/libs-release</url>
        </repository>
        <repository>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>dotcms-libs-snapshot</id>
            <url>https://repo.dotcms.com/artifactory/libs-snapshot-local</url>
        </repository>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>jitpack</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

</project>
