{
	"info": {
		"_postman_id": "06743017-e871-4014-81a1-7d902a501d1c",
		"name": "Tags Resource V2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5403727"
	},
	"item": [
		{
			"name": "Create test Site for Tags",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Retrieve and save the test Site ID where Tags will be saved\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"tagsSiteId\", jsonData.entity.identifier);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set (\"randomNum\", _.random (20,100));"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"siteName\":\"tags.host{{randomNum}}.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/site",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"site"
					]
				}
			},
			"response": []
		},
		{
			"name": "Save Tags in Site and System Host",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Retrieve and save the Tag ID to update it later\", function () {",
							"    const jsonData = pm.response.json();    ",
							"    const tag = jsonData.entity['non-global-tag-v2'];",
							"    pm.collectionVariables.set(\"tagForUpdateId\", tag.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotCMS.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"ownerId\":\"dotcms.org.1\",\n   \"tags\":{\n      \"default-site-tag-1-v2\":{\n         \"siteId\":\"8a7d5e23-da1e-420a-b4f0-471e7da8ea2d\",\n         \"persona\":false\n      },\n      \"global-tag-1-v2\":{\n         \"siteId\":\"SYSTEM_HOST\",\n         \"persona\":false\n      },\n      \"third-site-tag-v2\":{\n         \"siteId\":\"{{tagsSiteId}}\",\n         \"persona\":false\n      },\n      \"non-global-tag-v2\":{\n         \"siteId\":\"{{tagsSiteId}}\",\n         \"persona\":false\n      }\n   }\n}"
				},
				"url": {
					"raw": "{{serverURL}}/api/v2/tags/",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v2",
						"tags",
						""
					]
				},
				"description": "This tests the endpoint that brings back one specific App given the App-key."
			},
			"response": []
		},
		{
			"name": "Update Tag in test Site",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check that the updated Tag is being returned correctly\", function () {",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData.entity);",
							"    const tag = jsonData.entity['non-global-tag-v2-changed'];    ",
							"    pm.expect(tag).not.eql(undefined);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotCMS.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"siteId\":\"{{tagsSiteId}}\",\n   \"tagName\":\"non-global-tag-v2-changed\",\n   \"tagId\":\"{{tagForUpdateId}}\"\n}"
				},
				"url": {
					"raw": "{{serverURL}}/api/v2/tags/",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v2",
						"tags",
						""
					]
				},
				"description": "This tests the endpoint that brings back one specific App given the App-key."
			},
			"response": []
		},
		{
			"name": "List ALL Tags",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Verify that ALL four test Tags are listed\", function () {",
							"    let jsonData = pm.response.json().entity;",
							"    let size = Object.keys(jsonData).length;",
							"    pm.expect(size).to.be.greaterThan(0);",
							"    for (const key in jsonData) {",
							"        let tagObject = jsonData[key];",
							"        if(\"default-site-tag-1-v2\" === key){           ",
							"           pm.collectionVariables.set(\"defaultSiteTag\", tagObject);",
							"        } ",
							"        if(\"global-tag-1-v2\" === key) {           ",
							"           pm.collectionVariables.set(\"globalTag\", tagObject);",
							"        }",
							"        if(\"third-site-tag-v2\" === key) {           ",
							"           pm.collectionVariables.set(\"thirdSiteTag\", tagObject);",
							"        }",
							"        if(\"non-global-tag-v2-changed\" === key) {           ",
							"           pm.collectionVariables.set(\"nonGlobalTag\", tagObject);",
							"        }",
							"    }",
							"    pm.expect(pm.collectionVariables.get(\"defaultSiteTag\")).to.not.eql(undefined);",
							"    pm.expect(pm.collectionVariables.get(\"globalTag\")).to.not.eql(undefined);",
							"    pm.expect(pm.collectionVariables.get(\"thirdSiteTag\")).to.not.eql(undefined);",
							"    pm.expect(pm.collectionVariables.get(\"nonGlobalTag\")).to.not.eql(undefined);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotCMS.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{serverURL}}/api/v2/tags",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v2",
						"tags"
					]
				},
				"description": "This tests the endpoint that brings back one specific App given the App-key."
			},
			"response": []
		},
		{
			"name": "Get Tag by Name and Site",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check that there's at least one Tag matching the name 'default'\", function () {    ",
							"    let jsonData = pm.response.json();",
							"    let size = Object.keys(jsonData.entity).length;",
							"    pm.expect(size).to.be.gte(1);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotCMS.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{serverURL}}/api/v2/tags?name=default&siteId=8a7d5e23-da1e-420a-b4f0-471e7da8ea2d",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v2",
						"tags"
					],
					"query": [
						{
							"key": "name",
							"value": "default"
						},
						{
							"key": "siteId",
							"value": "8a7d5e23-da1e-420a-b4f0-471e7da8ea2d"
						}
					]
				},
				"description": "This tests the endpoint that brings back one specific App given the App-key."
			},
			"response": []
		},
		{
			"name": "Get Tag that does not exist",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"There must be not Tag matching the name 'xxx'\", function () {    ",
							"    let jsonData = pm.response.json();",
							"    let size = Object.keys(jsonData.entity).length;",
							"    pm.expect(size).to.be.eq(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotCMS.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{serverURL}}/api/v2/tags?name=xxx&siteId={{tagsSiteId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v2",
						"tags"
					],
					"query": [
						{
							"key": "name",
							"value": "xxx"
						},
						{
							"key": "siteId",
							"value": "{{tagsSiteId}}"
						}
					]
				},
				"description": "This tests the endpoint that brings back one specific App given the App-key."
			},
			"response": []
		},
		{
			"name": "Get Tag from non-existing Site",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP Status code must be 200\", function () {",
							"    pm.response.to.have.status(400);    ",
							"});",
							"",
							"pm.test(\"The 'error' attribute must be present\", function () {    ",
							"    let jsonData = pm.response.json();",
							"    let error = jsonData.error;",
							"    pm.expect(error).to.not.eql(undefined);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotCMS.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{serverURL}}/api/v2/tags?name=global&siteId=any-invalid-id",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v2",
						"tags"
					],
					"query": [
						{
							"key": "name",
							"value": "global"
						},
						{
							"key": "siteId",
							"value": "any-invalid-id"
						}
					]
				},
				"description": "This tests the endpoint that brings back one specific App given the App-key."
			},
			"response": []
		},
		{
			"name": "Get Tags owned by a User ID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);    ",
							"});",
							"",
							"pm.test(\"There must be at least one Tag owned by 'dotcms.org.1'\", function () {",
							"    var jsonData = pm.response.json();",
							"    let size = Object.keys(jsonData.entity).length;",
							"    pm.expect(size).to.be.greaterThan(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotCMS.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{serverURL}}/api/v2/tags/user/dotcms.org.1",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v2",
						"tags",
						"user",
						"dotcms.org.1"
					]
				},
				"description": "This tests the endpoint that brings back one specific App given the App-key."
			},
			"response": []
		},
		{
			"name": "Get Tag by its name",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Return the expected Tag by name and save its ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    let size = Object.keys(jsonData.entity).length;",
							"    pm.expect(size).to.be.greaterThan(0);",
							"    const keys = Object.keys(jsonData.entity);",
							"    const key = keys[0];",
							"    const id = jsonData.entity[key].id;",
							"    pm.collectionVariables.set(\"retrievedTagId\", id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotCMS.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{serverURL}}/api/v2/tags/third-site-tag-v2",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v2",
						"tags",
						"third-site-tag-v2"
					]
				},
				"description": "This tests the endpoint that brings back one specific App given the App-key."
			},
			"response": []
		},
		{
			"name": "Get Tag by its ID",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);    ",
							"});",
							"",
							"pm.test(\"Return the expected Tag by ID\", function () {",
							"    var jsonData = pm.response.json();",
							"    let size = Object.keys(jsonData.entity).length;",
							"    pm.expect(size).to.be.greaterThan(0);",
							"    const keys = Object.keys(jsonData.entity);",
							"    const key = keys[0];",
							"    pm.expect(key).equals(\"third-site-tag-v2\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotCMS.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{serverURL}}/api/v2/tags/{{retrievedTagId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v2",
						"tags",
						"{{retrievedTagId}}"
					]
				},
				"description": "This tests the endpoint that brings back one specific App given the App-key."
			},
			"response": []
		},
		{
			"name": "Delete a specific Tag",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let tagObject = pm.collectionVariables.get(\"nonGlobalTag\");",
							"pm.collectionVariables.set(\"deleteTagCandidateId\",tagObject.id);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"There must be no generated errors\", function () {",
							"    var jsonData = pm.response.json();",
							"    let errors = jsonData.errors.length;",
							"    pm.expect(errors).to.be.eq(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "=F5cp%@kvcAr9E+?",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotCMS.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{serverURL}}/api/v2/tags/{{tagForUpdateId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v2",
						"tags",
						"{{tagForUpdateId}}"
					]
				},
				"description": "This tests the endpoint that brings back one specific App given the App-key."
			},
			"response": []
		},
		{
			"name": "Delet a non-existing Tag",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP Status code must be 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"The error message must be present\", function () {",
							"    var jsonData = pm.response.json();",
							"    let errorMsg = jsonData.message;",
							"    pm.expect(errorMsg).to.not.eql(undefined);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotCMS.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{serverURL}}/api/v2/tags/0",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v2",
						"tags",
						"0"
					]
				},
				"description": "This tests the endpoint that brings back one specific App given the App-key."
			},
			"response": []
		},
		{
			"name": "Import Tags from CSV file",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test.skip(\"HTTP Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"There must be no generated errors\", function () {",
							"    var jsonData = pm.response.json();",
							"    let errors = jsonData.errors.length;",
							"    pm.expect(errors).to.be.eq(0);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotCMS.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "resources/csv_sample_file.csv"
						},
						{
							"key": "",
							"value": "",
							"contentType": "application/json",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{serverURL}}/api/v2/tags/import",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v2",
						"tags",
						"import"
					]
				},
				"description": "This tests the file import. "
			},
			"response": []
		},
		{
			"name": "Link a Tag to a specific Inode",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"HTTP Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"The 'fieldVarName' must be '1000'\", function () {",
							"    var jsonData = pm.response.json();",
							"    let fieldVarName = jsonData.entity[0].fieldVarName;",
							"    pm.expect(fieldVarName).to.equal(\"1000\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotCMS.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{serverURL}}/api/v2/tags/tag/{{retrievedTagId}}/inode/1000",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v2",
						"tags",
						"tag",
						"{{retrievedTagId}}",
						"inode",
						"1000"
					]
				},
				"description": "This tests the endpoint that brings back one specific App given the App-key."
			},
			"response": []
		}
	],
	"auth": {
		"type": "basic"
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}