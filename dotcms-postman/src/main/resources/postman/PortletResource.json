{
	"info": {
		"_postman_id": "55fd5caa-08b8-474e-82bf-f181bd7df8b1",
		"name": "PortletResource",
		"description": "Contains test for portlet resources",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "27636414"
	},
	"item": [
		{
			"name": "GetCreateContentURL",
			"item": [
				{
					"name": "Get calendarEvent success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json().entity;",
									"",
									"pm.test(\"Check edit_event is present since contentType is event\", function () {",
									"    pm.expect(jsonData).to.include(\"edit_event\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"password": "admin",
								"username": "admin@dotcms.com",
								"showPassword": false
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{serverURL}}/api/v1/portlet/_actionurl/calendarEvent",
						"description": "Test get portlet operation for calendar-Event"
					},
					"response": []
				},
				{
					"name": "Get webpagecontent success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json().entity;",
									"",
									"pm.test(\"Check edit_contentlet is present since contentType is anything but Event\", function () {",
									"    pm.expect(jsonData).to.include(\"edit_contentlet\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"password": "admin",
								"username": "admin@dotcms.com",
								"showPassword": false
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{serverURL}}/api/v1/portlet/_actionurl/webpagecontent"
					},
					"response": []
				},
				{
					"name": "Get webpagecontent success Case insensitive",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json().entity;",
									"",
									"pm.test(\"Check edit_contentlet is present since contentType is anything but Event\", function () {",
									"    pm.expect(jsonData).to.include(\"edit_contentlet\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"password": "admin",
								"username": "admin@dotcms.com",
								"showPassword": false
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{serverURL}}/api/v1/portlet/_actionurl/WeBpAGecONTEnt",
						"description": "get the create content url sending the contentType variable name using mixed case"
					},
					"response": []
				},
				{
					"name": "Get contentType not exsits NotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"password": "admin",
								"username": "admin@dotcms.com",
								"showPassword": false
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{serverURL}}/api/v1/portlet/_actionurl/contentTypeNotExist",
						"description": "Test that when we hit a non existing cotnent-type we get the appropriate 404"
					},
					"response": []
				},
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{serverURL}}/api/v1/logout"
					},
					"response": []
				},
				{
					"name": "Get webpagecontent no user sent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": "{{serverURL}}/api/v1/portlet/_actionurl/webpagecontent"
					},
					"response": []
				}
			],
			"description": "Tests for the getCreateContentUrl endpoint"
		},
		{
			"name": "Test Update Custom Content Portlet",
			"item": [
				{
					"name": "Create new custom portlet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"pm.collectionVariables.set(\"portletId\", jsonData.entity.portlet);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"password": "admin",
								"username": "admin@dotcms.com"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"portletId\": \"newTestPorlet{{timeMilis}}\",\n    \"portletName\": \"myCustom\",\n    \"baseTypes\": \"CONTENT\",\n    \"contentTypes\": \"webPageContent\",\n    \"dataViewMode\": \"card\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{serverURL}}/api/v1/portlet/custom",
						"description": "New Site to test find subfolders by path"
					},
					"response": []
				},
				{
					"name": "Try to create custom portlet with same id shoud fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code should be 404, the portlet already exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"password": "admin",
								"username": "admin@dotcms.com"
							}
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"portletId\": \"{{portletId}}\",\n    \"portletName\": \"myCustom\",\n    \"baseTypes\": \"CONTENT\",\n    \"contentTypes\": \"\",\n    \"dataViewMode\": \"card\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{serverURL}}/api/v1/portlet/custom",
						"description": "New Site to test find subfolders by path"
					},
					"response": []
				},
				{
					"name": "Get portlet before update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Portlet exists\", function () {",
									"",
									"    var jsonData = pm.response.json();",
									"    let portletId = pm.collectionVariables.get(\"portletId\");",
									"",
									"    pm.expect(jsonData.entity.response.portletId).to.eql(portletId);",
									"    pm.expect(jsonData.entity.response.initParams.dataViewMode).to.eql(\"card\");",
									"    pm.expect(jsonData.entity.response.initParams.contentTypes).to.eql(\"webPageContent\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"password": "admin",
								"username": "admin@dotcms.com"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{serverURL}}/api/v1/portlet/{{portletId}}",
						"description": "Retrieves portlet details given its id"
					},
					"response": []
				},
				{
					"name": "Update custom portlet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Status code should be 200, portlet updated\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"password": "admin",
								"username": "admin@dotcms.com"
							}
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"portletId\": \"{{portletId}}\",\n    \"portletName\": \"updated name\",\n    \"baseTypes\": \"CONTENT\",\n    \"contentTypes\": \"\",\n    \"dataViewMode\": \"list\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{serverURL}}/api/v1/portlet/custom",
						"description": "New Site to test find subfolders by path"
					},
					"response": []
				},
				{
					"name": "Get portlet after update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Portlet exists\", function () {",
									"",
									"    var jsonData = pm.response.json();",
									"    let portletId = pm.collectionVariables.get(\"portletId\");",
									"",
									"    pm.expect(jsonData.entity.response.portletId).to.eql(portletId);",
									"    pm.expect(jsonData.entity.response.initParams.dataViewMode).to.eql(\"list\");",
									"    pm.expect(jsonData.entity.response.initParams.contentTypes).to.eql(\"\");",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": {
								"password": "admin",
								"username": "admin@dotcms.com"
							}
						},
						"method": "GET",
						"header": [],
						"url": "{{serverURL}}/api/v1/portlet/{{portletId}}",
						"description": "Retrieves portlet details given its id"
					},
					"response": []
				}
			]
		},
		{
			"name": "doesUserHaveAccessToPortlet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"",
							"    pm.expect(jsonData.entity.response).to.eql(true);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "admin",
						"username": "admin@dotcms.com"
					}
				},
				"method": "GET",
				"header": [],
				"url": "{{serverURL}}/api/v1/portlet/permissions/_doesuserhaveaccess",
				"description": "Returns boolean indicating if a user has permissions to access a portlet given the portlet id"
			},
			"response": []
		},
		{
			"name": "Create Custom Content Portlet restricted Content-type",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 400\", function () {",
							"    pm.response.to.have.status(400);",
							"",
							"    var jsonData = pm.response.json();",
							"",
							"    pm.expect(jsonData.message).to.eql(\"Invalid attempt to create Portlet for restricted Content Type Host. \");",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "admin",
						"username": "admin@dotcms.com"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"portletId\": \"myCustom\",\n    \"portletName\": \"myCustom\",\n    \"baseTypes\": \"CONTENT\",\n    \"contentTypes\": \"Host\",\n    \"dataViewMode\": \"card\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{serverURL}}/api/v1/portlet/custom",
				"description": "This test  attempts to create a custom content portlet for The Restricted Content type Host"
			},
			"response": []
		},
		{
			"name": "createCustomContentPortlet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"",
							"    pm.expect(jsonData.entity.portlet).to.eql(\"c_myCustom\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "admin",
						"username": "admin@dotcms.com"
					}
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"portletId\": \"myCustom\",\n    \"portletName\": \"myCustom\",\n    \"baseTypes\": \"CONTENT\",\n    \"dataViewMode\": \"card\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{serverURL}}/api/v1/portlet/custom",
				"description": "This test creates a custom content portlet for CONTENT base type"
			},
			"response": []
		},
		{
			"name": "getPortlet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"",
							"    pm.expect(jsonData.entity.response.portletId).to.eql(\"c_myCustom\");",
							"    pm.expect(jsonData.entity.response.initParams.dataViewMode).to.eql(\"card\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "admin",
						"username": "admin@dotcms.com"
					}
				},
				"method": "GET",
				"header": [],
				"url": "{{serverURL}}/api/v1/portlet/c_myCustom",
				"description": "Retrieves portlet details given its id"
			},
			"response": []
		},
		{
			"name": "getPortlet Expect 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 404\", function () {",
							"    pm.response.to.have.status(404);",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "admin",
						"username": "admin@dotcms.com"
					}
				},
				"method": "GET",
				"header": [],
				"url": "{{serverURL}}/api/v1/portlet/nonExisingPortlet",
				"description": "expect a 404 out of a non valid portlet identifier"
			},
			"response": []
		},
		{
			"name": "getLayouts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"    pm.collectionVariables.set(\"firstReturnedLayout\", jsonData.entity[0].id);",
							"    ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "admin",
						"username": "admin@dotcms.com"
					}
				},
				"method": "GET",
				"header": [],
				"url": "{{serverURL}}/api/v1/menu",
				"description": "Retrieves menu structure"
			},
			"response": []
		},
		{
			"name": "addCustomContentPortletToLayout",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"",
							"    pm.expect(jsonData.entity.portlet).to.eql(\"c_myCustom\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "admin",
						"username": "admin@dotcms.com"
					}
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{serverURL}}/api/v1/portlet/custom/c_myCustom/_addtolayout/{{firstReturnedLayout}}",
				"description": "This test creates a custom content portlet for CONTENT base type"
			},
			"response": []
		},
		{
			"name": "addCustomContentPortletToLayout Invalid Custom  Expect 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "admin",
						"username": "admin@dotcms.com"
					}
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"portletId\": \"myCustom\",\n    \"portletName\": \"myCustom\",\n    \"baseTypes\": \"CONTENT\",\n    \"dataViewMode\": \"card\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{serverURL}}/api/v1/portlet/custom/nonValidId/_addtolayout/{{firstReturnedLayout}}",
				"description": "add a Custom Content portlet To a layout Invalid Custom Expect 404. Because of one of the params is inexistent"
			},
			"response": []
		},
		{
			"name": "addCustomContentPortletToLayout Invalid Layout  Expect 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "admin",
						"username": "admin@dotcms.com"
					}
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"portletId\": \"myCustom\",\n    \"portletName\": \"myCustom\",\n    \"baseTypes\": \"CONTENT\",\n    \"dataViewMode\": \"card\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{serverURL}}/api/v1/portlet/custom/c_myCustom/_addtolayout/nonValidLayout",
				"description": "add Custom Content portlet To Layout an Invalid Layout is passed Expect 404"
			},
			"response": []
		},
		{
			"name": "deleteCustomPortlet",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"",
							"    pm.expect(jsonData.entity.message).to.eql(\"c_myCustom deleted\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": {
						"password": "admin",
						"username": "admin@dotcms.com"
					}
				},
				"method": "DELETE",
				"header": [],
				"url": "{{serverURL}}/api/v1/portlet/custom/c_myCustom",
				"description": "Deletes a custom content portlet"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"pm.collectionVariables.set(\"timeMilis\", Date.now());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "firstReturnedLayout",
			"value": ""
		},
		{
			"key": "timeMilis",
			"value": ""
		},
		{
			"key": "portletId",
			"value": ""
		}
	]
}