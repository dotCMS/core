{
	"info": {
		"_postman_id": "ca8ea061-cf7f-411f-884b-f7f1235a6232",
		"name": "Bundle Resource",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4500400"
	},
	"item": [
		{
			"name": "deleteBundlesByIdentifiers",
			"item": [
				{
					"name": "not valid user",
					"item": [
						{
							"name": "Delete Bundle By Id Non User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401, You need credentials\", function () {",
											"    pm.response.to.have.status(401);",
											"});",
											"",
											"",
											"",
											"pm.test(\"Valid response\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n\t\"identifiers\":[\"876dc8d8-18c1-4eb0-815e-981619635532\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/bundle/ids",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"bundle",
										"ids"
									]
								},
								"description": "Tries to call a delete bundle by id, without user."
							},
							"response": []
						}
					]
				},
				{
					"name": "non existing bundle",
					"item": [
						{
							"name": "Delete Bundle Non-Existing  Bundles",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code should be 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Valid response\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Removing bundles in a separated process\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n\t\"identifiers\":[\"n0ex1st-18c1-4eb0-815e-981619635532\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/bundle/ids",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"bundle",
										"ids"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "existing bundle",
					"item": [
						{
							"name": "Create a Content Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"contentTypeId\", jsonData.entity[0].id);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultType\":false,\n    \"icon\":null,\n    \"fixed\":false,\n    \"system\":false,\n    \"clazz\":\"com.dotcms.contenttype.model.type.ImmutableSimpleContentType\",\n    \"description\":\"\",\n    \"host\":\"8a7d5e23-da1e-420a-b4f0-471e7da8ea2d\",\n    \"folder\":\"SYSTEM_FOLDER\",\n    \"name\":\"bundle removal contentlet type\",\n    \"systemActionMappings\":{\"NEW\":\"\"},\n    \"workflow\":[\"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/contenttype",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"contenttype"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Field to Content Type",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"layout\":[\n        {\"divider\":{\n            \"clazz\":\"com.dotcms.contenttype.model.field.ImmutableRowField\",\n            \"contentTypeId\":\"{{contentTypeId}}\",\n            \"dataType\":\"SYSTEM\",\n            \"fieldContentTypeProperties\":[],\n            \"fieldType\":\"Row\",\n            \"fieldTypeLabel\":\"Row\",\n            \"fieldVariables\":[],\n            \"fixed\":false,\n            \"iDate\":1667572217000,\n            \"indexed\":false,\n            \"listed\":false,\n            \"modDate\":1667572217000,\n            \"name\":\"Row Field\",\n            \"readOnly\":false,\n            \"required\":false,\n            \"searchable\":false,\n            \"sortOrder\":-1,\n            \"unique\":false},\n            \"columns\":[\n                {\n                    \"columnDivider\":{\n                        \"clazz\":\"com.dotcms.contenttype.model.field.ImmutableColumnField\",\n                        \"contentTypeId\":\"{{contentTypeId}}\",\n                        \"dataType\":\"SYSTEM\",\n                        \"fieldContentTypeProperties\":[],\n                        \"fieldType\":\"Column\",\n                        \"fieldTypeLabel\":\"Column\",\n                        \"fieldVariables\":[],\n                        \"fixed\":false,\n                        \"iDate\":1667572217000,\n                        \"indexed\":false,\n                        \"listed\":false,\n                        \"modDate\":1667572217000,\n                        \"name\":\"Column Field\",\n                        \"readOnly\":false,\n                        \"required\":false,\n                        \"searchable\":false,\n                        \"sortOrder\":-1,\n                        \"unique\":false\n                    },\n                    \"fields\":[\n                        {\n                            \"clazz\":\"com.dotcms.contenttype.model.field.ImmutableTextField\",\n                            \"name\":\"title\",\n                            \"dataType\":\"TEXT\",\n                            \"regexCheck\":\"\",\n                            \"defaultValue\":\"\",\n                            \"hint\":\"\",\n                            \"required\":false,\n                            \"searchable\":false,\n                            \"indexed\":false,\n                            \"listed\":false,\n                            \"unique\":false,\n                            \"id\":null\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v3/contenttype/{{contentTypeId}}/fields/move",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v3",
										"contenttype",
										"{{contentTypeId}}",
										"fields",
										"move"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create contentlet",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"content1_id\", jsonData.entity.identifier);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \n    \"contentlet\" : {\n        \"title\" : \"content_1\",\n        \"languageId\" : 1,\n        \"stInode\": \"{{contentTypeId}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"workflow",
										"actions",
										"default",
										"fire",
										"PUBLISH"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Content type to Bundle",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bundle uploaded sucessfully\", function () {",
											"    pm.response.to.have.status(200);",
											"",
											"    var jsonData = pm.response.json();",
											"    pm.collectionVariables.set(\"bundleId\", jsonData[\"bundleId\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Origin",
										"type": "text",
										"value": "{{serverURL}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{serverURL}}/DotAjaxDirector/com.dotcms.publisher.ajax.RemotePublishAjaxAction/cmd/addToBundle?assetIdentifier={{contentTypeId}}&bundleName=test_bundle_removal_by_id",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"DotAjaxDirector",
										"com.dotcms.publisher.ajax.RemotePublishAjaxAction",
										"cmd",
										"addToBundle"
									],
									"query": [
										{
											"key": "assetIdentifier",
											"value": "{{contentTypeId}}"
										},
										{
											"key": "bundleName",
											"value": "test_bundle_removal_by_id"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Content to Bundle",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bundle uploaded sucessfully\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Origin",
										"type": "text",
										"value": "{{serverURL}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{serverURL}}/DotAjaxDirector/com.dotcms.publisher.ajax.RemotePublishAjaxAction/cmd/addToBundle?assetIdentifier={{content1_id}}&bundleName=test_bundle_removal_by_id",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"DotAjaxDirector",
										"com.dotcms.publisher.ajax.RemotePublishAjaxAction",
										"cmd",
										"addToBundle"
									],
									"query": [
										{
											"key": "assetIdentifier",
											"value": "{{content1_id}}"
										},
										{
											"key": "bundleName",
											"value": "test_bundle_removal_by_id"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Bundle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code should be 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Valid response\", function () {",
											"    pm.expect(pm.response.text()).to.include(\"Removing bundles in a separated process\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\n\t\"identifiers\":[\"{{bundleId}}\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/bundle/ids",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"bundle",
										"ids"
									]
								}
							},
							"response": []
						},
						{
							"name": "Check removed bundle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var expectedHttpStatus = 404;",
											"var maxNumberOfTries = 5;",
											"var sleepBetweenTries = 500;",
											"",
											"if (!pm.collectionVariables.get(\"getBundleTries\")) {",
											"    pm.collectionVariables.set(\"getBundleTries\", 1);",
											"}",
											"",
											"if ((pm.response.code != expectedHttpStatus) && (pm.collectionVariables.get(\"getBundleTries\") < maxNumberOfTries)) {",
											"     var tries = parseInt(pm.collectionVariables.get(\"getBundleTries\"), 10);",
											"     pm.collectionVariables.set(\"getBundleTries\", tries + 1);",
											"     setTimeout(function() {}, sleepBetweenTries);",
											"     postman.setNextRequest(\"Check removed bundle\");",
											" } else {",
											"     pm.collectionVariables.unset(\"getBundleTries\");",
											"     pm.test(\"Status code for get bundle is \" + expectedHttpStatus, function () {",
											"          pm.response.to.have.status(expectedHttpStatus);",
											"     });",
											"}",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{serverURL}}/api/bundle/{{bundleId}}/assets",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"bundle",
										"{{bundleId}}",
										"assets"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "Path: /api/bundle/ids",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "deleteBundlesOlderThan",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Bundle by Future Date",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/bundle/olderthan/2100-02-05T02:05:17+00:00",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle",
								"olderthan",
								"2100-02-05T02:05:17+00:00"
							]
						},
						"description": "Tries to delete a bundle by date, in a far far future day"
					},
					"response": []
				},
				{
					"name": "Delete Bundle by Date Non User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/bundle/olderthan/2019-02-05T02:05:17+00:00",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle",
								"olderthan",
								"2019-02-05T02:05:17+00:00"
							]
						},
						"description": "Tries to delete a bundle by date, without user"
					},
					"response": []
				},
				{
					"name": "Delete Bundle by Date Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/bundle/olderthan/2019-02-05T02:05:17+00:00",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle",
								"olderthan",
								"2019-02-05T02:05:17+00:00"
							]
						},
						"description": "Tries to delete a bundle by date"
					},
					"response": []
				}
			],
			"description": "Path: api/bundle/olderthan/{olderThan}",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "deleteAllFail",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Bundle by Fail Non User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/bundle/all/fail",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle",
								"all",
								"fail"
							]
						},
						"description": "Tries to delete a bundle failed, without user"
					},
					"response": []
				},
				{
					"name": "Delete Bundle Failed Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/bundle/all/fail",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle",
								"all",
								"fail"
							]
						},
						"description": "Tries to delete a bundle failed"
					},
					"response": []
				}
			],
			"description": "Path: api/bundle/all/fail",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "deleteAllSuccess",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Bundle by Success Non User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/bundle/all/success",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle",
								"all",
								"success"
							]
						},
						"description": "Tries to delete a bundle success, without user"
					},
					"response": []
				},
				{
					"name": "Delete Bundle Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, You need credentials\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/bundle/all/success",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle",
								"all",
								"success"
							]
						},
						"description": "Tries to delete a bundle failed"
					},
					"response": []
				}
			],
			"description": "Path: /api/budle/all/success"
		},
		{
			"name": "deleteAll",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Bundle by All Non User ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/bundle/all",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle",
								"all"
							]
						},
						"description": "Tries to delete a bundle all, without user"
					},
					"response": []
				},
				{
					"name": "Delete Bundle All",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/bundle/all",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle",
								"all"
							]
						},
						"description": "Tries to delete a bundle all"
					},
					"response": []
				}
			],
			"description": "Path: /api/bundle/all"
		},
		{
			"name": "Upload Bundle",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "GivenNoUser_ShouldRespond401",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response code is 401\", pm.response.to.have.status(401));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Disposition",
								"type": "text",
								"value": "attachment"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "resources/BundleResource/testBundle.tar.gz"
								}
							]
						},
						"url": {
							"raw": "{{serverURL}}/api/bundle",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle"
							],
							"query": [
								{
									"key": "AUTH_TOKEN",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GivenValidBundle_ShouldUpload",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Bundle uploaded sucessfully\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData);",
									"",
									"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"testBundle.tar.gz\");",
									"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Disposition",
								"type": "text",
								"value": "attachment"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"contentType": "application/tar+gzip ",
									"type": "file",
									"src": "resources/BundleResource/testBundle.tar.gz"
								}
							]
						},
						"url": {
							"raw": "{{serverURL}}/api/bundle/sync",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle",
								"sync"
							],
							"query": [
								{
									"key": "AUTH_TOKEN",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Imports a Bundle that includes:\n*  A piece of content of type \"Rich text\" with \"test Content\" as title and body"
					},
					"response": []
				},
				{
					"name": "ContentShouldExist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Content imported in bundle exists\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    var contentlet = jsonData[\"contentlets\"][0];",
									"    pm.expect(contentlet[\"identifier\"], \"FAILED identifier\").equal(\"d84e5b70-ae46-42a8-80ff-62ba9d7095d5\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Disposition",
								"type": "text",
								"value": "attachment"
							}
						],
						"url": {
							"raw": "{{serverURL}}/api/content/id/d84e5b70-ae46-42a8-80ff-62ba9d7095d5",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"content",
								"id",
								"d84e5b70-ae46-42a8-80ff-62ba9d7095d5"
							],
							"query": [
								{
									"key": "AUTH_TOKEN",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Imports a Bundle that includes:\n*  A piece of content of type \"Rich text\" with \"test Content\" as title and body"
					},
					"response": []
				},
				{
					"name": "GivenValidBundle_ShouldUploadAsync",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Bundle uploaded sucessfully\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData);",
									"",
									"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"testBundle.tar.gz\");",
									"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Disposition",
								"type": "text",
								"value": "attachment"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"contentType": "application/tar+gzip ",
									"type": "file",
									"src": "resources/BundleResource/testBundle.tar.gz"
								}
							]
						},
						"url": {
							"raw": "{{serverURL}}/api/bundle",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle"
							],
							"query": [
								{
									"key": "AUTH_TOKEN",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Imports a Bundle that includes:\n*  A piece of content of type \"Rich text\" with \"test Content\" as title and body"
					},
					"response": []
				}
			]
		},
		{
			"name": "Download Bundle",
			"item": [
				{
					"name": "Download_BundleId Not Exists_NotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 404\", function () {",
									"    pm.response.to.have.status(404);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/bundle/_download/bundle-id-not-exist",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle",
								"_download",
								"bundle-id-not-exist"
							]
						},
						"description": "Tries to download a bundle but the bundleId sent does not belong to any bundle, so it returns a 404."
					},
					"response": []
				}
			]
		},
		{
			"name": "Generate Bundle",
			"item": [
				{
					"name": "Generate_BundleId Not Exists_NotFound",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 404\", function () {",
									"    pm.response.to.have.status(404);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"bundleId\":\"bundle-id-not-exist\",\n    \"filterKey\":\"Intelligent.yml\",\n    \"operation\":\"0\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/bundle/_generate",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle",
								"_generate"
							]
						},
						"description": "Tries to generate a bundle but the bundleId sent does not belong to any bundle, so it returns a 404."
					},
					"response": []
				}
			]
		},
		{
			"name": "assets",
			"item": [
				{
					"name": "exists bundle",
					"item": [
						{
							"name": "Upload bundle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bundle uploaded sucessfully\", function () {",
											"    pm.response.to.have.status(200);",
											"",
											"    var jsonData = pm.response.json();",
											"    console.log(jsonData);",
											"",
											"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"get_asset_test.tar.gz\");",
											"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/octet-stream"
									},
									{
										"key": "Content-Disposition",
										"type": "text",
										"value": "attachment"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"contentType": "application/tar+gzip ",
											"type": "file",
											"src": "resources/BundleResource/get_asset_test.tar.gz"
										}
									]
								},
								"url": {
									"raw": "{{serverURL}}/api/bundle/sync",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"bundle",
										"sync"
									],
									"query": [
										{
											"key": "AUTH_TOKEN",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Imports a Bundle that includes:\n*  A piece of content of type \"Rich text\" with \"test Content\" as title and body"
							},
							"response": []
						},
						{
							"name": "get assets uploaded bundle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bundle uploaded sucessfully\", function () {",
											"    pm.response.to.have.status(200);",
											"",
											"    var jsonData = pm.response.json();",
											"    pm.expect(4).to.eq(jsonData.length);",
											"",
											"    jsonData.forEach(item => {",
											"        if (item.type === \"contentlet\" && item.isHtmlPage){",
											"            pm.expect(\"Page Asset\").to.eq(item.content_type_name);",
											"            pm.expect(\"892662d008a2cdfcfdd4f00e138df6fe\").to.eq(item.asset);",
											"            pm.expect(\"page_test\").to.eq(item.title);",
											"            pm.expect(true).to.eq(item.isHtmlPage);",
											"            pm.collectionVariables.set(\"bundleHtmlPageId\", item.asset);",
											"        } else if (item.type === \"contentlet\") {",
											"            pm.expect(\"type_1\").to.eq(item.content_type_name);",
											"            pm.expect(\"ad7551b54313c244e7110608c0cda9fe\").to.eq(item.asset);",
											"            pm.expect(\"Testing\").to.eq(item.title);",
											"            pm.collectionVariables.set(\"bundleContentItemId\", item.asset);",
											"        } else if (item.type === \"contenttype\"){",
											"            pm.expect(\"type_1\").to.eq(item.title);",
											"            pm.collectionVariables.set(\"bundleTypeId\", item.asset);",
											"        } else if (item.type === \"language\"){",
											"            pm.expect(\"Language\").to.eq(item.content_type_name);",
											"            pm.expect(\"TE\").to.eq(item.country_code);",
											"            pm.expect(\"te\").to.eq(item.language_code);",
											"            pm.expect(\"te(TE)\").to.eq(item.title);",
											"            pm.collectionVariables.set(\"bundleLanguageId\", item.asset);",
											"        } else {",
											"            px.eq(true, false);",
											"        }",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{serverURL}}/api/bundle/get_asset_test/assets",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"bundle",
										"get_asset_test",
										"assets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Content type to Bundle",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"bundleName = 'bundleName-' + new Date().getMilliseconds();",
											"pm.collectionVariables.set(\"bundleName\", bundleName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bundle uploaded sucessfully\", function () {",
											"    pm.response.to.have.status(200);",
											"",
											"    var jsonData = pm.response.json();",
											"    pm.collectionVariables.set(\"bundleId\", jsonData[\"bundleId\"]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Origin",
										"type": "text",
										"value": "{{serverURL}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{serverURL}}/DotAjaxDirector/com.dotcms.publisher.ajax.RemotePublishAjaxAction/cmd/addToBundle?assetIdentifier={{bundleTypeId}}&bundleName=test_assets",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"DotAjaxDirector",
										"com.dotcms.publisher.ajax.RemotePublishAjaxAction",
										"cmd",
										"addToBundle"
									],
									"query": [
										{
											"key": "assetIdentifier",
											"value": "{{bundleTypeId}}"
										},
										{
											"key": "bundleName",
											"value": "test_assets"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Content to Bundle",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"bundleName = 'bundleName-' + new Date().getMilliseconds();",
											"pm.collectionVariables.set(\"bundleName\", bundleName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bundle uploaded sucessfully\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Origin",
										"type": "text",
										"value": "{{serverURL}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{serverURL}}/DotAjaxDirector/com.dotcms.publisher.ajax.RemotePublishAjaxAction/cmd/addToBundle?assetIdentifier={{bundleContentItemId}}&bundleName=test_assets",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"DotAjaxDirector",
										"com.dotcms.publisher.ajax.RemotePublishAjaxAction",
										"cmd",
										"addToBundle"
									],
									"query": [
										{
											"key": "assetIdentifier",
											"value": "{{bundleContentItemId}}"
										},
										{
											"key": "bundleName",
											"value": "test_assets"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Language to Bundle",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"bundleName = 'bundleName-' + new Date().getMilliseconds();",
											"pm.collectionVariables.set(\"bundleName\", bundleName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bundle uploaded sucessfully\", function () {",
											"    pm.response.to.have.status(200);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Origin",
										"type": "text",
										"value": "{{serverURL}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{serverURL}}/DotAjaxDirector/com.dotcms.publisher.ajax.RemotePublishAjaxAction/cmd/addToBundle?assetIdentifier={{bundleLanguageId}}&bundleName=test_assets",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"DotAjaxDirector",
										"com.dotcms.publisher.ajax.RemotePublishAjaxAction",
										"cmd",
										"addToBundle"
									],
									"query": [
										{
											"key": "assetIdentifier",
											"value": "{{bundleLanguageId}}"
										},
										{
											"key": "bundleName",
											"value": "test_assets"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Page to Bundle",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"bundleName = 'bundleName-' + new Date().getMilliseconds();",
											"pm.collectionVariables.set(\"bundleName\", bundleName);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bundle uploaded sucessfully\", function () {",
											"    pm.response.to.have.status(200);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Origin",
										"type": "text",
										"value": "{{serverURL}}"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": []
								},
								"url": {
									"raw": "{{serverURL}}/DotAjaxDirector/com.dotcms.publisher.ajax.RemotePublishAjaxAction/cmd/addToBundle?assetIdentifier={{bundleHtmlPageId}}&bundleName=test_assets",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"DotAjaxDirector",
										"com.dotcms.publisher.ajax.RemotePublishAjaxAction",
										"cmd",
										"addToBundle"
									],
									"query": [
										{
											"key": "assetIdentifier",
											"value": "{{bundleHtmlPageId}}"
										},
										{
											"key": "bundleName",
											"value": "test_assets"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get assets generated bundle",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bundle uploaded sucessfully\", function () {",
											"    pm.response.to.have.status(200);",
											"",
											"    var jsonData = pm.response.json();",
											"    pm.expect(4).to.eq(jsonData.length);",
											"",
											"    jsonData.forEach(item => {",
											"        if (item.type === \"contentlet\" && item.isHtmlPage){",
											"            pm.expect(\"Page Asset\").to.eq(item.content_type_name);",
											"            pm.expect(\"892662d008a2cdfcfdd4f00e138df6fe\").to.eq(item.asset);",
											"            pm.expect(\"page_test\").to.eq(item.title);",
											"            pm.expect(true).to.eq(item.isHtmlPage);",
											"        } else if (item.type === \"contentlet\") {",
											"            pm.expect(\"type_1\").to.eq(item.content_type_name);",
											"            pm.expect(\"ad7551b54313c244e7110608c0cda9fe\").to.eq(item.asset);",
											"            pm.expect(\"Testing\").to.eq(item.title);",
											"        } else if (item.type === \"contenttype\"){",
											"            pm.expect(\"type_1\").to.eq(item.title);",
											"",
											"        } else if (item.type === \"language\"){",
											"            pm.expect(\"Language\").to.eq(item.content_type_name);",
											"            pm.expect(\"TE\").to.eq(item.country_code);",
											"            pm.expect(\"te\").to.eq(item.language_code);",
											"            pm.expect(\"te(TE)\").to.eq(item.title);",
											"        } else {",
											"            px.eq(true, false);",
											"        }",
											"    });",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{serverURL}}/api/bundle/{{bundleId}}/assets",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"bundle",
										"{{bundleId}}",
										"assets"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "not exists bundle",
					"item": [
						{
							"name": "get assets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bundle uploaded sucessfully\", function () {",
											"    pm.response.to.have.status(404);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{serverURL}}/api/bundle/not_exists/assets",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"bundle",
										"not_exists",
										"assets"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "no valid user",
					"item": [
						{
							"name": "logout",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{serverURL}}/api/v1/logout",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"logout"
									]
								}
							},
							"response": []
						},
						{
							"name": "get assets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bundle uploaded sucessfully\", function () {",
											"    pm.response.to.have.status(401);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{serverURL}}/api/bundle/{{bundleId}}/assets",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"bundle",
										"{{bundleId}}",
										"assets"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "bundleName",
			"value": "bundleName-544"
		},
		{
			"key": "bundleId",
			"value": "01FPJVAJE4MHGF9QDDC66SBH9N"
		},
		{
			"key": "bundleTypeId",
			"value": ""
		},
		{
			"key": "bundleContentItemId",
			"value": ""
		},
		{
			"key": "bundleLanguageId",
			"value": ""
		},
		{
			"key": "bundleHtmlPageId",
			"value": ""
		},
		{
			"key": "contentTypeId",
			"value": ""
		},
		{
			"key": "content1_id",
			"value": ""
		}
	]
}