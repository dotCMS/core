{
	"info": {
		"_postman_id": "d1e460bd-5b8f-40b6-9bfd-20a784629378",
		"name": "WebAssets",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10041132"
	},
	"item": [
		{
			"name": "Create folder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var jsonData = pm.response.json(); ",
							"    pm.collectionVariables.set(\"folderId\", jsonData[\"entity\"][0][\"identifier\"]);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\"/web_assets\"]\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/folder/createfolders/default",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"folder",
						"createfolders",
						"default"
					]
				},
				"description": "We're simply creating a folder required by our test"
			},
			"response": []
		},
		{
			"name": "Upload file in folder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var jsonData = pm.response.json(); ",
							"    pm.collectionVariables.set(\"assetId\", jsonData.entity.identifier);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "json",
							"value": "{\n  \"contentlet\":{\n     \"contentType\":\"FileAsset\",\n     \"languageId\":1,\n     \"fileName\":\"make-my-day.jpeg\",\n     \"title\":\"make-my-day\",\n     \"hostFolder\":\"{{folderId}}\"\n  }   \n}\n",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "resources/WebAssets/make-my-day.jpeg"
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"workflow",
						"actions",
						"default",
						"fire",
						"PUBLISH"
					]
				},
				"description": "Here we're uploading a file into the previously created folder"
			},
			"response": []
		},
		{
			"name": "Upload file in root",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var jsonData = pm.response.json(); ",
							"    pm.collectionVariables.set(\"assetId\", jsonData.entity.identifier);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "json",
							"value": "{\n  \"contentlet\":{\n     \"contentType\":\"FileAsset\",\n     \"languageId\":1,\n     \"fileName\":\"odisea.pdf\",\n     \"title\":\"odisea\",\n     \"hostFolder\":\"8a7d5e23-da1e-420a-b4f0-471e7da8ea2d\"\n  }   \n}\n",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "resources/WebAssets/odisea.pdf"
						},
						{
							"key": "",
							"value": "",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"workflow",
						"actions",
						"default",
						"fire",
						"PUBLISH"
					]
				},
				"description": "We need to verify we can access stuff directly under root folder"
			},
			"response": []
		},
		{
			"name": "CreateLanguage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () { pm.response.to.be.ok });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"languageCode\":\"es\",\n\t\"language\":\"Espanol\", \n\t\"countryCode\":\"CAN\", \n\t\"country\":\"Canada\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v2/languages",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v2",
						"languages"
					]
				},
				"description": "a valid existing lang will be required to test trying to access assets under a different lang other than the one they were created with."
			},
			"response": []
		},
		{
			"name": "WebAsset :: Look up folder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"folder name check\", function () {",
							"    pm.expect(jsonData.entity.name).to.eql('web_assets');",
							"    ",
							"});",
							"",
							"pm.collectionVariables.set(\"siteId\", jsonData.entity.identifier);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetPath\":\"//default/web_assets\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets"
					]
				},
				"description": "This should bring back all sort of information related with the folder we just created and the assets it holds."
			},
			"response": []
		},
		{
			"name": "WebAsset :: Look up folder  ends in forward slash",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"folder name check\", function () {",
							"    pm.expect(jsonData.entity.name).to.eql('web_assets');",
							"    ",
							"});",
							"",
							"pm.collectionVariables.set(\"siteId\", jsonData.entity.identifier);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetPath\":\"//default/web_assets/\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets"
					]
				},
				"description": "Simple test to verify we can lookup folders ending with forward slash"
			},
			"response": []
		},
		{
			"name": "WebAsset :: Look up file",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"folder name check\", function () {",
							"    pm.expect(jsonData.entity.versions.length).to.eql(1);",
							"    let version = jsonData.entity.versions[0];",
							"    pm.expect(version.identifier).to.not.eql(null);",
							"    pm.expect(version.inode).to.not.eql(null);",
							"    pm.expect(version.identifier).to.not.eql(\"\");",
							"    pm.expect(version.inode).to.not.eql(\"\");",
							"    pm.expect(version.lang).to.eql(\"en-us\");",
							"    pm.expect(version.live).to.eql(true);",
							"    pm.expect(version.name).to.eql(\"make-my-day.jpeg\");",
							"    pm.expect(version.sortOrder).to.eql(0);",
							"    let metadata = version.metadata;",
							"    pm.expect(metadata.contentType).to.eql(\"image/jpeg\");",
							"    pm.expect(metadata.isImage).to.eql(true);",
							"    pm.expect(metadata.name).to.eql(\"make-my-day.jpeg\");",
							"    pm.expect(metadata.title).to.eql(\"make-my-day.jpeg\");",
							"    pm.expect(metadata.width).to.eql(630);",
							"    pm.expect(metadata.height).to.eql(1280);",
							"    pm.expect(metadata.size).to.eql(188630);",
							"    pm.expect(metadata.sha256).to.eql(\"164bbe14ea1af187eb66635d528c5094b6dc3e1d9b718a092aa217f66167505c\");",
							"    pm.expect(metadata.path).to.eql(\"/web_assets/\");",
							"    ",
							"});",
							"",
							"pm.collectionVariables.set(\"siteId\", jsonData.entity.identifier);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetPath\":\"//default/web_assets/make-my-day.jpeg\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets"
					]
				},
				"description": "Test file look up via assetPath"
			},
			"response": []
		},
		{
			"name": "WebAsset :: Look up file under root",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"folder name check\", function () {",
							"    pm.expect(jsonData.entity.versions.length).to.eql(1);",
							"    let version = jsonData.entity.versions[0];",
							"    pm.expect(version.identifier).to.not.eql(null);",
							"    pm.expect(version.inode).to.not.eql(null);",
							"    pm.expect(version.identifier).to.not.eql(\"\");",
							"    pm.expect(version.inode).to.not.eql(\"\");",
							"    pm.expect(version.lang).to.eql(\"en-us\");",
							"    pm.expect(version.live).to.eql(true);",
							"    pm.expect(version.name).to.eql(\"odisea.pdf\");",
							"    pm.expect(version.sortOrder).to.eql(0);",
							"    let metadata = version.metadata;",
							"    pm.expect(metadata.contentType).to.eql(\"application/pdf\");",
							"    pm.expect(metadata.isImage).to.eql(false);",
							"    pm.expect(metadata.name).to.eql(\"odisea.pdf\");",
							"    pm.expect(metadata.title).to.eql(\"odisea.pdf\");",
							"    pm.expect(metadata.width).to.eql(0);",
							"    pm.expect(metadata.height).to.eql(0);",
							"    pm.expect(metadata.sha256).to.eql(\"45de877cd4a203e6eee08ff6521f3855c14ee34aba44b2c51d6e32e7137781e6\");",
							"    pm.expect(metadata.path).to.eql(\"/\");",
							"    ",
							"});",
							"",
							"pm.collectionVariables.set(\"siteId\", jsonData.entity.identifier);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetPath\":\"//default/odisea.pdf\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets"
					]
				},
				"description": "Here we want to validate that we can access content that lives directly under root folder"
			},
			"response": []
		},
		{
			"name": "WebAsset :: Look up unexising asset",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetPath\":\"//default/web_assets/lol\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets"
					]
				},
				"description": "Test Accessing non-existing content should give us a 404"
			},
			"response": []
		},
		{
			"name": "WebAsset :: Create or Replace",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "resources/WebAssets/make-my-day.jpeg"
						},
						{
							"key": "detail",
							"value": "{\n   \"assetPath\":\"//default/newFolder/make-my-day.jpeg\",\n   \"language\":\"en_us\",\n   \"live\":true\n}",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets"
					]
				},
				"description": "Testing the update"
			},
			"response": []
		},
		{
			"name": "WebAsset :: Get File",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    const contentType = pm.response.headers.find(e => e.key == 'Content-Type');",
							"    const contentDisposition = pm.response.headers.find(e => e.key == 'Content-Disposition');",
							"",
							"    pm.expect(contentType.value).to.eql('application/octet-stream');    ",
							"    pm.expect(contentDisposition.value.includes('filename=\"make-my-day.jpeg\"')).to.be.true;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"assetPath\":\"//default/newFolder/make-my-day.jpeg\",\n   \"language\":\"en_US\",\n   \"live\":false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets/_download",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets",
						"_download"
					]
				},
				"description": "Accessing/downloading the file via file path"
			},
			"response": []
		},
		{
			"name": "WebAsset :: Get File in a Different Lang Expect 404",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"assetPath\":\"//default/newFolder/make-my-day.jpeg\",\n   \"language\":\"es_CAN\",\n   \"live\":false\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets/_download",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets",
						"_download"
					]
				},
				"description": "Requesting using a valid path but a different lang"
			},
			"response": []
		},
		{
			"name": "WebAsset :: Delete File Expect Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"assetPath\":\"//default/newFolder/make-my-day.jpeg\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets/_delete",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets",
						"_delete"
					]
				},
				"description": "Simple delete file test"
			},
			"response": []
		},
		{
			"name": "WebAsset :: Delete Folder Expect Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"assetPath\":\"//default/newFolder/\"   \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets/folders/_delete",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets",
						"folders",
						"_delete"
					]
				},
				"description": "Delete folder"
			},
			"response": []
		},
		{
			"name": "WebAsset :: Archive File Expect Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"assetPath\":\"//default/odisea.pdf\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets/_archive",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets",
						"_archive"
					]
				},
				"description": "Simple delete file test"
			},
			"response": []
		},
		{
			"name": "Folders :: Create New Folder with Full Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"newFolderId\", jsonData.entity.identifier);",
							"    pm.collectionVariables.set(\"newFolderInode\", jsonData.entity.inode);",
							"    ",
							"    // Validate folder details",
							"    pm.expect(jsonData.entity.name).to.eql('test-folder-api');",
							"    pm.expect(jsonData.entity.title).to.eql('Test Folder API');",
							"    pm.expect(jsonData.entity.showOnMenu).to.eql(true);",
							"    pm.expect(jsonData.entity.sortOrder).to.eql(100);",
							"    pm.expect(jsonData.entity.filesMasks).to.eql('*.jpg,*.png,*.pdf');",
							"    pm.expect(jsonData.entity.path).to.include('test-folder-api');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetPath\": \"//default/test-folder-api/\",\n    \"data\": {\n        \"title\": \"Test Folder API\",\n        \"showOnMenu\": true,\n        \"sortOrder\": 100,\n        \"fileMasks\": [\"*.jpg\", \"*.png\", \"*.pdf\"],\n        \"defaultAssetType\": \"FileAsset\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets/folders",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets",
						"folders"
					]
				},
				"description": "Create a new folder with complete metadata including title, showOnMenu, sortOrder, fileMasks, and defaultAssetType"
			},
			"response": []
		},
		{
			"name": "Folders :: Create Simple Folder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"simpleFolderId\", jsonData.entity.identifier);",
							"    ",
							"    // Validate basic folder creation",
							"    pm.expect(jsonData.entity.name).to.eql('simple-folder');",
							"    pm.expect(jsonData.entity.title).to.eql('Simple Test Folder');",
							"    pm.expect(jsonData.entity.path).to.include('simple-folder');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetPath\": \"//default/simple-folder/\",\n    \"data\": {\n        \"title\": \"Simple Test Folder\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets/folders",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets",
						"folders"
					]
				},
				"description": "Create a simple folder with minimal data (only title)"
			},
			"response": []
		},
		{
			"name": "Folders :: Create Nested Folder Structure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.collectionVariables.set(\"nestedFolderId\", jsonData.entity.identifier);",
							"    ",
							"    // Validate nested folder creation",
							"    pm.expect(jsonData.entity.name).to.eql('level2');",
							"    pm.expect(jsonData.entity.title).to.eql('Level 2 Folder');",
							"    pm.expect(jsonData.entity.path).to.include('level1/level2');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetPath\": \"//default/level1/level2/\",\n    \"data\": {\n        \"title\": \"Level 2 Folder\",\n        \"showOnMenu\": false,\n        \"sortOrder\": 50\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets/folders",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets",
						"folders"
					]
				},
				"description": "Create a nested folder structure that should automatically create parent folders"
			},
			"response": []
		},
		{
			"name": "Folders :: Create Folder - Conflict Test (409)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 409 (Conflict)\", function () {",
							"    pm.response.to.have.status(409);",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include('already exists');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetPath\": \"//default/test-folder-api/\",\n    \"data\": {\n        \"title\": \"Should Not Be Created\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets/folders",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets",
						"folders"
					]
				},
				"description": "Test creating a folder that already exists - should return 409 Conflict"
			},
			"response": []
		},
		{
			"name": "Folders :: Create Folder - Bad Request UUID Path (400)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 400 (Bad Request)\", function () {",
							"    pm.response.to.have.status(400);",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include('UUID');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetPath\": \"123e4567-e89b-12d3-a456-426614174000\",\n    \"data\": {\n        \"title\": \"Should Not Be Created\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets/folders",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets",
						"folders"
					]
				},
				"description": "Test creating a folder using UUID as path - should return 400 Bad Request"
			},
			"response": []
		},
		{
			"name": "Folders :: Update Folder by Path",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"    var jsonData = pm.response.json();",
							"    ",
							"    // Validate folder updates",
							"    pm.expect(jsonData.entity.name).to.eql('test-folder-api');",
							"    pm.expect(jsonData.entity.title).to.eql('Updated Test Folder');",
							"    pm.expect(jsonData.entity.showOnMenu).to.eql(false);",
							"    pm.expect(jsonData.entity.sortOrder).to.eql(200);",
							"    pm.expect(jsonData.entity.filesMasks).to.eql('*.docx,*.xlsx');",
							"    pm.expect(jsonData.entity.identifier).to.eql(pm.collectionVariables.get('newFolderId'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetPath\": \"//default/test-folder-api/\",\n    \"data\": {\n        \"title\": \"Updated Test Folder\",\n        \"showOnMenu\": false,\n        \"sortOrder\": 200,\n        \"fileMasks\": [\"*.docx\", \"*.xlsx\"]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets/folders",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets",
						"folders"
					]
				},
				"description": "Update an existing folder using its path with new metadata"
			},
			"response": []
		},
		{
			"name": "Folders :: Update Folder by Inode",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"    var jsonData = pm.response.json();",
							"    ",
							"    // Validate folder updates via inode",
							"    pm.expect(jsonData.entity.title).to.eql('Updated via Inode');",
							"    pm.expect(jsonData.entity.showOnMenu).to.eql(true);",
							"    pm.expect(jsonData.entity.inode).to.eql(pm.collectionVariables.get('newFolderInode'));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetPath\": \"{{newFolderInode}}\",\n    \"data\": {\n        \"title\": \"Updated via Inode\",\n        \"showOnMenu\": true,\n        \"sortOrder\": 150\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets/folders",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets",
						"folders"
					]
				},
				"description": "Update an existing folder using its inode instead of path"
			},
			"response": []
		},
		{
			"name": "Folders :: Update Folder - Rename Only",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    ",
							"    var jsonData = pm.response.json();",
							"    ",
							"    // Validate folder rename while preserving other properties",
							"    pm.expect(jsonData.entity.name).to.eql('renamed-simple');",
							"    pm.expect(jsonData.entity.title).to.eql('Simple Test Folder'); // Should preserve original",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetPath\": \"//default/simple-folder/\",\n    \"data\": {\n        \"name\": \"renamed-simple\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets/folders",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets",
						"folders"
					]
				},
				"description": "Update folder to only change the name while preserving other properties"
			},
			"response": []
		},
		{
			"name": "Folders :: Update Folder - Non-Existent (404)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 404 (Not Found)\", function () {",
							"    pm.response.to.have.status(404);",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include('not found');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetPath\": \"//default/non-existent-folder/\",\n    \"data\": {\n        \"title\": \"Should Not Work\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets/folders",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets",
						"folders"
					]
				},
				"description": "Test updating a folder that doesn't exist - should return 404 Not Found"
			},
			"response": []
		},
		{
			"name": "Folders :: Update Folder - Name Conflict (409)",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 409 (Conflict)\", function () {",
							"    pm.response.to.have.status(409);",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.include('already exists');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"assetPath\": \"//default/level1/level2/\",\n    \"data\": {\n        \"name\": \"test-folder-api\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/assets/folders",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"assets",
						"folders"
					]
				},
				"description": "Test renaming a folder to a name that already exists - should return 409 Conflict"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "siteId",
			"value": ""
		},
		{
			"key": "folderId",
			"value": ""
		},
		{
			"key": "assetId",
			"value": ""
		},
		{
			"key": "newFolderId",
			"value": ""
		},
		{
			"key": "newFolderInode",
			"value": ""
		},
		{
			"key": "simpleFolderId",
			"value": ""
		},
		{
			"key": "nestedFolderId",
			"value": ""
		}
	]
}