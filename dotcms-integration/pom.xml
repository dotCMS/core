<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.dotcms</groupId>
        <artifactId>dotcms-build-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../build-parent/pom.xml</relativePath>
    </parent>
    <packaging>jar</packaging>
    <artifactId>dotcms-integration</artifactId>

    <version>1.0.0-SNAPSHOT</version>
    <properties>
        <servlet.port>8080</servlet.port>
        <palantirJavaFormat.version>2.29.0</palantirJavaFormat.version>

        <version.spotless.plugin>2.37.0</version.spotless.plugin>
        <jackson.version>2.13.4</jackson.version>
        <batik.version>1.16</batik.version>
        <glowroot.version>0.13.1</glowroot.version>
        <version.cargo.plugin>1.10.6</version.cargo.plugin>
        <assembly-directory>${basedir}/target/dist</assembly-directory>
        <skipDockerEnv>false</skipDockerEnv>
        <starter.filename>starter.zip</starter.filename>
        <starter.path>${project.build.directory}/starter</starter.path>
        <starter.full.path>${starter.path}/${starter.filename}</starter.full.path>


        <clean.docker.volumes>true</clean.docker.volumes>

        <!-- Tomcat -->
        <enableDebug>true</enableDebug>
        <debugPort>8000</debugPort>
        <debugHost>localhost</debugHost>
        <debugWait>false</debugWait>
        <buildDocker>true</buildDocker>
        <buildJib>false</buildJib>
        <tomcat-dist-folder>dotserver/tomcat-${tomcat.version}</tomcat-dist-folder>
        <tomcat9-overrides>${project.basedir}/src/main/resources/container/tomcat9</tomcat9-overrides>

        <docker.base.image>tomcat:9.0.74-jdk11</docker.base.image>
        <docker.output.image.name>dotcms/dotcms-test</docker.output.image.name>


        <felix.base.dir>${project.build.directory}/core-war/WEB-INF/felix</felix.base.dir>
        <felix.system.base.dir>${project.build.directory}/core-war/WEB-INF/felix-system</felix.system.base.dir>

<!--
        <felix.base.dir>/Users/stevebolton/felix_test/felix</felix.base.dir>
        <felix.system.base.dir>/Users/stevebolton/felix_test/felix_system</felix.system.base.dir>
-->
        <webapp.extract.dir>${project.build.directory}/core-war</webapp.extract.dir>
        <test.webapp.root>${webapp.extract.dir}</test.webapp.root>
        <it.test.forkcount>4</it.test.forkcount>
        <testdata.dir>${project.build.directory}/testdata</testdata.dir>
        <it.test.fork-folder.prefix>${project.build.directory}/testdata/fork-</it.test.fork-folder.prefix>
        <it.test.fork-folder>${it.test.fork-folder.prefix}</it.test.fork-folder>

        <test.logs.folder>logs</test.logs.folder>
        <test.assets.folder>assets</test.assets.folder>
        <test.temp.folder>temp</test.temp.folder>
        <test.working.folder>working</test.working.folder>
        <test.dynamic.folder>secure</test.dynamic.folder>
        <test.felix.cache.folder>felix/core/felix-cache</test.felix.cache.folder>
        <test.felix.system.cache.folder>felix/system/felix-cache</test.felix.system.cache.folder>
        <test.felix.load.folder>felix/core/load</test.felix.load.folder>
        <test.felix.system.load.folder>felix/system/load</test.felix.system.load.folder>
        <test.felix.undeployed.folder>felix/core/undeployed</test.felix.undeployed.folder>
        <test.felix.system.undeployed.folder>felix/system/undeployed</test.felix.system.undeployed.folder>
        <cleanup.before.tests>true</cleanup.before.tests>
        <test.db.host>localhost</test.db.host>
        <test.db.port>5437</test.db.port>
        <test.db.db>dotcms${surefire.forkNumber}</test.db.db>
        <test.db.url>jdbc:postgresql://${test.db.host}:${test.db.port}/${test.db.db}?autosave=conservative</test.db.url>
        <test.db.username>postgres${surefire.forkNumber}</test.db.username>
        <test.db.password>postgres</test.db.password>
        <test.es.scheme>http</test.es.scheme>
        <test.es.host>localhost</test.es.host>
        <test.es.port>9207</test.es.port>
        <test.es.endpoints>${test.es.scheme}://${test.es.host}:${test.es.port}</test.es.endpoints>
        <it.debug.port>5005</it.debug.port>
        <it.debug.suspend>n</it.debug.suspend>
        <maven.failsafe.debugArgs/>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.dotcms</groupId>
            <artifactId>dotcms-core</artifactId>
            <version>${project.version}</version>
            <type>war</type>
            <classifier>war</classifier>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.dotcms</groupId>
            <artifactId>dotcms-core</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.dotcms</groupId>
            <artifactId>dotcms-core</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jetbrains</groupId>
            <artifactId>annotations</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jasper</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker-qual</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.tngtech.junit.dataprovider</groupId>
            <artifactId>junit4-dataprovider</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.dotcms</groupId>
                <artifactId>dotcms-application-bom</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack-webapp</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.dotcms</groupId>
                                    <artifactId>dotcms-core</artifactId>
                                    <version>${project.version}</version>
                                    <type>war</type>
                                    <classifier>war</classifier>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${webapp.extract.dir}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-test-starter</id>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.dotcms</groupId>
                                    <artifactId>starter</artifactId>
                                    <!-- <version>empty_20210903</version>-->
                                    <version>${starter.version}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${starter.path}</outputDirectory>
                                    <destFileName>${starter.filename}</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resource-one</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/test-classes</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${webapp.extract.dir}/WEB-INF/classes</directory>
                                    <excludes>
                                        <exclude>**/*.class</exclude>
                                    </excludes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>cleanup-it-test-data</id>
                        <phase>pre-integration-test</phase>

                        <configuration>
                            <skip>${skipITs}</skip>
                            <target>
                                <ant antfile="${basedir}/ant-tasks.xml">
                                    <target name="pre-integration"/>
                                    <property name="cleanup" value="${cleanup.before.tests}"/>
                                </ant>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


           <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                  <skip>true</skip>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <argLine>${maven.failsafe.debugArgs}</argLine>
                    <forkCount>${it.test.forkcount}</forkCount>
                    <reuseForks>true</reuseForks>
                    <rerunFailingTestsCount>3</rerunFailingTestsCount>
                    <!--<skipAfterFailureCount>2</skipAfterFailureCount>-->
                    <environmentVariables>
                   </environmentVariables>
                    <systemPropertyVariables>
                        <!-- Following is a hack to make Intellij pick up the fork number in systemProperites
                            for tests correctly
                            it thinks it users failsafe.formNumber but it is same as surefire.
                            When maven runs this surefire.forkNumber overrides this property value.  In intellij
                            it updates this property that sets surefire.forkNumber=failsafe.forkNumber in other properties.
                        -->
                        <surefire.forkNumber>${failsafe.forkNumber}</surefire.forkNumber>
                        <user.timezone>UTC</user.timezone>
                        <integrationTestCoverageAgent>${integrationTestCoverageAgent}</integrationTestCoverageAgent>
                        <!--
                            <DOT_CACHE_BINDPORT>78${surefire.forkNumber}1</DOT_CACHE_BINDPORT>
                        -->

                        <DOTCMS_LOGGING_HOME>${it.test.fork-folder}${surefire.forkNumber}/${test.logs.folder}</DOTCMS_LOGGING_HOME>
                        <DOTCMS_FORK_NUMBER>f${surefire.forkNumber}</DOTCMS_FORK_NUMBER>


                        <DOT_ORG_OSGI_FRAMEWORK_STORAGE>${it.test.fork-folder}${surefire.forkNumber}/${test.felix.cache.folder}</DOT_ORG_OSGI_FRAMEWORK_STORAGE>
                        <DOT_SYSTEM_ORG_OSGI_FRAMEWORK_STORAGE>${it.test.fork-folder}${surefire.forkNumber}/${test.felix.system.cache.folder}</DOT_SYSTEM_ORG_OSGI_FRAMEWORK_STORAGE>
                        <DOT_FELIX_BASE_DIR>${felix.base.dir}</DOT_FELIX_BASE_DIR>
                        <DOT_SYSTEM_FELIX_BASE_DIR>${felix.system.base.dir}</DOT_SYSTEM_FELIX_BASE_DIR>
                        <DOT_FELIX_FILEINSTALL_DIR>${it.test.fork-folder}${surefire.forkNumber}/${test.felix.load.folder}</DOT_FELIX_FILEINSTALL_DIR>
                        <DOT_FELIX_UNDEPLOYED_DIR>${it.test.fork-folder}${surefire.forkNumber}/${test.felix.undeployed.folder}</DOT_FELIX_UNDEPLOYED_DIR>
                        <DOT_SYSTEM_FELIX_FILEINSTALL_DIR>${it.test.fork-folder}${surefire.forkNumber}/${test.felix.system.load.folder}</DOT_SYSTEM_FELIX_FILEINSTALL_DIR>
                        <DOT_SYSTEM_FELIX_UNDEPLOYED_DIR>${it.test.fork-folder}${surefire.forkNumber}/${test.felix.system.undeployed.folder}</DOT_SYSTEM_FELIX_UNDEPLOYED_DIR>

                        <DOT_TEST_WEBAPP_ROOT>${test.webapp.root}</DOT_TEST_WEBAPP_ROOT>
                        <DOT_ASSET_REAL_PATH>${it.test.fork-folder}${surefire.forkNumber}/${test.assets.folder}</DOT_ASSET_REAL_PATH>
                        <DOT_DYNAMIC_CONTENT_PATH>${it.test.fork-folder}${surefire.forkNumber}/${test.dynamic.folder}</DOT_DYNAMIC_CONTENT_PATH>
                        <DOT_DATASOURCE_PROVIDER_STRATEGY_CLASS>com.dotmarketing.db.SystemEnvDataSourceStrategy</DOT_DATASOURCE_PROVIDER_STRATEGY_CLASS>
                        <DOT_DB_DRIVER>org.postgresql.Driver</DOT_DB_DRIVER>
                        <DOT_DB_INIT_FAIL_WAIT>30000</DOT_DB_INIT_FAIL_WAIT>
                        <DOT_DB_BASE_URL>${test.db.url}</DOT_DB_BASE_URL>
                        <DOT_DB_USERNAME>${test.db.username}</DOT_DB_USERNAME>
                        <DOT_DB_PASSWORD>${test.db.password}</DOT_DB_PASSWORD>
                        <DOT_DOTCMS_DEV_MODE>true</DOT_DOTCMS_DEV_MODE>

                        <!-- from cicd/docker/dotcms-compose.yml -->
                        <DOT_INDEX_POLICY_SINGLE_CONTENT>FORCE</DOT_INDEX_POLICY_SINGLE_CONTENT>
                        <DOT_ASYNC_REINDEX_COMMIT_LISTENERS>false</DOT_ASYNC_REINDEX_COMMIT_LISTENERS>
                        <DOT_ASYNC_COMMIT_LISTENERS>false</DOT_ASYNC_COMMIT_LISTENERS>
                        <DOT_CACHE_GRAPHQLQUERYCACHE_SECONDS>600</DOT_CACHE_GRAPHQLQUERYCACHE_SECONDS>

                        <DOT_ES_ENDPOINTS>${test.es.endpoints}</DOT_ES_ENDPOINTS>
                        <DOT_STARTER_DATA_LOAD>${starter.full.path}</DOT_STARTER_DATA_LOAD>
                        <DOT_VELOCITY_ROOT>${test.webapp.root}/WEB-INF/velocity</DOT_VELOCITY_ROOT>
                        <DOT_GEOIP2_CITY_DATABASE_PATH_OVERRIDE>${test.webapp.root}/WEB-INF/geoip2/GeoLite2-City.mmdb</DOT_GEOIP2_CITY_DATABASE_PATH_OVERRIDE>
                        <DOT_DARTSASS_COMPILER_LOCATION>${test.webapp.root}/WEB-INF/bin</DOT_DARTSASS_COMPILER_LOCATION>
                        <java.io.tmpdir>${it.test.fork-folder}${surefire.forkNumber}/${test.temp.folder}</java.io.tmpdir>
                        <workingDirectory>${it.test.fork-folder}${surefire.forkNumber}/${test.working.folder}</workingDirectory>
                        <buildDirectory>${project.build.directory}</buildDirectory>

                    </systemPropertyVariables>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <includes>
                                <include>**/MainSuite1*.java</include>
                                <include>**/MainSuite2*.java</include>
                                <!--<include>**/QuickSuite.java</include>-->
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>



            <plugin>
                <groupId>com.dkanejs.maven.plugins</groupId>
                <artifactId>docker-compose-maven-plugin</artifactId>
                <configuration>
                    <!--  <envFile>${project.basedir}/.env</envFile>-->
                    <services>
                        <service>db-test</service>
                        <service>elasticsearch-test</service>
                    </services>
                    <removeVolumes>false</removeVolumes>
                    <projectName>cargo-it</projectName>
                    <removeImages>true</removeImages>
                    <removeImagesType>local</removeImagesType>
                    <skip>${skipDockerEnv}</skip>
                    <composeFile>${project.basedir}/docker-compose.yml</composeFile>
                    <detachedMode>true</detachedMode>
                    <removeVolumes>true</removeVolumes>
                    <envFile>${project.basedir}/it-test.env</envFile>
                </configuration>

                <executions>
                    <execution>
                        <id>up</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>down</goal>
                            <goal>up</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITs}</skip>
                            <removeVolumes>${clean.docker.volumes}</removeVolumes>
                            <ignorePullFailures>true</ignorePullFailures>
                            <detachedMode>true</detachedMode>
                            <services>
                                <service>db-test</service>
                                <service>elasticsearch-test</service>
                            </services>
                        </configuration>
                    </execution>
                    <execution>
                        <id>down</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>down</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITs}</skip>
                            <!--We clean docker volumes before but not after as we may need to debug -->
                            <!--<removeVolumes>${clean.docker.volumes}</removeVolumes>-->
                            <services>
                                <service>db-test</service>
                                <service>elasticsearch-test</service>
                            </services>
                        </configuration>
                    </execution>
                </executions>
            </plugin>



        </plugins>
    </build>
    <profiles>
        <profile>
            <id>external-testdb</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <skipDockerEnv>true</skipDockerEnv>
                <it.test.forkcount>1</it.test.forkcount>
                <surefire.forkNumber>1</surefire.forkNumber>
                <!--suppress UnresolvedMavenProperty -->
                <test.db.host>${env.TEST_DB_HOST}</test.db.host>
                <!--suppress UnresolvedMavenProperty -->
                <test.db.port>${env.TEST_DB_PORT}</test.db.port>
                <test.db.db>dotcms</test.db.db>
                <test.db.url>jdbc:postgresql://${test.db.host}:${test.db.port}/${test.db.db}?autosave=conservative</test.db.url>
                <test.db.username>postgres${surefire.forkNumber}</test.db.username>
                <test.db.password>postgres</test.db.password>
                <test.es.scheme>https</test.es.scheme>
                <test.es.host>localhost</test.es.host>
                <test.es.port>9207</test.es.port>
                <test.es.endpoints>${test.es.scheme}://${test.es.host}:${test.es.port}</test.es.endpoints>
            </properties>
        </profile>


        <profile>
            <id>debug-it</id>
            <properties>
                <maven.failsafe.debugArgs>-agentlib:jdwp=transport=dt_socket,address=localhost:${it.debug.port},server=y,suspend=${it.debug.suspend}</maven.failsafe.debugArgs>
                <it.test.forkcount>1</it.test.forkcount>
            </properties>
        </profile>

    </profiles>
    <repositories>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>dotcms-libs</id>
            <url>https://repo.dotcms.com/artifactory/libs-release</url>
        </repository>
        <repository>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>dotcms-libs-snapshot</id>
            <url>https://repo.dotcms.com/artifactory/libs-snapshot-local</url>
        </repository>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>jitpack</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

</project>

