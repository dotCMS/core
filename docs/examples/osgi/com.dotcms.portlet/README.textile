h1. README

This bundle plugin is an example of how to create and add Portlets for use in the dotCMS' administrative console using an OSGI bundle plugin.
This example includes the code to create three different types of Portlets, all of which are supported by dotCMS:
* *Velocity Portlet*: a Portlet implementation that will display portlet content using a velocity file
* *Jsp Portlet*: a Portlet implementation that will display portlet content using a jsp file
* *Struts Portlet*: a Portlet implementation  that will call an Struts Action class that will use a jsp file in order to display portlet content.

h2. How to create an OSGI bundle for Portlets

In order to create this OSGI plugin, you must create a *META-INF/MANIFEST* to be included in the OSGI jar.

In this *MANIFEST* you must specify (see the included plugin as an example):

* *Bundle-Name*: The name of your bundle
* *Bundle-SymbolicName*: A short and unique name for the bundle
* *Bundle-Activator*: Package and name of your Activator class (example: com.dotmarketing.osgi.portlet.Activator)
* *DynamicImport-Package: **
Dynamically add required imports the plugin without having to add them explicitly
* *Import-Package*: This is a comma separated list of the names of packages to import. In this list there must be the packages that you are using inside your osgi bundle plugin and are exported and exposed by the dotCMS runtime.


h2. Beware (!)

In order to work inside Apache Felix OSGI runtime, the import and export directive must be bidirectional.

The DotCMS must declare the set of packages that will be available to the OSGI plugins by changing the file: *dotCMS/WEB-INF/felix/osgi-extra.conf*.
This is possible also using the dotCMS UI (CMS Admin->Dynamic Plugins->Exported Packages).

Only after the exported packages are defined in this property can an OSGI plugin import the packages and use them inside the OSGI blundle.


h2. Components

h3. Resources:

* *conf/* Folder (Folder that contains the configuration files for the Portlets definitions) - Both files in this folder are MANDATORY (!)
** *conf/portlet.xml* The standard JSR-286 portlet configuration file.
** *conf/liferay-portlet.xml* This file describes some optional Liferay-specific enhancements for JSR-286 portlets that are installed on a Liferay Portal server.

* *ext/* Folder (Folder that contains the files used by the defined Portles)
** *ext/view.vtl* Velocity file used by the Velocity Portlet
** *ext/hello.jsp* Jsp file use it by the Jsp Portlet
** *ext/strutshelloworld/view.jsp* Used by the Struts Portlet and invoked inside the *HelloWorldAction*
** *ext/strutshelloworld/view_hello.jsp* Used by the Struts Portlet and invoked inside the *HelloWorldAction*

h3. com.dotmarketing.osgi.portlet.HelloWorldAction

Simple Action class that extends *com.dotmarketing.portal.struts.DotPortletAction*
The *conf/portlet.xml* file has the definition for an *StrutsPortlet* and that definition has a reference to the mapping for the *HelloWorldAction*.

h3. Activator

This bundle activator extends *com.dotmarketing.osgi.GenericBundleActivator* and implements *BundleActivator.start()*.
This activator have 2 main important fragments of code:
# It will manually register an *ActionMapping* for our Struts action class *HelloWorldAction* that will be used by the StrutsPortlet we defined in the configuration files (*conf/*).
# It will manually register the Portlets making use of the method *registerPortlets*.

* PLEASE note the *unregisterServices()* call on the *stop* method, this call is MANDATORY (!) as it will allow us to clean and remove the registered Portlets and related code (like the ActionMappings registered in Struts  ).

h3. Multi language support

The creation of the Portlets will generate the following language keys and use them as the title for the Portlets:
* javax.portlet.title.EXT_HELLO_WORLD
* javax.portlet.title.EXT_JSP_HELLO_WORLD
* javax.portlet.title.EXT_STRUTS_HELLO_WORLD

In order to add multilanguage values for those keys:
*CMS Admin* -> *Language Variables* -> *Edit Default Language Variables* -> Add the values for the above keys
  	
