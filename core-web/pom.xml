<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.dotcms</groupId>
        <artifactId>dotcms-nodejs-parent</artifactId>
        <version>${revision}${sha1}${changelist}</version>
        <relativePath>../nodejs-parent/pom.xml</relativePath>
    </parent>

    <artifactId>dotcms-core-web</artifactId>
    <packaging>war</packaging>

    <properties>
        <maven.deploy.skip>false</maven.deploy.skip>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.plugin.cargo.version>1.9.0</maven.plugin.cargo.version>
        <cargo.tomcat.major.version>9</cargo.tomcat.major.version>
        <nx.build.options></nx.build.options>
        <cargo.server.port>8084</cargo.server.port>
        <yarn.install.cmd>--frozen-lockfile</yarn.install.cmd>
        <skip.npm.install>false</skip.npm.install>
        <skip.core-web.updates>false</skip.core-web.updates>
        <skip.validate>true</skip.validate>
        <git.origin.branch>origin/main</git.origin.branch>
        <nx.affected.options>--base=${git.origin.branch} --head=HEAD</nx.affected.options>
        <pretty.quick.options>--branch=${git.origin.branch}</pretty.quick.options>
        <skip.nx.reset.execution>true</skip.nx.reset.execution>
    </properties>

    <dependencies>

    </dependencies>
    <build>

        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>dist</directory>
                            <includes>
                                <include>**/*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <configuration>
                            <target>
                                echo "Using node.js ${node.js.version}"
                                <echo append="false" file="${basedir}/.nvmrc">${node.js.version}</echo>
                                <!--
                                <filter token="node.js.version" value="${node.js.version}"/>
                                <copy file="${basedir}/version-template.txt" tofile="${basedir}/.nvmrc" overwrite="true" filtering="true"/>
                                -->
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <configuration>
                    <!-- Base config defined in dotcms-core-web-parent -->
                </configuration>

                <executions>
                    <execution>
                        <id>install</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>

                        <!-- optional: the default phase is "generate-resources" -->
                        <phase>generate-resources</phase>

                        <configuration>
                            <skip>${skip.npm.install}</skip>
                            <arguments>${yarn.install.cmd}</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>lint-test</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <!-- optional: the default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                        <configuration>
                            <skip>${skip.validate}</skip>
                            <arguments>nx affected -t lint --base=origin/main --exclude='tag:skip:lint'</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>format-test</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <!-- optional: the default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                        <configuration>
                            <skip>${skip.validate}</skip>
                            <arguments>nx format:check</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>build-test</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <!-- optional: the default phase is "generate-resources" -->
                        <phase>compile</phase>
                        <configuration>
                            <arguments>nx run-many -t build --exclude='tag:skip:build' --verbose ${nx.build.options}</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>build-analytics</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <!-- optional: the default phase is "generate-resources" -->
                        <phase>compile</phase>
                        <configuration>
                            <arguments>nx run sdk-analytics:build:standalone:clean</arguments>
                        </configuration>
                    </execution>


                    <execution>
                        <id>unit-test</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>

                        <!-- optional: the default phase is "generate-resources" -->
                        <phase>test</phase>

                        <configuration>
                            <skip>${skipTests}</skip>
                            <arguments>nx affected -t test --base=origin/main --exclude='tag:skip:test'</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>nx-reset</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <arguments>exec nx reset</arguments>
                            <skip>${skip.nx.reset.execution}</skip>
                        </configuration>
                    </execution>
                </executions>

            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webResources>
                        <resource>
                            <!-- this is relative to the pom.xml directory -->
                            <directory>${project.basedir}/dist/apps/dotcms-ui</directory>
                            <filtering>false</filtering>
                            <targetPath>dotAdmin</targetPath>
                        </resource>
                        <resource>
                            <directory>${project.basedir}/dist/libs/dotcms-webcomponents/dist</directory>
                            <filtering>false</filtering>
                            <includes>
                                <include>dotcms-webcomponents/**/*</include>
                            </includes>
                        </resource>

                        <resource>
                            <directory>${project.basedir}/dist/apps/dotcms-binary-field-builder</directory>
                            <filtering>false</filtering>
                            <targetPath>dotcms-binary-field-builder</targetPath>
                        </resource>

                        <resource>
                            <directory>${project.basedir}/dist/apps/dotcms-block-editor</directory>
                            <filtering>false</filtering>
                            <targetPath>dotcms-block-editor</targetPath>
                        </resource>

                        <resource>
                            <directory>${project.basedir}/dist/libs/edit-content-bridge</directory>
                            <filtering>false</filtering>
                            <targetPath>html/js/legacy_custom_field_bridge</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven3-plugin</artifactId>
                <version>${version.cargo.plugin}</version>
                <configuration>

                    <container>
                        <timeout>1800000</timeout>
                        <systemProperties>
                            <file.encoding>UTF-8</file.encoding>
                        </systemProperties>

                        <dependencies>

                        </dependencies>
                    </container>
                    <configuration>

                        <!--<home>${project.build.directory}/catalina-base</home>-->
                        <properties>
                            <!--    <cargo.servlet.port>${cargo.samples.servlet.port}</cargo.servlet.port>
                                <cargo.rmi.port>${cargo.samples.rmi.port}</cargo.rmi.port>
                                <cargo.tomcat.ajp.port>${cargo.samples.tomcat.ajp.port}</cargo.tomcat.ajp.port>
                          -->

                            <cargo.servlet.port>${cargo.server.port}</cargo.servlet.port>

                        </properties>
                    </configuration>
                    <deployables>
                        <deployable>
                            <properties>
                                <context>/</context>
                            </properties>
                        </deployable>
                    </deployables>
                </configuration>

            </plugin>
        </plugins>

    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>prod</id>
            <activation>
                <property>
                    <name>prod</name>
                </property>
            </activation>
            <properties>
                <nx.build.options>--prod</nx.build.options>
                <yarn.install.cmd>--frozen-lockfile --prefer-offline</yarn.install.cmd>
            </properties>
            <build/>
        </profile>

        <profile>
            <id>do-nx-reset</id>
            <activation>
                <property>
                    <name>nx.reset</name>
                </property>
            </activation>
            <properties>
                <skip.nx.reset.execution>false</skip.nx.reset.execution>
            </properties>
        </profile>

        <profile>
            <id>validate</id>
            <properties>
                <skip.validate>false</skip.validate>
            </properties>
        </profile>

        <profile>
            <id>is_pr</id>
            <!-- Configuration specific to PRs -->
            <activation>
                <property>
                    <name>github.event.name</name>
                    <value>pull_request</value>
                </property>
            </activation>
            <properties>
                <git.origin.branch>origin/main</git.origin.branch>
                <nx.affected.options>--base=${git.origin.branch} --head=HEAD</nx.affected.options>
                <pretty.quick.options>--branch=${git.origin.branch}</pretty.quick.options>
                <skip.validate>false</skip.validate>
            </properties>
        </profile>

        <profile>
            <id>format</id>
            <build>
                <defaultGoal>generate-resources</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>com.github.eirslett</groupId>
                        <artifactId>frontend-maven-plugin</artifactId>
                        <configuration>
                            <!-- Base config defined in dotcms-core-web-parent -->
                        </configuration>
                        <executions>
                            <execution>
                                <id>auto-format</id>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>
                                <!-- optional: the default phase is "generate-resources" -->
                                <phase>generate-resources</phase>
                                <configuration>
                                    <skip>${skip.core-web.updates}</skip>
                                    <arguments>run format</arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>auto-lint</id>
                                <goals>
                                    <goal>yarn</goal>
                                </goals>
                                <!-- optional: the default phase is "generate-resources" -->
                                <phase>generate-resources</phase>
                                <configuration>
                                    <skip>${skip.core-web.updates}</skip>
                                    <arguments>ng lint</arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>


</project>
