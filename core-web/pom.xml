<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.dotcms</groupId>
        <artifactId>dotcms-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../parent/pom.xml</relativePath>
    </parent>

    <artifactId>dotcms-core-web</artifactId>
    <packaging>war</packaging>

    <properties>
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <node.js.version>v18.17.0</node.js.version>
        <npm.version>9.8.1</npm.version>
        <yarn.version>v1.22.19</yarn.version>
        <maven.plugin.cargo.version>1.9.0</maven.plugin.cargo.version>
        <cargo.tomcat.major.version>9</cargo.tomcat.major.version>
        <nx.build.options></nx.build.options>
        <cargo.server.port>8084</cargo.server.port>
        <yarn.install.cmd>install --frozen-lockfile</yarn.install.cmd>
        <skip.npm.install>false</skip.npm.install>
    </properties>

    <dependencies>

    </dependencies>
    <build>

        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>dist</directory>
                            <includes>
                                <include>*</include>
                            </includes>
                        </fileset>
                        <fileset>
                            <directory>node_modules/.cache/nx</directory>
                            <includes>
                                <include>*</include>
                            </includes>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <configuration>
                            <target>
                                <echo file="${basedir}/.nvmrc" append="false">${node.js.version}</echo>
                                <!--
                                <filter token="node.js.version" value="${node.js.version}"/>
                                <copy file="${basedir}/version-template.txt" tofile="${basedir}/.nvmrc" overwrite="true" filtering="true"/>
                                -->
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <!-- Use the latest released version:
                https://repo1.maven.org/maven2/com/github/eirslett/frontend-maven-plugin/ -->
                <version>1.12.1</version>
                <configuration>
                    <workingDirectory>${project.basedir}</workingDirectory>
                    <installDirectory>${project.basedir}/installs</installDirectory>

                    <nodeVersion>${node.js.version}</nodeVersion>
                    <!-- <npmVersion>${npm.version}</npmVersion>-->
                    <yarnVersion>${yarn.version}</yarnVersion>

                    <!-- optional: where to download node and npm from. Defaults to https://nodejs.org/dist/ -->
                    <!--<downloadRoot>http://myproxy.example.org/nodejs/</downloadRoot>-->

                </configuration>
                <executions>
                    <execution>
                        <!-- optional: you don't really need execution ids, but it looks nice in your build log. -->
                        <id>install node and yarn</id>
                        <goals>
                            <goal>install-node-and-yarn</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                    </execution>

                    <execution>
                        <id>config yarn timeout</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <arguments>config set network-timeout 6000000</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>config yarn registry</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <configuration>
                            <arguments>config set registry https://dotcms-npm.b-cdn.net</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>install</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>

                        <!-- optional: the default phase is "generate-resources" -->
                        <phase>generate-resources</phase>

                        <configuration>
                            <skip>${skip.npm.install}</skip>
                            <arguments>${yarn.install.cmd}</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>build dotcms-ui</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>

                        <!-- optional: the default phase is "generate-resources" -->
                        <phase>generate-resources</phase>

                        <configuration>
                            <arguments>run nx build dotcms-ui -- ${nx.build.options}</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>build dotcms-block-editor</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>

                        <!-- optional: the default phase is "generate-resources" -->
                        <phase>generate-resources</phase>

                        <configuration>
                            <arguments>run nx run dotcms-block-editor:build</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>build dotcms-binary-field-builder</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>

                        <!-- optional: the default phase is "generate-resources" -->
                        <phase>generate-resources</phase>

                        <configuration>
                            <arguments>run nx run dotcms-binary-field-builder:build</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>test</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>

                        <!-- optional: the default phase is "generate-resources" -->
                        <phase>generate-resources</phase>

                        <configuration>
                            <skip>${skipTests}</skip>
                            <arguments>run nx test</arguments>
                        </configuration>
                    </execution>
                </executions>

            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webResources>
                        <resource>
                            <!-- this is relative to the pom.xml directory -->
                            <directory>${project.basedir}/dist/apps/dotcms-ui</directory>
                            <filtering>false</filtering>
                            <targetPath>dotAdmin</targetPath>
                        </resource>
                        <resource>
                            <directory>${project.basedir}/dist/libs</directory>
                            <filtering>false</filtering>
                            <includes>
                                <include>dotcms-webcomponents/**/*</include>
                            </includes>
                        </resource>

                        <resource>
                            <directory>${project.basedir}/dist/apps/dotcms-binary-field-builder</directory>
                            <filtering>false</filtering>
                            <targetPath>dotcms-binary-field-builder</targetPath>
                        </resource>

                        <resource>
                            <directory>${project.basedir}/dist/apps/dotcms-block-editor</directory>
                            <filtering>false</filtering>
                            <targetPath>dotcms-block-editor</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven3-plugin</artifactId>
                <version>${version.cargo.plugin}</version>
                <configuration>

                    <container>
                        <timeout>1800000</timeout>
                        <systemProperties>
                            <file.encoding>UTF-8</file.encoding>
                        </systemProperties>

                        <dependencies>

                        </dependencies>
                    </container>
                    <configuration>

                        <!--<home>${project.build.directory}/catalina-base</home>-->
                        <properties>
                            <!--    <cargo.servlet.port>${cargo.samples.servlet.port}</cargo.servlet.port>
                                <cargo.rmi.port>${cargo.samples.rmi.port}</cargo.rmi.port>
                                <cargo.tomcat.ajp.port>${cargo.samples.tomcat.ajp.port}</cargo.tomcat.ajp.port>
                          -->

                            <cargo.servlet.port>${cargo.server.port}</cargo.servlet.port>

                        </properties>
                    </configuration>
                    <deployables>
                        <deployable>
                            <properties>
                                <context>/</context>
                            </properties>
                        </deployable>
                    </deployables>
                </configuration>

            </plugin>
        </plugins>

    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>prod</id>
            <activation>
                <property>
                    <name>prod</name>
                </property>
            </activation>
            <properties>
                <nx.build.options>--prod</nx.build.options>
                <yarn.install.cmd>--frozen-lockfile --silent</yarn.install.cmd>
            </properties>
            <build>
            </build>
        </profile>
    </profiles>


</project>
