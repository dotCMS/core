@use "variables" as *;

// Layout constants
$control-padding: 14px;
$grid-gap: 14px;
$grid-row-height: 6.875rem;
$list-row-height: 4rem;
$button-size: 2.5rem;
$icon-size: 0.875rem;

:host {
    display: flex;
    flex-direction: column;
    width: 100%;
    height: 100%;
    overflow: hidden;
    min-height: 0; // Allows the container to shrink

    // Search and options controls bar
    .dot-uve-palette-list__controls {
        display: flex;
        gap: $spacing-1;
        padding: $control-padding;
        padding-bottom: 0;
        margin-bottom: $control-padding;
        flex-shrink: 0;
    }

    // Content types grid/list container
    .dot-uve-palette-list__grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-auto-rows: $grid-row-height;
        gap: $grid-gap;
        padding: 0 $control-padding;
        overflow-y: auto;
        overflow-x: hidden;
        padding-bottom: $spacing-1;
        flex: 1;
        min-height: 0; // Allows flex items to shrink properly

        // List view variant - single column with shorter rows
        &--list {
            grid-template-columns: 1fr;
            grid-auto-rows: $list-row-height;
        }

        dot-uve-palette-item {
            width: 100%;
            min-height: 0;
        }

        // Empty state styling

        &:has(.dot-uve-palette-list__empty) {
            grid-auto-rows: unset;
            grid-template-rows: 1fr;
        }

        &.dot-uve-palette-list__grid--loading {
            overflow-y: hidden;
        }

        .dot-uve-palette-list__empty {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            grid-column: 1 / -1;
            grid-row: 1 / -1;
            padding: 2rem;
            text-align: center;
            min-height: 100%;
            width: 100%;

            .dot-uve-palette-list__empty-icon {
                margin-bottom: 1rem;

                i {
                    font-size: 3rem;
                    color: $color-palette-gray-600;
                    font-weight: 400;
                }
            }
        }
    }

    p-paginator {
        flex-shrink: 0;
    }

    // PrimeNG component overrides
    ::ng-deep {
        // Options menu button (sort & view toggle)
        .options-menu-button {
            width: $button-size;
            height: $button-size;
            min-width: $button-size;
            padding: 0;

            .p-button-icon {
                width: $icon-size;
                height: $icon-size;
                font-size: $icon-size;
                color: $color-palette-gray-800 !important;

                &.pi-arrow-right-arrow-left {
                    transform: rotate(90deg);
                }
            }
        }

        // Paginator styling
        .p-paginator {
            background: transparent;
        }
    }
}

::ng-deep {
    // Options menu popup positioning
    .options-menu-popup.p-menu {
        transform: translateX(-100%);
        margin-left: $button-size;

        // Active menu item styling
        .p-menu-list {
            .active-menu-item {
                background-color: $color-palette-primary-200;
            }
        }
    }

    .dot-uve-palette-list__empty-text {
        font-size: 1rem;
        color: $color-palette-gray-700;
        margin: 0;
        line-height: 1.5;

        span {
            color: $color-palette-primary-600;
            text-decoration: underline;
            cursor: pointer;
            font-weight: 500;

            &:hover {
                color: $color-palette-primary-700;
            }
        }
    }
}
