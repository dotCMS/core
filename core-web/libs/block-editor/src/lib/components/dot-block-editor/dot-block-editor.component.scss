@use "variables" as *;

:host {
    position: relative;
    font-family: $font-default;
    height: 100%;
    display: block;

    .editor-wrapper {
        display: block;
        border-radius: $border-radius-sm;
        overflow: hidden;
        position: relative;
        resize: vertical;
        outline: $color-palette-gray-500 solid 1px;
    }

    .editor-wrapper--default {
        height: 500px;
    }

    .editor-wrapper--fullscreen {
        height: 100%;
    }

    .editor-wrapper--disabled {
        opacity: $field-disabled-opacity;
        background-color: $color-palette-gray-100;
        cursor: not-allowed;
        pointer-events: none;
    }

    // If a child is focused, set this style to the parent
    &:focus-within {
        outline-color: $color-palette-primary;
    }

    // Disabled state - prevent focus styling when disabled
    &.editor-disabled:focus-within {
        outline-color: $color-palette-gray-300;
    }

    tiptap-editor ::ng-deep {
        display: block;
        height: 100%;
        overflow-y: auto;
        width: 100%;

        .dot-drag-handle {
            cursor: grab;
            color: $color-palette-gray-500;
            display: flex;

            .pi:first-child {
                margin-right: -$spacing-2;
            }
        }

        .ProseMirror {
            -moz-box-sizing: border-box;
            -webkit-box-sizing: border-box;
            box-sizing: border-box;
            display: block;
            min-height: 100%;
            outline: none;
            padding: $dot-editor-size (4 * $dot-editor-size);
            font: $dot-editor-size;

            .ProseMirror-selectednode {
                &.dot-image,
                .dot-image {
                    outline: 1px solid $color-palette-primary;
                }
            }

            img {
                max-width: 100%;
                max-height: 100%;
                position: relative;

                &:before {
                    align-items: center;
                    background: $color-palette-gray-200;
                    border-radius: 3px;
                    border: 1px solid $color-palette-gray-500;
                    color: $color-palette-gray-700;
                    content: "The image URL " attr(src)
                        " seems to be broken, please double check the URL.";
                    display: flex;
                    height: 100%;
                    left: 0;
                    padding: $spacing-3;
                    position: absolute;
                    text-align: center;
                    width: 100%;
                }
            }

            // Import normalized typography styles
            @import "../../styles/block-editor-typography";

            ol li {
                list-style-type: decimal;
            }

            ul li {
                list-style-type: disc;
            }

            // Placeholder styling
            .is-empty::before {
                color: $color-palette-gray-500;
                content: attr(data-placeholder);
                float: left;
                position: absolute;
                pointer-events: none;
            }

            blockquote.is-empty::before,
            ol.is-empty::before,
            ul.is-empty::before {
                margin-top: $spacing-1;
            }

            .add-button {
                all: unset;
                cursor: pointer;
                border: solid 1px #eee;
                width: 2 * $dot-editor-size;
                height: 2 * $dot-editor-size;
                display: flex;
                align-items: center;
                justify-content: center;
                color: #666;
                background: #ffffff;
            }
        }

        // Disabled state styling for ProseMirror content
        &.editor-disabled .ProseMirror {
            color: $color-palette-gray-600;
            background-color: $color-palette-gray-100;
            cursor: not-allowed;
            user-select: none;
            pointer-events: none;

            // Disabled placeholder styling
            .is-empty::before {
                color: $color-palette-gray-400;
            }

            // Disabled button styling
            .add-button {
                cursor: not-allowed;
                opacity: $field-disabled-opacity;
                pointer-events: none;
            }
        }

        .ProseMirror {
            table {
                border-collapse: collapse;
                margin: 0;
                overflow: hidden;
                table-layout: fixed;
                width: 100%;

                td,
                th {
                    border: 2px solid $color-palette-gray-500;
                    box-sizing: border-box;
                    min-width: $spacing-3;
                    padding: 3px 20px 3px 5px;
                    position: relative;
                    vertical-align: top;
                }
                /* fix borders in FF: https://stackoverflow.com/a/16337203/3847132*/
                th {
                    background-clip: padding-box;
                }

                td > *,
                th > * {
                    margin-bottom: 0;
                }

                th {
                    background-color: $color-palette-gray-200;
                    font-weight: 700;
                    text-align: left;
                }

                .selectedCell {
                    background-color: $color-palette-gray-300;
                }

                .selectedCell:after {
                    content: "";
                    left: 0;
                    right: 0;
                    top: 0;
                    bottom: 0;
                    pointer-events: none;
                    position: absolute;
                }

                .column-resize-handle {
                    bottom: -2px;
                    position: absolute;
                    right: -2px;
                    pointer-events: none;
                    top: 0;
                    width: 4px;
                }

                p {
                    margin: 0;
                }

                .tableWrapper {
                    padding: $spacing-3 0;
                    overflow-x: auto;
                }

                .resize-cursor {
                    cursor: ew-resize;
                    cursor: col-resize;
                }

                .dot-cell-arrow {
                    position: absolute;
                    display: none;
                    top: 3px;
                    right: 5px;
                    border: solid black;
                    border-width: 0 2px 2px 0;
                    padding: 3px;
                    transform: rotate(45deg);
                    -webkit-transform: rotate(45deg);
                    background: transparent;
                    cursor: pointer;
                    z-index: 100;
                }
                .selectedCell {
                    .dot-cell-arrow {
                        display: block;
                    }
                }
                td.focus,
                th.focus {
                    .dot-cell-arrow {
                        display: block;
                    }
                }
            }

            .ai-loading {
                display: flex;
                justify-content: center;
                align-items: center;
                min-width: 100%;
                padding: $spacing-1;
                border-radius: $spacing-1;
                border: 1px solid $color-palette-gray-400;
                color: $color-palette-primary;
            }

            .dot-node-center {
                margin: 0 auto;
            }

            .dot-node-right {
                margin-left: auto;
            }

            .dot-node-left {
                margin-right: auto;
            }
        }

        .video-container {
            margin-bottom: $spacing-3;
            aspect-ratio: 16/9;
            height: 300px;

            video {
                width: 100%;
                height: 100%;
            }
        }

        .ai-content-container {
            &.ProseMirror-selectednode {
                background-color: $color-palette-primary-op-20;
                border: 1px solid $color-palette-primary-300;
            }
        }

        .loader-style {
            display: flex;
            justify-content: center;
            flex-direction: column;
            align-items: center;
            min-height: 12.5rem;
            min-width: 25rem;
            width: 25.5625rem;
            height: 17.375rem;
            padding: 0.5rem;
            border-radius: 0.5rem;
            border: 1.5px solid $color-palette-gray-400;
        }

        .p-progress-spinner {
            border: 5px solid $color-palette-gray-300;
            border-radius: 50%;
            border-top: 5px solid $color-palette-primary;
            width: 2.4rem;
            height: 2.4rem;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% {
                transform: rotate(0deg);
            }
            100% {
                transform: rotate(360deg);
            }
        }
    }

    tiptap-editor {
        /* To avoid jumps in the content when the scroll is hidden */
        scrollbar-gutter: stable;
    }
    .overflow-hidden {
        overflow-y: hidden;
    }
}
