@use "variables" as *;

@import "forms";
@import "mixins";
@import "typography";
@import "dotcms-theme/utils/theme-variables"; /* temporary */
// @import "dotcms-theme/theme"; /* prime-ng */

// INCLUDE FONT FACES
// @include assistant-font-face(400, "Regular");
// @include assistant-font-face(500, "SemiBold");
// @include assistant-font-face(700, "Bold");

@include lato-font-face(400, "Regular");
@include lato-font-face(500, "SemiBold");
@include lato-font-face(700, "Bold");

@include redhatmono-font-face(400, "Regular");

// MATERIAL DESIGN ICONS
@font-face {
    font-family: "Material Icons";
    font-style: normal;
    font-weight: 400;
    font-display: swap;
    src: url("/dotAdmin/assets/MaterialIcons-Regular.ttf") format("truetype");
}

.material-icons {
    font-family: "Material Icons", $font-default;
    font-weight: normal;
    font-style: normal;
    font-size: 24px;
    line-height: 1;
    letter-spacing: normal;
    text-transform: none;
    display: inline-block;
    white-space: nowrap;
    word-wrap: normal;
    direction: ltr;
    font-feature-settings: "liga";
    -webkit-font-feature-settings: "liga";
    -webkit-font-smoothing: antialiased;
}

:root {
    --border-radius: 0.375rem; // 6px;

    @include root-colors();
}

*,
*:before,
*:after {
    box-sizing: border-box;
}

html,
body {
    height: 100%;
    margin: 0;
    padding: 0;
}

html {
    color: $black;
    font-family: $font-default;
}

body {
    background-position: top center;
    background-repeat: no-repeat;
    background-size: cover;
}

a {
    color: $color-palette-primary;

    &:hover {
        text-decoration: none;
    }

    &.link-secondary {
        color: $color-palette-secondary;
    }

    &[actionlink] {
        color: $color-palette-secondary;
        font-size: $button-tiny-text-size;
        text-transform: uppercase;
        cursor: pointer;
    }
}

button {
    font-family: $font-default;
}

// FORMS

.p-fluid {
    .p-inputgroup {
      .p-button {
        width: auto;

        &.p-button-icon-only {
          width: 2.5rem;
        }
      }

      .p-inputtext {
        flex: 1 1 auto;
        width: 1%;
      }

      .p-inputwrapper {
        flex: 1 1 auto;
        width: 1%;

        > .p-component {
          flex: 1 1 auto;
          width: 1%;
        }
      }
    }

    .p-autocomplete.p-component {
      display: grid;
      align-items: center;
      grid-template-columns: auto repeat(3, max-content);
    }

    .p-dropdown {
        display: flex;

      input.p-dropdown-label {
        width: 100%;
      }
    }

    .p-inputtext {
      width: 100%;
    }

    .p-input-icon-left,
    .p-input-icon-right {
      display: block;
      width: 100%;
    }

    .p-inputtextarea {
      width: 100%;
    }

    .p-password {
      display: flex;
    }
  }


.field {
    margin-bottom: $spacing-1;

    & > label {
        display: inline-block;
        margin-bottom: .5rem;
    }
}

.p-panel-content-container .p-panel-content {
    column-gap: 1.5rem;
    row-gap: 1.5rem;
    display: grid;
    grid-template-columns: repeat(auto-fill, 250px);
    height: 100%;
    overflow: hidden;
    position: relative;
    padding-left: 1rem;
    padding-right: 1rem;
    padding-bottom: 1.5rem;
}

/*

Dragula clone and append dragged element to the body we need to have their styles globally.
However this is for the dragula we use in the angular components the one in the edit page have their own place because we inject it to the page iframe

*/

.gu-mirror {
    position: fixed !important;
    margin: 0 !important;
    z-index: 9999 !important;
    opacity: 1;
    transform-origin: right top;
}
.gu-hide {
    display: none !important;
}
.gu-unselectable {
    user-select: none !important;
}

code {
    color: $color-accessible-text-purple;
    background-color: $color-accessible-text-purple-bg;
    padding: $spacing-0 $spacing-1;
    font-family: $font-code;
    line-break: anywhere;
}

.dot-mask {
    background-color: transparent;
    backdrop-filter: none;
    -webkit-backdrop-filter: none;
    pointer-events: auto;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}
