.dijitButton,
.dijitToggleButton {
    .dijitButtonNode {
        padding: 0 $button-padding;
    }
    .dijitButtonText {
        line-height: $field-height - 2px;
        height: $field-height - 2px; // Need to substract the border (top and bottom)
    }
}

.dijitButton,
.dijitComboBox,
.dijitComboButton,
.dijitDropDownButton,
.dijitToggleButton {
    margin: 0;
}

.dijit {
    &Button {
        @include btn(
            $button-normal-shadow,
            $button-normal-bgcolor,
            $button-normal-border,
            $button-normal-textcolor
        );

        &Text {
            text-transform: uppercase;
        }

        &Node {
            border: none;
        }

        &Hover {
            @include btn(
                $button-hover-shadow,
                $button-hover-bgcolor,
                $button-hover-border,
                $button-hover-textcolor
            );
        }

        &Focused {
            @include btn(
                $button-active-shadow,
                $button-active-bgcolor,
                $button-active-border,
                $button-active-textcolor
            );
        }

        &Disabled {
            @include btn(
                $button-disabled-shadow,
                $button-disabled-bgcolor,
                $button-disabled-border,
                $button-disabled-textcolor
            );
        }
    }

    &DropDownButton {
        @include btn(
            $dropdownbutton-normal-shadow,
            $dropdownbutton-normal-bgcolor,
            $dropdownbutton-normal-border,
            $dropdownbutton-normal-textcolor
        );

        .dijitButtonNode {
            padding-left: $button-padding;
        }

        .dijitArrowButtonInner {
            width: $dropdownbutton-arrow-container-size;

            @if $dropdownbutton-normal-arrow-bgcolor != "transparent" {
                // TODO: write this mixin
                background-color: $dropdownbutton-normal-arrow-bgcolor;
            }

            &:before {
                @if $dropdownbutton-normal-arrow-url {
                    background-image: url($dropdownbutton-normal-arrow-url);
                } @else {
                    @include create-arrow(
                        $dropdownbutton-arrow-size,
                        $dropdownbutton-normal-arrow-color
                    );
                }
            }
        }

        &Hover {
            @include btn(
                $dropdownbutton-hover-shadow,
                $dropdownbutton-hover-bgcolor,
                $dropdownbutton-hover-border,
                $dropdownbutton-hover-textcolor
            );

            .dijitArrowButtonInner {
                @if $dropdownbutton-hover-arrow-bgcolor != "transparent" {
                    background-color: $dropdownbutton-hover-arrow-bgcolor;
                }

                &:before {
                    @if $dropdownbutton-hover-arrow-url {
                        background-image: url($dropdownbutton-hover-arrow-url);
                    } @else {
                        @include create-arrow(
                            $dropdownbutton-arrow-size,
                            $dropdownbutton-hover-arrow-color
                        );
                    }
                }
            }
        }

        &Active {
            @include btn(
                $dropdownbutton-active-shadow,
                $dropdownbutton-active-bgcolor,
                $dropdownbutton-active-border,
                $dropdownbutton-active-textcolor
            );

            .dijitArrowButtonInner {
                @if $dropdownbutton-active-arrow-bgcolor != "transparent" {
                    background-color: $dropdownbutton-active-arrow-bgcolor;
                }

                &:before {
                    @if $dropdownbutton-active-arrow-url {
                        background-image: url($dropdownbutton-active-arrow-url);
                    } @else {
                        @include create-arrow(
                            $dropdownbutton-arrow-size,
                            $dropdownbutton-active-arrow-color
                        );
                    }
                }
            }
        }

        &Focused {
            @include btn(
                $dropdownbutton-focused-shadow,
                $dropdownbutton-focused-bgcolor,
                $dropdownbutton-focused-border,
                $dropdownbutton-focused-textcolor
            );
        }

        &Disabled {
            @include btn(
                $dropdownbutton-disabled-shadow,
                $dropdownbutton-disabled-bgcolor,
                $dropdownbutton-disabled-border,
                $dropdownbutton-disabled-textcolor
            );

            .dijitArrowButtonInner {
                @if $dropdownbutton-disabled-arrow-bgcolor != "transparent" {
                    background-color: $dropdownbutton-disabled-arrow-bgcolor;
                }

                &:before {
                    @if $dropdownbutton-disabled-arrow-url {
                        background-image: url($dropdownbutton-disabled-arrow-url);
                    } @else {
                        @include create-arrow(
                            $dropdownbutton-arrow-size,
                            $dropdownbutton-disabled-arrow-color
                        );
                    }
                }
            }
        }
    }

    &ComboButton {
        border-collapse: inherit;

        @include btn(
            $combobutton-normal-shadow,
            $combobutton-normal-bgcolor,
            $combobutton-normal-border,
            $combobutton-normal-textcolor
        );

        .dijitArrowButtonInner {
            width: $combobutton-arrow-container-size;

            @if $combobutton-normal-arrow-bgcolor != "transparent" {
                // TODO: write this mixin
                background-color: $combobutton-normal-arrow-bgcolor;
            }

            &:before {
                @if $combobutton-normal-arrow-url {
                    background-image: url($combobutton-normal-arrow-url);
                } @else {
                    @include create-arrow($combobutton-arrow-size, $combobutton-normal-arrow-color);
                }
            }
        }

        .dijitButtonNode {
            padding-left: $button-padding;

            &.dijitDownArrowButton {
                padding-left: 0;
            }
        }

        &Hover {
            @include btn(
                $combobutton-hover-shadow,
                $combobutton-hover-bgcolor,
                $combobutton-hover-border,
                $combobutton-hover-textcolor
            );

            .dijitArrowButtonInner {
                @if $combobutton-hover-arrow-bgcolor != "transparent" {
                    background-color: $combobutton-hover-arrow-bgcolor;
                }

                &:before {
                    @if $combobutton-hover-arrow-url {
                        background-image: url($combobutton-hover-arrow-url);
                    } @else {
                        @include create-arrow(
                            $combobutton-arrow-size,
                            $combobutton-hover-arrow-color
                        );
                    }
                }
            }
        }

        &Active {
            @include btn(
                $combobutton-active-shadow,
                $combobutton-active-bgcolor,
                $combobutton-active-border,
                $combobutton-active-textcolor
            );

            .dijitArrowButtonInner {
                @if $combobutton-active-arrow-bgcolor != "transparent" {
                    background-color: $combobutton-active-arrow-bgcolor;
                }

                &:before {
                    @if $combobutton-active-arrow-url {
                        background-image: url($combobutton-active-arrow-url);
                    } @else {
                        @include create-arrow(
                            $combobutton-arrow-size,
                            $combobutton-active-arrow-color
                        );
                    }
                }
            }
        }

        &Focused,
        &HoverFocused {
            @include btn(
                $combobutton-focused-shadow,
                $combobutton-focused-bgcolor,
                $combobutton-focused-border,
                $combobutton-focused-textcolor
            );

            .dijitArrowButtonInner {
                @if $combobutton-focused-arrow-bgcolor != "transparent" {
                    background-color: $combobutton-focused-arrow-bgcolor;
                }

                &:before {
                    @if $combobutton-focused-arrow-url {
                        background-image: url($combobutton-focused-arrow-url);
                    } @else {
                        @include create-arrow(
                            $combobutton-arrow-size,
                            $combobutton-focused-arrow-color
                        );
                    }
                }
            }
        }

        &Disabled {
            @include btn(
                $combobutton-disabled-shadow,
                $combobutton-disabled-bgcolor,
                $combobutton-disabled-border,
                $combobutton-disabled-textcolor
            );

            .dijitArrowButtonInner {
                border-left: $combobutton-disabled-arrow-border;

                @if $combobutton-disabled-arrow-bgcolor != "transparent" {
                    background-color: $combobutton-disabled-arrow-bgcolor;
                }

                &:before {
                    @if $combobutton-disabled-arrow-url {
                        background-image: url($combobutton-disabled-arrow-url);
                    } @else {
                        @include create-arrow(
                            $combobutton-arrow-size,
                            $combobutton-disabled-arrow-color
                        );
                    }
                }
            }
        }
    }

    &ToggleButton {
        @include btn(
            $togglebutton-normal-shadow,
            $togglebutton-normal-bgcolor,
            $togglebutton-normal-border,
            $togglebutton-normal-textcolor
        );

        .dijitIcon {
            visibility: hidden;
        }

        &Checked {
            .dijitIcon {
                visibility: visible;
            }
        }

        &Focused,
        &Checked {
            @include btn(
                $togglebutton-active-shadow,
                $togglebutton-active-bgcolor,
                $togglebutton-active-border,
                $togglebutton-active-textcolor
            );
        }

        &Hover,
        &HoverFocused,
        &CheckedHover {
            @include btn(
                $togglebutton-hover-shadow,
                $togglebutton-hover-bgcolor,
                $togglebutton-hover-border,
                $togglebutton-hover-textcolor
            );
        }

        &Disabled {
            @include btn(
                $togglebutton-disabled-shadow,
                $togglebutton-disabled-bgcolor,
                $togglebutton-disabled-border,
                $togglebutton-disabled-textcolor
            );
        }
    }
}
