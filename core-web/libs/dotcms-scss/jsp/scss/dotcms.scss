// Font-icons
@import "font-awesome-4.7.0/mixins";
@import "font-awesome-4.7.0/variables";
@import "font-awesome-4.7.0/path";
@import "font-awesome-4.7.0/core";
@import "font-awesome-4.7.0/icons";

@import "variables";

*,
*:before,
*:after {
    outline: none; // not 100% sure about this, google it
    box-sizing: border-box;
}

:root {
    @include root-colors();
}

// MATERIAL DESIGN FOR DOJO THEME
@import "dijit-theme-dotcms";

// DOJO THEME
@import "dijit/theme";

// BACKEND
//@import "backend/legacy"; // THINGS WE ARE GOING TO GET RID OFF
@import "backend/common";

// Include font faces
@include assistant-font-face(400, "Regular");
@include assistant-font-face(500, "SemiBold");
@include assistant-font-face(700, "Bold");

@font-face {
    font-family: "Material Icons";
    font-style: normal;
    font-weight: 400;
    font-display: swap;
    src: url("/dotAdmin/assets/MaterialIcons-Regular.ttf") format("truetype");
}

#structure_inode_popup .dijitMenuItem .label {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

#structure_inode_popup .dijitMenuItem:has(> .separator) {
    border-top: 1px solid $color-palette-gray-400;
}

html {
    font-family: $font-default;
    color: $font-color-base;
}

body {
    margin: 0;
    padding: 0;
}
span,
label,
div,
dl,
dt,
dd,
ul,
ol,
li,
pre,
code,
form,
fieldset,
legend,
input,
button,
textarea,
select,
p,
blockquote,
th,
td {
    font-size: $font-size-md;
}

.material-icons {
    font-family: "Material Icons", sans-serif;
    font-weight: normal;
    font-style: normal;
    font-size: 24px; /* Preferred icon size */
    display: inline-block;
    line-height: 1;
    text-transform: none;
    letter-spacing: normal;
    word-wrap: normal;
    white-space: nowrap;
    direction: ltr;
    -webkit-font-smoothing: antialiased;
    text-rendering: optimizeLegibility;
    -moz-osx-font-smoothing: grayscale;
}

.edit-content-full-screen {
    width: 100% !important;
    max-width: 100% !important;
    margin: 0px;
    max-height: none;
    padding: 0;
    height: calc(
        100vh - 3rem - 20px - 1rem - 0.5rem - 20px - 61px - 1rem
    ); // This calculation represents all the elements that surrounds the element we want to make fullscreen,
    // this way we make it occupy all the available space
}
