@use "variables" as *;

// Host component debe ocupar toda la altura
:host {
    display: block;
    height: 100%;
}

// Custom Accordion Styles
.custom-accordion {
    height: 100%;
    display: flex;
    flex-direction: column;
    overflow: hidden;

    // Durante transiciones, deshabilitar todos los eventos del mouse
    &--transitioning {
        pointer-events: none;

        .accordion-content {
            pointer-events: none !important;
        }

        // Solo permitir clicks en headers durante transición
        .accordion-header {
            pointer-events: auto;
        }
    }
}

.accordion-tab {
    display: flex;
    flex-direction: column;

    &.active {
        flex: 1; // Tab activo ocupa todo el espacio restante
        min-height: 0; // Importante para que el contenido no empuje otros elementos

        .accordion-content {
            flex: 1;
            min-height: 0;
            overflow: hidden; // El contenedor no debe hacer scroll
        }
    }

    // Tabs inactivos solo muestran el header
    &:not(.active) {
        flex: none; // No ocupa espacio extra
    }
}

.accordion-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: $spacing-3;
    border-bottom: 1px solid $color-palette-gray-400;
    cursor: pointer;
    user-select: none;
    min-height: 56px;
    transition:
        background-color 0.2s ease,
        border-bottom 0.1s ease 0.4s; // Delay border transition

    &:hover {
        background: $color-palette-gray-100;
    }

    span {
        font-size: $font-size-lmd;
        font-weight: $font-weight-medium-bold;
        color: $black;
        flex: 1;
    }

    i {
        font-size: $font-size-sm;
        color: $color-palette-primary;
        margin-left: auto;
        transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
    }
}

// Rotación del chevron cuando el tab está activo
.accordion-tab.active .accordion-header i {
    transform: rotate(180deg);
}

.accordion-content {
    border-bottom: 1px solid $color-palette-gray-400;
    overflow: hidden;
    max-height: 0;
    opacity: 0;
    transform: translateY(-8px);
    pointer-events: none; // Deshabilitar eventos durante colapso
    transition:
        max-height 0.4s cubic-bezier(0.25, 0.8, 0.25, 1),
        opacity 0.4s cubic-bezier(0.25, 0.8, 0.25, 1),
        transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);

    // Estado expandido - animación suave
    &--expanded {
        max-height: 2000px; // Altura suficiente para cualquier contenido
        opacity: 1;
        transform: translateY(0);
        pointer-events: auto; // Habilitar eventos cuando está expandido
        transition:
            max-height 0.5s cubic-bezier(0.25, 0.8, 0.25, 1),
            opacity 0.5s cubic-bezier(0.25, 0.8, 0.25, 1),
            transform 0.5s cubic-bezier(0.25, 0.8, 0.25, 1);
    }

    // Estado colapsado - animación más rápida
    &--collapsed {
        max-height: 0;
        opacity: 0;
        transform: translateY(-8px);
        pointer-events: none; // Deshabilitar eventos durante colapso
        transition:
            max-height 0.3s cubic-bezier(0.4, 0, 0.2, 1),
            opacity 0.3s cubic-bezier(0.4, 0, 0.2, 1),
            transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    }

    // Asegurar que el contenido del history ocupe todo el espacio disponible
    .history {
        height: 100%;
        display: flex;
        flex-direction: column;
        min-height: 0;

        &__content {
            flex: 1;
            overflow-y: auto;
            min-height: 0;
        }
    }
}

// Reglas especiales para bordes
.accordion-tab {
    // El último tab NUNCA debe tener border-bottom en su contenido, sin importar el estado
    &:last-child .accordion-content {
        border-bottom: none !important;
    }

    // Cuando hay un tab expandido, el último header colapsado no debe tener border-bottom
    &:last-child .accordion-header {
        border-bottom: 1px solid $color-palette-gray-400;
        transition:
            background-color 0.2s ease,
            border-bottom 0.1s ease; // Sin delay para el estado normal
    }
}

// Cuando hay algún tab activo, remover border del último header si está colapsado
.custom-accordion--has-active {
    .accordion-tab:last-child:not(.active) .accordion-header {
        border-bottom: none;
        transition:
            background-color 0.2s ease,
            border-bottom 0.1s ease 0.3s; // Delay para que desaparezca después del colapso
    }
}

// Block
.history {
    display: flex;
    flex-direction: column;
    height: 100%;
    position: relative;
    flex: 1; // Ocupa todo el espacio disponible en el accordion
}

// Elements
.history__content {
    flex: 1;
    overflow-y: auto;
    padding: $spacing-3 $spacing-4;
    min-height: 0; // Importante para flexbox scroll

    ::ng-deep .history__timeline {
        .p-timeline-event-marker {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            border: 2px solid $white;
            position: relative;
            z-index: 1;
        }

        .p-timeline-event-content {
            padding: 0;
            overflow: hidden;
            margin-bottom: $spacing-1;
            margin-left: $spacing-0;
        }

        .p-timeline-event-connector {
            background: $color-palette-gray-300;
            width: 2px;
        }

        .p-timeline-event-opposite {
            display: none;
        }
    }
}

.history__loading {
    padding: $spacing-3 $spacing-4;

    ::ng-deep .p-skeleton {
        background-color: $color-palette-gray-200;
        border-radius: $border-radius-md;
    }
}

.history__skeleton-item {
    margin-bottom: $spacing-3;

    &:last-child {
        margin-bottom: 0;
    }
}

.history__empty {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: $spacing-4;
}

// Timeline markers
.history__marker {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 2px solid $white;
    position: relative;
    z-index: 1;
    background: $color-palette-gray-400;
}

.history__marker--live {
    background: $color-palette-green;
    box-shadow: 0 0 0 2px $color-palette-green-op-20;
}

.history__marker--draft {
    background: $color-palette-yellow;
    box-shadow: 0 0 0 2px $color-palette-yellow-op-20;
}

// Timeline item structure
.history__timeline-item {
    background: $color-palette-gray-100;
    border-radius: $border-radius-md;
    padding: $spacing-1;
    position: relative;
    cursor: pointer;
    display: flex;
    flex-direction: column;
    gap: $spacing-1;
    transition: background-color $basic-speed ease;

    &:hover {
        background: $color-palette-primary-op-10;

        .history__actions {
            visibility: visible;
        }
    }
}

.history__item-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.history__time-section {
    display: flex;
    align-items: center;
    gap: $spacing-2;
}

.history__time-relative {
    font-weight: $font-weight-medium-bold;
    color: $black;
    font-size: $font-size-md;
}

.history__actions {
    display: flex;
    visibility: hidden;
    align-items: center;
    margin-left: $spacing-1;
}

.history__user-section {
    display: flex;
    align-items: center;
    gap: $spacing-0;
}

::ng-deep .history__avatar.p-avatar {
    width: 21px;
    height: 21px;
}

.history__user-name {
    color: $color-palette-gray-800;
    font-size: $font-size-md;
}

.history__state {
    padding: $spacing-1 $spacing-2;
    border-radius: $border-radius-sm;
    font-size: $font-size-xs;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.history__state--working {
    background: $color-palette-yellow-op-10;
    color: $color-palette-yellow;
}

.history__state--live {
    background: $color-palette-green-op-10;
    color: $color-palette-green;
}

// Tooltip styles
::ng-deep .history__tooltip.p-tooltip {
    &.p-tooltip-bottom {
        transform: translateX(-55px);
    }

    .p-tooltip-text {
        background: $color-palette-primary-200;
        padding: 0;
        min-width: 220px;
        max-width: 220px;

        .history__overlay-content {
            padding: $spacing-1;
            display: flex;
            flex-direction: column;
            gap: $spacing-0;
        }

        .history__overlay-title {
            margin: 0;
            color: $color-palette-gray-800;
            font-size: $font-size-sm;
            font-weight: $font-weight-bold;
            word-wrap: break-word;
        }

        .history__overlay-list {
            padding-left: $spacing-3;
            margin: 0;

            li {
                color: $color-palette-gray-700;
            }
        }
    }

    &.p-tooltip-bottom {
        .p-tooltip-arrow {
            border-bottom-color: $color-palette-primary-200;
            border-top-color: transparent;
            border-left-color: transparent;
            border-right-color: transparent;
            left: 20px;
        }
    }
}

// Pagination styles
.history__pagination {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
    margin-top: 1rem;
    padding: 0.75rem 0;
    border-top: 1px solid var(--color-palette-gray-200);
}

.history__pagination-button-button {
    width: 2rem;
    height: 2rem;

    &:disabled {
        opacity: 0.4;
        cursor: not-allowed;
    }

    &:not(:disabled):hover {
        background-color: var(--color-palette-gray-100);
    }
}
