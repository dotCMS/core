<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Direct Analytics Cluster Load Test">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="event_timestamp" elementType="Argument">
            <stringProp name="Argument.name">event_timestamp</stringProp>
            <stringProp name="Argument.value">${__time(yyyy-MM-dd'T'HH:mm:ss.SSS'Z')}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="thread_id" elementType="Argument">
            <stringProp name="Argument.name">thread_id</stringProp>
            <stringProp name="Argument.value">${__threadNum}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="iteration_id" elementType="Argument">
            <stringProp name="Argument.name">iteration_id</stringProp>
            <stringProp name="Argument.value">${__counter(FALSE,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="random_request_id" elementType="Argument">
            <stringProp name="Argument.name">random_request_id</stringProp>
            <stringProp name="Argument.value">${__UUID()}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="random_session_id" elementType="Argument">
            <stringProp name="Argument.name">random_session_id</stringProp>
            <stringProp name="Argument.value">${__Random(100000000,999999999)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="analytics_host" elementType="Argument">
            <stringProp name="Argument.name">analytics_host</stringProp>
            <stringProp name="Argument.value">${__P(analytics.host,jitsu-api.analytics-dev.svc.cluster.local)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="analytics_port" elementType="Argument">
            <stringProp name="Argument.name">analytics_port</stringProp>
            <stringProp name="Argument.value">${__P(analytics.port,8001)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="analytics_scheme" elementType="Argument">
            <stringProp name="Argument.name">analytics_scheme</stringProp>
            <stringProp name="Argument.value">${__P(analytics.scheme,http)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="thread.number" elementType="Argument">
            <stringProp name="Argument.name">thread.number</stringProp>
            <stringProp name="Argument.value">${__P(thread.number,100)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="rampup" elementType="Argument">
            <stringProp name="Argument.name">rampup</stringProp>
            <stringProp name="Argument.value">${__P(rampup,60)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="test.duration" elementType="Argument">
            <stringProp name="Argument.name">test.duration</stringProp>
            <stringProp name="Argument.value">${__P(test.duration,120)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="events.per.second" elementType="Argument">
            <stringProp name="Argument.name">events.per.second</stringProp>
            <stringProp name="Argument.value">${__P(events.per.second,100)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="analytics.key" elementType="Argument">
            <stringProp name="Argument.name">analytics.key</stringProp>
            <stringProp name="Argument.value">${__P(analytics.key,YOUR_ANALYTICS_KEY_HERE)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="max.response.time" elementType="Argument">
            <stringProp name="Argument.name">max.response.time</stringProp>
            <stringProp name="Argument.value">${__P(max.response.time,5000)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${analytics_host}</stringProp>
        <stringProp name="HTTPSampler.port">${analytics_port}</stringProp>
        <stringProp name="HTTPSampler.protocol">${analytics_scheme}</stringProp>
        <stringProp name="HTTPSampler.connect_timeout">10000</stringProp>
        <stringProp name="HTTPSampler.response_timeout">30000</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Direct Analytics API Headers" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Content-Type" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="Accept" elementType="Header">
            <stringProp name="Header.name">Accept</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">JMeter/Analytics-ClusterTest</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Direct Analytics Events Load Test" enabled="true">
        <stringProp name="ThreadGroup.num_threads">${thread.number}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${rampup}</stringProp>
        <stringProp name="ThreadGroup.duration">${test.duration}</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
          <intProp name="calcMode">2</intProp>
          <stringProp name="throughput">${__javaScript(${events.per.second} * 60)}</stringProp>
        </ConstantThroughputTimer>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Direct Analytics Event Request" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{"utc_time":"${event_timestamp}","event_type":"PAGE_REQUEST","url":"/test-page-${thread_id}-${iteration_id}","doc_host":"your-dotcms-instance.dotcms.cloud","environment_name":"auth","sessionId":"CLUSTERTEST${random_session_id}","request_id":"${random_request_id}","user":{"identifier":"clustertest.user.${thread_id}","email":"clustertest${thread_id}@dotcms.com"},"customer_name":"example-customer","cluster":"example-cluster","src":"dotAnalytics-ClusterTest","type":"track","timestamp":"${event_timestamp}"}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/v1/event?token=${analytics.key}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.BROWSER_COMPATIBLE_MULTIPART">false</boolProp>
          <boolProp name="HTTPSampler.image_parser">false</boolProp>
          <boolProp name="HTTPSampler.concurrentDwn">false</boolProp>
          <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
          <boolProp name="HTTPSampler.md5">false</boolProp>
          <intProp name="HTTPSampler.ipSourceType">0</intProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Success Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
              <stringProp name="49587">201</stringProp>
              <stringProp name="49588">202</stringProp>
              <stringProp name="51511">204</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">Direct analytics event request failed</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">33</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DurationAssertion guiclass="DurationAssertionGui" testclass="DurationAssertion" testname="Response Time Assertion" enabled="true">
            <stringProp name="DurationAssertion.duration">${max.response.time}</stringProp>
          </DurationAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan> 