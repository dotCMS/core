<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">


    <modelVersion>4.0.0</modelVersion>
    <groupId>com.dotcms</groupId>
    <artifactId>dotcms-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <description>DotCMS</description>
    <properties>
        <tomcat.version>9.0.85</tomcat.version>
        <!-- Add any properties here that are to have defaults and overrides set in the environment properties -->
        <!--suppress UnresolvedMavenProperty -->
        <mvn.environment.name>${ext.mvn.environment.name}</mvn.environment.name>
        <!--suppress UnresolvedMavenProperty -->
        <docker.image.search>${ext.docker.image.search}</docker.image.search>
        <!--suppress UnresolvedMavenProperty -->
        <docker.image.postgres>${ext.docker.image.postgres}</docker.image.postgres>
        <!--suppress UnresolvedMavenProperty -->
        <context.name>${ext.default.context.name}</context.name>
        <docker.properties.prefix>ext.docker.${context.module}.${context.name}.dotcms</docker.properties.prefix>
        <docker.skip>false</docker.skip>
        <docker.jacoco.skip>true</docker.jacoco.skip>
        <!-- starter -->
        <starter.download.folder>${project.build.directory}/starter</starter.download.folder>
        <starter.deploy.version>empty_20240201</starter.deploy.version>
        <starter.deploy.filename>starter.zip</starter.deploy.filename>
        <starter.run.version>${starter.deploy.version}</starter.run.version>
        <starter.run.filename>starter-${starter.run.version}.zip</starter.run.filename>
        <starter.run.path>${starter.download.folder}/${starter.run.filename}</starter.run.path>
        <dependency-check-maven.version>8.3.1</dependency-check-maven.version>
        <surefire-report-maven.version>3.1.0</surefire-report-maven.version>
        <project-info-reports.version>3.4.5</project-info-reports.version>
        <gib.fetchBaseBranch>true</gib.fetchBaseBranch>
        <gib.referenceBranch>refs/remotes/origin/master</gib.referenceBranch>
        <gitflow-incremental-builder.version>4.4.1</gitflow-incremental-builder.version>
        <insecure.repositories>WARN</insecure.repositories>
        <!-- jandex maven plugin version -->
        <jandex-maven-plugin.version>1.2.3</jandex-maven-plugin.version>
        <java.version>11</java.version>
        <javadoc.additional.params>-Xdoclint:none --allow-script-in-comments</javadoc.additional.params>
        <jdk.min.version>${maven.compiler.argument.source}</jdk.min.version>
        <maven.compiler.argument.source>${maven.compiler.source}</maven.compiler.argument.source>
        <maven.compiler.argument.target>${maven.compiler.target}</maven.compiler.argument.target>
        <maven.compiler.argument.testSource>${maven.compiler.testSource}</maven.compiler.argument.testSource>
        <maven.compiler.argument.testTarget>${maven.compiler.testTarget}</maven.compiler.argument.testTarget>
        <maven.compiler.parameters>true</maven.compiler.parameters>
        <maven.compiler.release>11</maven.compiler.release>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.testSource>${maven.compiler.source}</maven.compiler.testSource>
        <maven.compiler.testTarget>${maven.compiler.target}</maven.compiler.testTarget>
        <maven.min.version>3.8.1</maven.min.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <skipApplyFormat>true</skipApplyFormat>
        <skipFormat>true</skipFormat>
        <skipOwasp>false</skipOwasp>
        <skipRewriteDryRun>true</skipRewriteDryRun>
        <rewriteRun>false</rewriteRun>
        <sourceReleaseAssemblyDescriptor>source-release</sourceReleaseAssemblyDescriptor>
        <!--  maven-project-info-reports-plugins  -->
        <version.antrun.plugin>3.1.0</version.antrun.plugin>
        <version.assembly.plugin>3.6.0</version.assembly.plugin>
        <version.buildhelper.plugin>3.4.0</version.buildhelper.plugin>
        <version.buildnumber.plugin>3.1.0</version.buildnumber.plugin>
        <version.cargo.plugin>1.10.12</version.cargo.plugin>
        <version.checkstyle>10.11.0</version.checkstyle>
        <version.checkstyle.plugin>3.3.0</version.checkstyle.plugin>
        <version.clean.plugin>3.3.2</version.clean.plugin>
        <version.compiler.plugin>3.11.0</version.compiler.plugin>
        <version.dependency.plugin>3.6.0</version.dependency.plugin>
        <version.deploy.plugin>3.1.1</version.deploy.plugin>
        <version.docker-compose.plugin>4.0.0</version.docker-compose.plugin>
        <!-- version.* properties are defined in jboss-parent and are overridden/updated here: -->
        <version.enforcer.plugin>3.0.0</version.enforcer.plugin>
        <version.exec.plugin>3.0.0</version.exec.plugin>
        <version.surefire.plugin>3.2.5</version.surefire.plugin>
        <version.failsafe.plugin>${version.surefire.plugin}</version.failsafe.plugin>
        <version.findbugs.plugin>3.0.5</version.findbugs.plugin>
        <version.gpg.plugin>3.1.0</version.gpg.plugin>
        <version.help.plugin>3.4.0</version.help.plugin>
        <version.install.plugin>3.1.1</version.install.plugin>
        <version.jar.plugin>3.3.0</version.jar.plugin>
        <version.javadoc.plugin>3.5.0</version.javadoc.plugin>
        <version.jxr.plugin>3.3.0</version.jxr.plugin>
        <version.jococo.plugin>0.8.11</version.jococo.plugin>
        <version.javancss.plugin>2.1</version.javancss.plugin>
        <version.license.plugin>1.20</version.license.plugin>
        <version.pir.plugin>3.4.0</version.pir.plugin>
        <version.rar.plugin>2.4</version.rar.plugin>
        <version.release.plugin>2.5.3</version.release.plugin>
        <version.resources.plugin>3.3.1</version.resources.plugin>
        <version.rewrite-maven-plugin>5.21.0</version.rewrite-maven-plugin>
        <version.shade.plugin>3.2.1</version.shade.plugin>
        <version.site.plugin>4.0.0-M8</version.site.plugin>
        <version.sonar.plugin>3.10.0.2594</version.sonar.plugin>
        <version.source.plugin>3.1.0</version.source.plugin>
        <version.frontend.plugin>1.12.1</version.frontend.plugin>
        <version.properties.plugin>1.2.1</version.properties.plugin>
        <version.versions.plugin>2.8.1</version.versions.plugin>
        <version.maven.plugin.plugin>3.8.1</version.maven.plugin.plugin>
        <version.war.plugin>3.2.3</version.war.plugin>
        <version.docker-maven.plugin>0.43.4</version.docker-maven.plugin>
        <test.working.dir>${project.build.directory}/testdata</test.working.dir>
        <test.temp.dir>${test.working.dir}/temp</test.temp.dir>
        <sonar.projectKey>core-maven:${project.groupId}:${project.artifactId}</sonar.projectKey>
        <sonar.projectName>core-maven</sonar.projectName>
        <sonar.sourceEncoding>UTF-8</sonar.sourceEncoding>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.coverage.jacoco.xmlReportPaths>${maven.multiModuleProjectDirectory}/reports/target/**/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
        <!--<sonar.java.checkstyle.reportPaths>target/checkstyle-result.xml</sonar.java.checkstyle.reportPaths>
        <sonar.java.pmd.reportPaths>target/pmd.xml,target/cpd.xml</sonar.java.pmd.reportPaths> -->
        <sonar.exclusions>.idea/**</sonar.exclusions>


        <surefireArgline/>
        <integrationTestCoverageAgent/>
        <argLine/>
        <skipTests>false</skipTests>
        <skip.surefire.tests>${skipTests}</skip.surefire.tests>
        <surefire.fork.count>1</surefire.fork.count>
        <immutables.version>2.9.0</immutables.version>
        <docker.platforms/>
        <docker.output.image.name>dotcms/dotcms-test</docker.output.image.name>
        <docker.version.tag>${project.version}</docker.version.tag>
        <dotcms.image.name>${docker.output.image.name}:${docker.version.tag}</dotcms.image.name>
        <!-- Flexible naming convention for docker volumes -->
        <context.parent>dotbuild</context.parent>
        <context.module>${project.artifactId}</context.module>
        <docker.run.context>${context.parent}_${context.module}_${context.name}</docker.run.context>
        <docker.data.local.volume>${docker.run.context}_data-local</docker.data.local.volume>
        <docker.data.local.volume.internal>/data/local</docker.data.local.volume.internal>
        <docker.data.shared.volume>${docker.run.context}_data-shared</docker.data.shared.volume>
        <docker.data.shared.volume.internal>/data/shared</docker.data.shared.volume.internal>
        <docker.container.name.pattern>${docker.run.context}_%a</docker.container.name.pattern>
        <license.user.path>${user.home}/.dotcms/license/license.dat</license.user.path>
        <license.use>false</license.use>
        <dotcms.startup.timeout>120000</dotcms.startup.timeout>
        <docker.license.volume.internal>/data/local/dotsecure/license/license.dat</docker.license.volume.internal>
        <docker.starter.volume.internal>/data/starter</docker.starter.volume.internal>
        <docker.db.volume>${docker.run.context}_db</docker.db.volume>
        <docker.es.volume>${docker.run.context}_es</docker.es.volume>
        <docker.skip.clean.before>false</docker.skip.clean.before>
        <docker.skip.clean.after>false</docker.skip.clean.after>
        <debug.suspend.flag>n</debug.suspend.flag>
        <debug.port>5005</debug.port>
        <!-- Default debug port -->
        <debug.args.default>-agentlib:jdwp=transport=dt_socket,server=y,suspend=${debug.suspend.flag},address=*:${debug.port}</debug.args.default>
        <debug.args/>
        <docker.debug.args/>
        <docker.debug.args.default>-agentlib:jdwp=transport=dt_socket,server=y,suspend=${debug.suspend.flag},address=*:${debug.port}</docker.debug.args.default>
        <disable.custom.properties>false</disable.custom.properties>
        <config.environment>dev</config.environment>
        <environment.properties.folder>${maven.multiModuleProjectDirectory}/environments</environment.properties.folder>
        <environment.properties.defaults>${environment.properties.folder}/environment.properties</environment.properties.defaults>
        <spotless.skip>true</spotless.skip>
    </properties>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>properties-maven-plugin</artifactId>
                    <version>${version.properties.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>com.github.eirslett</groupId>
                    <artifactId>frontend-maven-plugin</artifactId>
                    <version>${version.frontend.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>io.fabric8</groupId>
                    <artifactId>docker-maven-plugin</artifactId>
                    <version>${version.docker-maven.plugin}</version>
                    <configuration>
                        <skip>${docker.skip}</skip>
                        <containerNamePattern>${docker.container.name.pattern}</containerNamePattern>
                        <volumes>
                            <volume>
                                <name>${docker.db.volume}</name>
                                <driver>local</driver>
                            </volume>
                            <volume>
                                <name>${docker.es.volume}</name>
                                <driver>local</driver>
                            </volume>
                            <volume>
                                <name>${docker.data.local.volume}</name>
                                <driver>local</driver>
                            </volume>
                            <volume>
                                <name>${docker.data.shared.volume}</name>
                                <driver>local</driver>
                            </volume>
                        </volumes>
                        <imagesMap>
                            <database>
                                <name>${docker.image.postgres}</name>
                                <run>
                                    <cmd>postgres -c max_connections=1024 -c shared_buffers=256MB</cmd>
                                    <ports>
                                        <port>db.port:5432</port>
                                    </ports>
                                    <volumes>
                                        <bind>
                                            <volume>${docker.db.volume}:/var/lib/postgresql/data</volume>
                                        </bind>
                                    </volumes>
                                    <env>
                                        <POSTGRES_USER>postgres</POSTGRES_USER>
                                        <POSTGRES_PASSWORD>postgres</POSTGRES_PASSWORD>
                                        <POSTGRES_DB>dotcms</POSTGRES_DB>
                                    </env>
                                    <wait>
                                        <time>60000</time>
                                        <log>listening on IPv4 address "0.0.0.0", port 5432</log>
                                    </wait>
                                    <log>
                                        <prefix>DB:</prefix>
                                        <color>magenta</color>
                                    </log>
                                </run>
                            </database>
                            <opensearch>
                                <name>${docker.image.search}</name>
                                <run>
                                    <env>
                                        <cluster.name>elastic-cluster</cluster.name>
                                        <discovery.type>single-node</discovery.type>
                                        <bootstrap.system_call_filter>false</bootstrap.system_call_filter>
                                        <bootstrap.memory_lock>true</bootstrap.memory_lock>
                                        <DISABLE_SECURITY_PLUGIN>true</DISABLE_SECURITY_PLUGIN>
                                    </env>
                                    <ports>
                                        <port>es.port:9200</port>
                                    </ports>
                                    <volumes>
                                        <bind>
                                            <volume>${docker.es.volume}:/usr/share/elasticsearch/data</volume>
                                        </bind>
                                    </volumes>
                                    <ulimits>
                                        <ulimit>
                                            <name>memlock</name>
                                            <hard>-1</hard>
                                            <soft>-1</soft>
                                        </ulimit>
                                    </ulimits>
                                    <wait>
                                        <http>
                                            <!--suppress UnresolvedMavenProperty -->
                                            <url>http://${docker.host.address}:${es.port}</url>
                                        </http>
                                        <time>120000</time>
                                        <shutdown>5000</shutdown>
                                    </wait>
                                    <log>
                                        <prefix>ES:</prefix>
                                        <color>cyan</color>
                                    </log>
                                </run>
                            </opensearch>
                            <dotcms>
                                <name>${dotcms.image.name}</name>
                                <external>
                                    <type>properties</type>
                                    <prefix>${docker.properties.prefix}</prefix>
                                    <mode>override</mode>
                                </external>
                                <run>
                                    <ports combine.children="append">
                                        <port>tomcat.port:8080</port>
                                    </ports>
                                    <env>
                                        <CMS_JAVA_OPTS>${docker.debug.args}</CMS_JAVA_OPTS>
                                        <DOT_DATASOURCE_PROVIDER_STRATEGY_CLASS>com.dotmarketing.db.SystemEnvDataSourceStrategy</DOT_DATASOURCE_PROVIDER_STRATEGY_CLASS>
                                        <DOT_DB_DRIVER>org.postgresql.Driver</DOT_DB_DRIVER>
                                        <DOT_DB_BASE_URL>jdbc:postgresql://db:5432/dotcms?autosave=conservative</DOT_DB_BASE_URL>
                                        <!-- Why is this without DOT_ -->
                                        <DB_BASE_URL>jdbc:postgresql://db:5432/dotcms?autosave=conservative</DB_BASE_URL>
                                        <DB_USERNAME>postgres</DB_USERNAME>
                                        <DB_PASSWORD>postgres</DB_PASSWORD>
                                        <DOT_DOTCMS_DEV_MODE>true</DOT_DOTCMS_DEV_MODE>
                                        <DOT_STARTER_DATA_LOAD>${docker.starter.volume.internal}/starter.zip</DOT_STARTER_DATA_LOAD>
                                        <file.encoding>UTF-8</file.encoding>
                                        <DOT_ES_ENDPOINTS>http://es:9200</DOT_ES_ENDPOINTS>
                                        <DOT_DATASOURCE_PROVIDER_STRATEGY_CLASS>com.dotmarketing.db.SystemEnvDataSourceStrategy</DOT_DATASOURCE_PROVIDER_STRATEGY_CLASS>
                                    </env>
                                    <volumes>
                                        <bind combine.children="append">
                                            <volume>${docker.data.local.volume}:${docker.data.local.volume.internal}</volume>
                                            <volume>${docker.data.shared.volume}:${docker.data.shared.volume.internal}</volume>
                                            <volume>${starter.download.folder}:${docker.starter.volume.internal}</volume>
                                        </bind>
                                    </volumes>
                                    <wait>
                                        <log>Server startup in</log>
                                        <time>${dotcms.startup.timeout}</time>
                                    </wait>
                                    <links>
                                        <link>database:db</link>
                                        <link>opensearch:es</link>
                                    </links>
                                    <log>
                                        <prefix>DOTCMS:</prefix>
                                        <color>cyan</color>
                                    </log>
                                </run>
                            </dotcms>
                        </imagesMap>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.owasp</groupId>
                    <artifactId>dependency-check-maven</artifactId>
                    <version>${dependency-check-maven.version}</version>
                    <configuration>
                        <cveUrlModified>https://dotcms-cve-data.b-cdn.net/feeds/json/cve/1.1/nvdcve-1.1-modified.json.gz</cveUrlModified>
                        <cveUrlBase>https://dotcms-cve-data.b-cdn.net/feeds/json/cve/1.1/nvdcve-1.1-%d.json.gz</cveUrlBase>
                        <failOnError>false</failOnError>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>${surefire-report-maven.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${project-info-reports.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.openrewrite.maven</groupId>
                    <artifactId>rewrite-maven-plugin</artifactId>
                    <version>${version.rewrite-maven-plugin}</version>
                    <configuration>
                        <configLocation>${maven.multiModuleProjectDirectory}/rewrite.yml</configLocation>
                        <activeRecipes>
                            <recipe>dotcms.java.cleanup.Java11BaseCleanup</recipe>
                        </activeRecipes>
                        <exclusions>
                            <exclude>**/*.json</exclude>
                            <exclude>**/*.gz</exclude>
                            <exclude>**/*.pdf</exclude>
                            <exclude>**/*.mov</exclude>
                            <exclude>**/*.log</exclude>
                            <exclude>**/*.zip</exclude>
                            <exclude>**/*.mmdb</exclude>
                            <exclude>**/*.jar</exclude>
                            <exclude>**/tika-plugin/**</exclude>
                            <exclude>dist-output/**</exclude>
                            <exclude>**/.angular/**</exclude>
                            <exclude>installs/**</exclude>
                            <exclude>dist/**</exclude>
                            <exclude>.nx/**</exclude>
                            <exclude>dotcms-plugins-core/**</exclude>
                            <exclusion>docker/docker-compose-examples/**</exclusion>
                        </exclusions>
                        <failOnDryRunResults>false</failOnDryRunResults>
                        <skipMavenParsing>false</skipMavenParsing>
                        <runPerSubmodule>true</runPerSubmodule>
                        <pomCacheDirectory>${maven.multiModuleProjectDirectory}/.cache/.rewrite-cache</pomCacheDirectory>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.openrewrite.recipe</groupId>
                            <artifactId>rewrite-migrate-java</artifactId>
                            <version>2.7.1</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>com.diffplug.spotless</groupId>
                    <artifactId>spotless-maven-plugin</artifactId>
                    <version>2.37.0</version>
                    <configuration>
                        <upToDateChecking>
                            <enabled>true</enabled>
                            <indexFile>${project.basedir}/.cache/spotless.index</indexFile>
                            <!-- optional, default is ${project.build.directory}/spotless-index -->
                        </upToDateChecking>
                        <skip>${spotless.skip}</skip>
                        <!-- These are the defaults, you can override if you want -->
                        <!-- optional: limit format enforcement to just the files changed by this feature branch -->
                        <formats>
                            <!-- you can define as many formats as you want, each is independent -->
                            <format>
                                <!-- define the files to apply to -->
                                <includes>
                                    <include>.gitignore</include>
                                </includes>
                                <!-- define the steps to apply to those files -->
                                <trimTrailingWhitespace/>
                                <endWithNewline/>
                                <toggleOffOn/>
                                <indent>
                                    <tabs>true</tabs>
                                    <spacesPerTab>4</spacesPerTab>
                                </indent>
                            </format>
                        </formats>
                        <!-- define a language-specific format -->
                        <pom>
                            <!-- These are the defaults, you can override if you want -->
                            <includes>
                                <include>**/pom.xml</include>
                            </includes>
                            <sortPom>
                                <encoding>UTF-8</encoding>
                                <!-- The encoding of the pom files -->
                                <lineSeparator>${line.separator}</lineSeparator>
                                <!-- line separator to use -->
                                <expandEmptyElements>false</expandEmptyElements>
                                <!-- Should empty elements be expanded-->
                                <spaceBeforeCloseEmptyElement>false</spaceBeforeCloseEmptyElement>
                                <!-- Should a space be added inside self-closing elements-->
                                <keepBlankLines>false</keepBlankLines>
                                <!-- Keep empty lines -->
                                <nrOfIndentSpace>4</nrOfIndentSpace>
                                <!-- Indentation -->
                                <indentBlankLines>false</indentBlankLines>
                                <!-- Should empty lines be indented -->
                                <indentSchemaLocation>false</indentSchemaLocation>
                                <!-- Should schema locations be indented -->
                                <predefinedSortOrder>custom_1</predefinedSortOrder>
                                <!-- Sort order of elements: https://github.com/Ekryd/sortpom/wiki/PredefinedSortOrderProfiles-->
                                <sortOrderFile/>
                                <!-- Custom sort order of elements: https://raw.githubusercontent.com/Ekryd/sortpom/master/sorter/src/main/resources/custom_1.xml -->
                                <sortDependencies>scope,groupId,artifactId</sortDependencies>
                                <!-- Sort dependencies: https://github.com/Ekryd/sortpom/wiki/SortDependencies-->
                                <sortDependencyExclusions/>
                                <!-- Sort dependency exclusions: https://github.com/Ekryd/sortpom/wiki/SortDependencies-->
                                <sortPlugins/>
                                <!-- Sort plugins: https://github.com/Ekryd/sortpom/wiki/SortPlugins -->
                                <sortProperties>false</sortProperties>
                                <!-- Sort properties -->
                                <sortModules>false</sortModules>
                                <!-- Sort modules -->
                                <sortExecutions>false</sortExecutions>
                                <!-- Sort plugin executions -->
                            </sortPom>
                        </pom>
                        <!-- <typescript>
                            <includes>
                                <include>core-web/apps/**/*.ts</include>
                                <include>core-web/apps/**/*.tsx</include>
                                &lt;!&ndash; <include>**/*.js</include>&ndash;&gt;
                                <include>core-web/apps/**/*.jsx</include>
                                <include>core-web/libs/**/*.ts</include>
                                <include>core-web/libs/**/*.tsx</include>
                                &lt;!&ndash; <include>**/*.js</include>&ndash;&gt;
                                <include>core-web/libs/**/*.jsx</include>
                            </includes>
                            &lt;!&ndash;<tsfmt/>&ndash;&gt;
                            <prettier>
                                <prettierVersion>2.7.1</prettierVersion>
                                <configFile>${maven.multiModuleProjectDirectory}/.prettierrc</configFile>
                            </prettier>
                            &lt;!&ndash; <eslint>
                                <devDependencyProperties>
                                    <property>
                                        <name>eslint</name>
                                        <value>8.48.0</value>
                                    </property>
                                    <property>
                                        <name>eslint-plugin-storybook</name>
                                        <value>0.6.15</value>
                                    </property>
                                    <property>
                                        <name>@nx/eslint-plugin</name>
                                        <value>17.2.8</value>
                                    </property>
                                    <property>
                                        <name>@typescript-eslint/eslint-plugin</name>
                                        <value>6.9.1</value>
                                    </property>
                                    <property>
                                        <name>@typescript-eslint/parser</name>
                                        <value>6.9.1</value>
                                    </property>
                                </devDependencyProperties>

                                <configFile>${maven.multiModuleProjectDirectory}/core-web/.eslintrc.json</configFile>

                                <tsconfigFile>${maven.multiModuleProjectDirectory}/core-web/tsconfig.base.json</tsconfigFile>
                            </eslint>&ndash;&gt;
                        </typescript>-->
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${version.antrun.plugin}</version>
                    <dependencies>
                        <dependency>
                            <groupId>ant-contrib</groupId>
                            <artifactId>ant-contrib</artifactId>
                            <version>1.0b3</version>
                            <exclusions>
                                <exclusion>
                                    <groupId>ant</groupId>
                                    <artifactId>ant</artifactId>
                                </exclusion>
                            </exclusions>
                        </dependency>
                        <dependency>
                            <groupId>org.apache.ant</groupId>
                            <artifactId>ant-nodeps</artifactId>
                            <version>1.8.1</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${version.assembly.plugin}</version>
                    <configuration>
                        <archive>
                            <index>true</index>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            </manifest>
                            <manifestEntries>
                                <Implementation-URL>${project.url}</Implementation-URL>
                                <Java-Vendor>${java.vendor}</Java-Vendor>
                                <Java-Version>${java.version}</Java-Version>
                                <Os-Arch>${os.arch}</Os-Arch>
                                <Os-Name>${os.name}</Os-Name>
                                <Os-Version>${os.version}</Os-Version>
                                <Scm-Connection>${project.scm.connection}</Scm-Connection>
                                <Scm-Revision>${buildNumber}</Scm-Revision>
                                <Scm-Url>${project.scm.url}</Scm-Url>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${version.checkstyle.plugin}</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>${version.checkstyle}</version>
                            <exclusions>
                                <exclusion>
                                    <groupId>com.sun</groupId>
                                    <artifactId>tools</artifactId>
                                </exclusion>
                            </exclusions>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${version.clean.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${version.resources.plugin}</version>
                    <configuration>
                        <propertiesEncoding>UTF-8</propertiesEncoding>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${version.compiler.plugin}</version>
                    <configuration>
                        <fork>true</fork>
                        <release>${java.version}</release>
                        <compilerArgs>
                            <arg>-Xlint:unchecked</arg>
                        </compilerArgs>
                        <showDeprecation>true</showDeprecation>
                        <showWarnings>true</showWarnings>
                        <testSource>${maven.compiler.argument.testSource}</testSource>
                        <testTarget>${maven.compiler.argument.testTarget}</testTarget>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${version.dependency.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${version.deploy.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${version.enforcer.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${version.failsafe.plugin}</version>
                    <configuration>

                        <!--
                             NOTE: In case if you need to pass in special JVM argumengts for instance say, to enable Java language
                         preview features, the following is how it MUST be done. The @{argLine} goes through late evaluattion that
                         points to Jacoco agent JVM argument followed by any additional JVM arguments of your choice each separated
                         by space. The expression @{argLine} retains Jacoco JVM agent argument. Without this any additional JVM
                         arguments that you add will be taken but you lose Jacoco's argument causing to lose code coverage report
                         files and hence the coverage report.
                        -->
                        <argLine>@{argLine} -Xmx1024m
                            --add-modules java.se
                            --add-exports java.base/jdk.internal.ref=ALL-UNNAMED
                            --add-opens java.base/java.lang=ALL-UNNAMED
                            --add-opens java.base/java.nio=ALL-UNNAMED
                            --add-opens java.base/sun.nio.ch=ALL-UNNAMED
                            --add-opens java.management/sun.management=ALL-UNNAMED
                            --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED</argLine>
                        <trimStackTrace>false</trimStackTrace>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${version.gpg.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-help-plugin</artifactId>
                    <version>${version.help.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${version.install.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${version.jar.plugin}</version>
                    <configuration>
                        <archive>
                            <index>true</index>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                                <addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
                            </manifest>
                            <manifestEntries>
                                <Implementation-URL>${project.url}</Implementation-URL>
                                <Java-Vendor>${java.vendor}</Java-Vendor>
                                <Java-Version>${java.version}</Java-Version>
                                <Os-Arch>${os.arch}</Os-Arch>
                                <Os-Name>${os.name}</Os-Name>
                                <Os-Version>${os.version}</Os-Version>
                                <Scm-Connection>${project.scm.connection}</Scm-Connection>
                                <Scm-Url>${project.scm.url}</Scm-Url>
                                <Scm-Revision>${buildNumber}</Scm-Revision>
                                <!--suppress UnresolvedMavenProperty -->
                                <SCM-Build>${scmBranch}</SCM-Build>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${version.javadoc.plugin}</version>
                    <configuration>
                        <quiet>true</quiet>
                        <doclint>none</doclint>
                        <show>package</show>
                        <additionalOptions>${javadoc.additional.params}</additionalOptions>
                        <sourcepath>src/main/java:src/enterprise/java:${project.basedir}/target/generated-sources/annotations</sourcepath>
                        <archive>
                            <index>true</index>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            </manifest>
                            <manifestEntries>
                                <Implementation-URL>${project.url}</Implementation-URL>
                                <Java-Vendor>${java.vendor}</Java-Vendor>
                                <Java-Version>${java.version}</Java-Version>
                                <Os-Arch>${os.arch}</Os-Arch>
                                <Os-Name>${os.name}</Os-Name>
                                <Os-Version>${os.version}</Os-Version>
                                <Scm-Connection>${project.scm.connection}</Scm-Connection>
                                <Scm-Revision>${buildNumber}</Scm-Revision>
                                <Scm-Url>${project.scm.url}</Scm-Url>
                            </manifestEntries>
                        </archive>
                        <footer><![CDATA[<b>${project.name} ${project.version}</b>]]></footer>
                        <header><![CDATA[<b>${project.name} ${project.version}</b>]]></header>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>${version.jxr.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${version.jococo.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-rar-plugin</artifactId>
                    <version>${version.rar.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>${version.release.plugin}</version>
                    <configuration>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <useReleaseProfile>true</useReleaseProfile>
                        <goals>deploy</goals>
                        <preparationGoals>clean install</preparationGoals>
                        <mavenExecutorId>forked-path</mavenExecutorId>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${version.shade.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${version.site.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${version.source.plugin}</version>
                    <configuration>
                        <archive>
                            <index>true</index>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            </manifest>
                            <manifestEntries>
                                <Implementation-URL>${project.url}</Implementation-URL>
                                <Java-Vendor>${java.vendor}</Java-Vendor>
                                <Java-Version>${java.version}</Java-Version>
                                <Os-Arch>${os.arch}</Os-Arch>
                                <Os-Name>${os.name}</Os-Name>
                                <Os-Version>${os.version}</Os-Version>
                                <Scm-Connection>${project.scm.connection}</Scm-Connection>
                                <Scm-Revision>${buildNumber}</Scm-Revision>
                                <Scm-Url>${project.scm.url}</Scm-Url>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${version.surefire.plugin}</version>
                    <configuration>
                        <forkCount>${surefire.fork.count}</forkCount>
                        <reuseForks>true</reuseForks>
                        <argLine>@{argLine} -Xmx1024m
                            --add-modules java.se
                            --add-exports java.base/jdk.internal.ref=ALL-UNNAMED
                            --add-opens java.base/java.lang=ALL-UNNAMED
                            --add-opens java.base/java.nio=ALL-UNNAMED
                            --add-opens java.base/sun.nio.ch=ALL-UNNAMED
                            --add-opens java.management/sun.management=ALL-UNNAMED
                            --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED</argLine>
                        <systemPropertyVariables/>
                        <trimStackTrace>true</trimStackTrace>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${version.war.plugin}</version>
                    <configuration>
                        <archive>
                            <index>true</index>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            </manifest>
                            <manifestEntries>
                                <Implementation-URL>${project.url}</Implementation-URL>
                                <Java-Vendor>${java.vendor}</Java-Vendor>
                                <Java-Version>${java.version}</Java-Version>
                                <Os-Arch>${os.arch}</Os-Arch>
                                <Os-Name>${os.name}</Os-Name>
                                <Os-Version>${os.version}</Os-Version>
                                <Scm-Connection>${project.scm.connection}</Scm-Connection>
                                <Scm-Revision>${buildNumber}</Scm-Revision>
                                <Scm-Url>${project.scm.url}</Scm-Url>
                            </manifestEntries>
                        </archive>
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${version.buildhelper.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>${version.buildnumber.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${version.exec.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>${version.findbugs.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>javancss-maven-plugin</artifactId>
                    <version>${version.javancss.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${version.license.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${version.sonar.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${version.versions.plugin}</version>
                    <configuration>
                        <generateBackupPoms>false</generateBackupPoms>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-plugin-plugin</artifactId>
                    <version>${version.maven.plugin.plugin}</version>
                    <executions>
                        <execution>
                            <id>default-descriptor</id>
                            <phase>process-classes</phase>
                        </execution>
                        <!-- if you want to generate help goal -->
                        <execution>
                            <id>help-goal</id>
                            <goals>
                                <goal>helpmojo</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.jboss.jandex</groupId>
                    <artifactId>jandex-maven-plugin</artifactId>
                    <version>1.2.3</version>
                </plugin>
                <plugin>
                    <groupId>${quarkus.platform.group-id}</groupId>
                    <artifactId>quarkus-maven-plugin</artifactId>
                    <version>${quarkus.platform.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>load-properties-defaults</id>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <override>true</override>
                            <useDefaultValues>true</useDefaultValues>
                            <files>
                                <file>${environment.properties.defaults}</file>
                            </files>
                            <keyPrefix>ext.</keyPrefix>
                        </configuration>
                    </execution>
                    <execution>
                        <id>load-environment-properties</id>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <override>true</override>
                            <useDefaultValues>true</useDefaultValues>
                            <keyPrefix>ext.</keyPrefix>
                            <files>
                                <file>${environment.properties.folder}/${mvn.environment.name}/${mvn.environment.name}.properties</file>
                            </files>
                        </configuration>
                    </execution>
                    <execution>
                        <id>load-user-properties</id>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <phase>validate</phase>
                        <configuration>
                            <override>true</override>
                            <useDefaultValues>true</useDefaultValues>
                            <keyPrefix>ext.</keyPrefix>
                            <files>
                                <file>${environment.properties.folder}/${mvn.environment.name}/user-${mvn.environment.name}.properties</file>
                            </files>
                            <!-- user properties is optional -->
                            <quiet>true</quiet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-java-version</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <bannedRepositories>
                                    <bannedPluginRepositories>
                                        <bannedPluginRepository>http://*</bannedPluginRepository>
                                    </bannedPluginRepositories>
                                    <bannedRepositories>
                                        <bannedRepository>http://*</bannedRepository>
                                    </bannedRepositories>
                                    <level>${insecure.repositories}</level>
                                    <message>To build this project, don't use maven repositories over HTTP. Please use
                                        HTTPS in your settings.xml or run the build with property
                                        insecure.repositories=WARN</message>
                                </bannedRepositories>
                                <requireJavaVersion>
                                    <version>${jdk.min.version}</version>
                                    <message>To build this project JDK ${jdk.min.version} (or greater) is required.
                                        Please install it.</message>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-maven-version</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>${maven.min.version}</version>
                                    <message>To build this project Maven ${maven.min.version} (or greater) is required.
                                        Please install it.</message>
                                </requireMavenVersion>
                            </rules>
                        </configuration>
                    </execution>
                    <execution>
                        <id>enforce-dependencies</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <bannedDependencies>
                                    <excludes>
                                        <exclude>javax:javaee-api</exclude>

                                        <exclude>io.netty:netty-all</exclude>

                                        <exclude>org.slf4j:jcl-over-slf4j</exclude>

                                        <exclude>org.jboss.slf4j:slf4j-jboss-logging</exclude>
                                        <exclude>org.slf4j:slf4j-simple</exclude>
                                        <exclude>org.slf4j:slf4j-nop</exclude>
                                        <exclude>org.slf4j:slf4j-jdk14</exclude>
                                        <exclude>org.slf4j:slf4j-log4j12</exclude>
                                        <exclude>org.slf4j:slf4j-log4j13</exclude>

                                        <!-- Ban Logback implementations -->
                                        <exclude>ch.qos.logback:logback-classic</exclude>
                                        <exclude>ch.qos.logback:logback-core</exclude>
                                        <exclude>ch.qos.logback:logback-access</exclude>
                                        <exclude>ch.qos.logback:logback</exclude>
                                        <exclude>org.osgi:org.osgi.annotation.versioning</exclude>

                                        <!-- Ban checker-qual, we don't use Checker Framework -->
                                        <exclude>org.checkerframework:checker-qual</exclude>

                                        <exclude>com.google.android:annotations</exclude>

                                    </excludes>
                                </bannedDependencies>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--  Set properties containing the scm revision  -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <configuration>
                    <attach>true</attach>
                    <!--make it available for jar/war classpath resource -->
                    <addOutputDirectoryToResources>true</addOutputDirectoryToResources>
                    <scmBranchPropertyName>scmBranch</scmBranchPropertyName>
                    <shortRevisionLength>7</shortRevisionLength>
                </configuration>
                <executions>
                    <execution>
                        <id>get-scm-revision</id>
                        <goals>
                            <goal>create</goal>
                        </goals>
                        <phase>initialize</phase>
                        <configuration>
                            <doCheck>false</doCheck>
                            <doUpdate>false</doUpdate>
                            <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                            <revisionOnScmFailure>UNKNOWN</revisionOnScmFailure>
                            <shortRevisionLength>7</shortRevisionLength>
                        </configuration>
                    </execution>
                    <execution>
                        <goals>
                            <goal>create-metadata</goal>
                        </goals>
                        <phase>generate-resources</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <url>https://github.com/dotCMS</url>
    <licenses>
        <license>
            <name>GNU GENERAL PUBLIC LICENSE Version 3</name>
            <url>https://www.gnu.org/licenses/gpl-3.0.en.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <developers>
        <developer>
            <id>dotcms</id>
            <name>DotCMS Community</name>
            <organization>dotCMS</organization>
            <organizationUrl>https://dotcms.com</organizationUrl>
        </developer>
    </developers>
    <!-- https://youtrack.jetbrains.com/issue/IDEA-227135/Bundled-maven-400xsd-is-not-the-same-as-the-official-maven-file -->
    <scm child.scm.connection.inherit.append.path="false" child.scm.developerConnection.inherit.append.path="false" child.scm.url.inherit.append.path="false">
        <connection>scm:git:git@github.com:dotCMS/core.git</connection>
        <developerConnection>scm:git:git@github.com:dotCMS/core.git</developerConnection>
        <url>https://github.com/dotCMS/core</url>
        <tag>HEAD</tag>
    </scm>
    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/dotCMS/core/issues/</url>
    </issueManagement>
    <repositories>
        <repository>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>dotcms-libs</id>
            <url>https://repo.dotcms.com/artifactory/libs-release/</url>
        </repository>
        <repository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>jitpack</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>dotcms-libs</id>
            <url>https://repo.dotcms.com/artifactory/libs-release</url>
        </pluginRepository>
        <pluginRepository>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <id>dotcms-libs-snapshot</id>
            <url>https://repo.dotcms.com/artifactory/libs-snapshot-local</url>
        </pluginRepository>
        <pluginRepository>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
            <id>jitpack</id>
            <url>https://jitpack.io</url>
        </pluginRepository>
    </pluginRepositories>

    <profiles>
        <profile>
            <id>jprofiler</id>
            <properties>
                <docker.debug.args>-agentpath:/jprofiler/bin/linux-aarch64/libjprofilerti.so=port=8849,nowait</docker.debug.args>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${version.docker-maven.plugin}</version>
                        <configuration>
                            <skip>${docker.jacoco.skip}</skip>
                            <imagesMap>
                                <dotcms>
                                    <run>
                                        <ports combine.children="append">
                                            <port>8849:8849</port>
                                        </ports>
                                        <volumes>
                                            <bind combine.children="append">
                                                <volume>/Users/stevebolton/Downloads/jprofiler14:/jprofiler</volume>
                                            </bind>
                                        </volumes>
                                    </run>
                                </dotcms>
                            </imagesMap>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>use-license</id>
            <activation>
                <file>
                    <exists>${license.user.path}</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${version.docker-maven.plugin}</version>
                        <configuration>
                            <imagesMap>
                                <dotcms>
                                    <run>
                                        <volumes>
                                            <bind combine.children="append">
                                                <volume>${license.user.path}:${docker.license.volume.internal}</volume>
                                            </bind>
                                        </volumes>
                                    </run>
                                </dotcms>
                            </imagesMap>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>rewrite</id>
            <activation>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.openrewrite.maven</groupId>
                        <artifactId>rewrite-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>rewrite</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>process-sources</phase>
                                <configuration/>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>format</id>
            <activation>
            </activation>
            <build>
                <defaultGoal>generate-resources</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>com.diffplug.spotless</groupId>
                        <artifactId>spotless-maven-plugin</artifactId>
                        <version>2.37.0</version>
                        <executions>
                            <execution>
                                <id>apply-format</id>
                                <goals>
                                    <goal>apply</goal>
                                </goals>
                                <phase>process-sources</phase>
                                <configuration/>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>validate</id>
            <build>
                <defaultGoal>generate-resources</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>com.diffplug.spotless</groupId>
                        <artifactId>spotless-maven-plugin</artifactId>
                        <version>2.37.0</version>
                        <executions>
                            <execution>
                                <id>check-format</id>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                                <phase>validate</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>debug-suspend</id>
            <!-- Adjust the debug.suspend.flag if debug.suspend is specifically set to true -->
            <activation>
                <property>
                    <name>debug.suspend</name>
                </property>
            </activation>
            <properties>
                <debug.suspend.flag>y</debug.suspend.flag>
                <debug.args>${debug.args.default}</debug.args>
                <docker.debug.args>${docker.debug.args.default}</docker.debug.args>
                <dotcms.startup.timeout>7200000</dotcms.startup.timeout>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <imagesMap>
                                <dotcms>
                                    <run>
                                        <ports combine.children="append">
                                            <port>debug.port:${debug.port}</port>
                                        </ports>
                                    </run>
                                </dotcms>
                            </imagesMap>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>debug</id>
            <activation>
                <property>
                    <name>debug.enable</name>
                </property>
            </activation>
            <properties>
                <debug.args>${debug.args.default}</debug.args>
                <docker.debug.args>${docker.debug.args.default}</docker.debug.args>
                <dotcms.startup.timeout>7200000</dotcms.startup.timeout>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <imagesMap>
                                <dotcms>
                                    <run>
                                        <ports combine.children="append">
                                            <port>debug.port:${debug.port}</port>
                                        </ports>
                                    </run>
                                </dotcms>
                            </imagesMap>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-start</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <docker.follow>true</docker.follow>
            </properties>
            <build>
                <defaultGoal>validate</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration/>
                        <executions>
                            <execution>
                                <id>docker-pre-stop</id>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration>
                                    <allContainers>true</allContainers>
                                </configuration>
                            </execution>
                            <execution>
                                <id>docker-start</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration/>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration>
                                    <target>
                                        <!-- Here is where you define your Ant tasks -->
                                        <!--suppress UnresolvedMavenProperty -->
                                        <echo message="DotCMS starteed on    : http://localhost:${tomcat.port}/dotAdmin"/>
                                        <!--suppress UnresolvedMavenProperty -->
                                        <echo message="Postgres started on   : jdbc:postgresql://localhost:${db.port}/dotcms user = postgres pass = postgres"/>
                                        <!--suppress UnresolvedMavenProperty -->
                                        <echo message="Opensearch started on : http://localhost:${es.port}"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-run</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <docker.follow>true</docker.follow>
            </properties>
            <build>
                <defaultGoal>validate</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration/>
                        <executions>
                            <execution>
                                <id>docker-pre-stop</id>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration/>
                            </execution>
                            <execution>
                                <id>docker-start</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration/>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration>
                                    <target>
                                        <!-- Here is where you define your Ant tasks -->
                                        <!--suppress UnresolvedMavenProperty -->
                                        <echo message="DotCMS starting on    : http://localhost:${tomcat.port}/dotAdmin"/>
                                        <!--suppress UnresolvedMavenProperty -->
                                        <echo message="Postgres starting on   : jdbc:postgresql://localhost:${db.port}/dotcms user = postgres pass = postgres"/>
                                        <!--suppress UnresolvedMavenProperty -->
                                        <echo message="Opensearch starting on : http://localhost:${es.port}"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-stop</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties/>
            <build>
                <defaultGoal>validate</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration>
                                    <target>
                                        <!--suppress UnresolvedMavenProperty -->
                                        <echo message="container name pattern = ${docker.container.name.pattern}"/>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration/>
                        <executions>
                            <execution>
                                <id>docker-stop</id>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration/>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>docker-clean-volumes</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties/>
            <build>
                <defaultGoal>validate</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration/>
                        <executions>
                            <execution>
                                <id>docker-stop</id>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration/>
                            </execution>
                            <execution>
                                <id>docker-remove-volumes</id>
                                <goals>
                                    <goal>volume-remove</goal>
                                </goals>
                                <phase>process-resources</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>coverage</id>
            <properties>
                <docker.debug.args>-javaagent:/jacoco-agent/org.jacoco.agent-runtime.jar=append=true,output=tcpserver,address=*,excludes=jdk/internal/**,inclnolocationclasses=true</docker.debug.args>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.jacoco</groupId>
                    <artifactId>org.jacoco.agent</artifactId>
                    <version>${version.jococo.plugin}</version>
                    <scope>test</scope>
                    <classifier>runtime</classifier>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <configuration>
                            <inclNoLocationClasses>true</inclNoLocationClasses>
                            <excludes>
                                <exclude>jdk/internal/**</exclude>
                            </excludes>
                        </configuration>
                        <executions>

                            <execution>
                                <id>prepare-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <configuration>
                                    <skip>${skip.surefire.tests}</skip>
                                    <append>true</append>
                                    <destFile>${project.build.directory}/jacoco-report/jacoco.exec</destFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-prepare-agent-integration</id>
                                <goals>
                                    <goal>prepare-agent-integration</goal>
                                </goals>
                                <configuration>
                                    <inclNoLocationClasses>true</inclNoLocationClasses>
                                    <append>true</append>
                                    <destFile>${project.build.directory}/jacoco-report/jacoco-it.exec</destFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>post-integration-test-dump</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>dump</goal>
                                </goals>
                                <configuration>
                                    <skip>${docker.jacoco.skip}</skip>
                                    <destFile>${project.build.directory}/jacoco-report/jacoco-it.exec</destFile>
                                    <!--suppress UnresolvedMavenProperty -->
                                    <port>6300</port>
                                    <dump>true</dump>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>copy-jacoco</id>
                                <goals>
                                    <goal>copy-dependencies</goal>
                                </goals>
                                <phase>compile</phase>
                                <configuration>
                                    <skip>${docker.jacoco.skip}</skip>
                                    <includeArtifactIds>org.jacoco.agent</includeArtifactIds>
                                    <includeClassifiers>runtime</includeClassifiers>
                                    <outputDirectory>${project.build.directory}/jacoco-agent</outputDirectory>
                                    <stripVersion>true</stripVersion>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${version.docker-maven.plugin}</version>
                        <configuration>
                            <skip>${docker.jacoco.skip}</skip>
                            <imagesMap>
                                <dotcms>
                                    <run>
                                        <ports combine.children="append">
                                            <port>6300:6300</port>
                                        </ports>
                                        <volumes>
                                            <bind combine.children="append">
                                                <volume>${project.build.directory}/jacoco-agent:/jacoco-agent</volume>
                                            </bind>
                                        </volumes>
                                    </run>
                                </dotcms>
                            </imagesMap>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>security-check</id>
            <build>
                <defaultGoal>dependency-check:check</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.owasp</groupId>
                        <artifactId>dependency-check-maven</artifactId>
                        <configuration>
                            <!-- fail on every finding -->
                            <failBuildOnCVSS>0</failBuildOnCVSS>

                            <suppressionFile>dependency-check-suppressions.xml</suppressionFile>

                            <!-- limit to maven project running without prev. install -->
                            <centralAnalyzerEnabled>true</centralAnalyzerEnabled>

                            <archiveAnalyzerEnabled>false</archiveAnalyzerEnabled>
                            <jarAnalyzerEnabled>false</jarAnalyzerEnabled>
                            <nexusAnalyzerEnabled>false</nexusAnalyzerEnabled>
                            <opensslAnalyzerEnabled>false</opensslAnalyzerEnabled>
                            <nodeAnalyzerEnabled>false</nodeAnalyzerEnabled>
                            <nodeAuditAnalyzerEnabled>false</nodeAuditAnalyzerEnabled>
                            <enableRetired>false</enableRetired>
                            <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>
                            <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>
                            <nuspecAnalyzerEnabled>false</nuspecAnalyzerEnabled>
                            <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
                            <enableExperimental>false</enableExperimental>

                            <!-- plugins will be checked by dependabot -->
                            <versionCheckEnabled>false</versionCheckEnabled>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <distributionManagement>
        <repository>
            <id>dotcms-libs</id>
            <name>DotCMS libs Release</name>
            <url>https://repo.dotcms.com/artifactory/libs-release-local</url>
        </repository>
        <snapshotRepository>
            <id>dotcms-libs-snapshot</id>
            <name>IDotCMS libs Snapshots</name>
            <url>https://repo.dotcms.com/artifactory/libs-snapshot-local</url>
        </snapshotRepository>
    </distributionManagement>

</project>
