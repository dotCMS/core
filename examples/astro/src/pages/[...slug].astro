---
import { client } from '../utils/client';
import Layout from '../layouts/Layout.astro';
import { getPageRequestParams } from '@dotcms/client';
import { MyPage } from '../react/myPage';

const params = Astro.params;

// We can move this logic to the helper function
const searchParams: Record<string, string> = {};

Astro.url.searchParams.forEach((value, key) => {
    searchParams[key] = value;
});

const getPageData = async (): Promise<{ pageAsset: any; nav: any; error?: any }> => {
    // WE NEED TYPES
    try {
        const path = params?.slug || '/';
        const pageRequestParams = getPageRequestParams({
            path,
            params: searchParams
        });
        const pageAsset = await client.page.get(pageRequestParams as any); // WE NEED TO FIX THIS
        const nav = await client.nav.get({
            path: '/',
            depth: 2,
            languageId: Number(searchParams.language_id)
        });

        return { pageAsset, nav };
    } catch (error) {
        return { pageAsset: null, nav: null, error };
    }
};

const { pageAsset, nav, error } = await getPageData();

if (error) {
    return Astro.redirect('/error');
}

const { vanityUrl } = pageAsset as {
    vanityUrl?: { forwardTo: string; temporaryRedirect: boolean; permanentRedirect: boolean };
}; // WE NEED TYPES

if (vanityUrl) {
    if (vanityUrl.temporaryRedirect) {
        Astro.redirect(vanityUrl.forwardTo, 302);
    } else if (vanityUrl.permanentRedirect) {
        Astro.redirect(vanityUrl.forwardTo, 301);
    }
}
---

<Layout title={pageAsset.title}>
    <MyPage client:load pageAsset={pageAsset} nav={nav} />
</Layout>
