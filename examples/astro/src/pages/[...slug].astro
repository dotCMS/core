---
import { getPageData } from '../utils/client';
import Layout from '../layouts/Layout.astro';
import Error from '../components/Error.astro';

import { MyPage } from '../react/myPage';
import type { DotCMSPageAsset } from '../types';

const params = Astro.params;

// We can move this logic to the helper function
const searchParams: Record<string, string> = {};

Astro.url.searchParams.forEach((value, key) => {
    searchParams[key] = value;
});

const { pageAsset, nav, error } = await getPageData(params?.slug, params);

if (!error) {
    const { vanityUrl } = pageAsset as DotCMSPageAsset; // WE NEED TYPES

    if (vanityUrl && (vanityUrl.temporaryRedirect || vanityUrl.permanentRedirect)) {
        return Astro.redirect(vanityUrl.forwardTo, vanityUrl.response);
    }
}
---

{
    error ? (
        <Layout title="Error">
            <Error error={error} />
        </Layout>
    ) : (
        <Layout title={pageAsset!.page.title}>
            <MyPage client:load pageAsset={pageAsset} nav={nav?.children} />
        </Layout>
    )
}
