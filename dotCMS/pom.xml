<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.dotcms</groupId>
        <artifactId>dotcms-build-parent</artifactId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../build-parent/pom.xml</relativePath>
    </parent>
    <artifactId>dotcms-core</artifactId>
    <packaging>jar</packaging>
    <properties>
        <servlet.port>8080</servlet.port>
        <palantirJavaFormat.version>2.29.0</palantirJavaFormat.version>
        <src.dir>${project.basedir}/src/main/java</src.dir>
        <test.src.dir>${project.basedir}/src/test/java</test.src.dir>
        <version.spotless.plugin>2.36.0</version.spotless.plugin>
        <jackson.version>2.13.4</jackson.version>
        <batik.version>1.16</batik.version>
        <glowroot.version>0.13.1</glowroot.version>
        <version.cargo.plugin>1.10.6</version.cargo.plugin>
        <assembly-directory>${basedir}/target/dist</assembly-directory>
        <docker.skip.build>${docker.skip}</docker.skip.build>
        <!-- Tomcat -->
        <debug.host>*</debug.host>
        <!-- debug.args is set when remote-debug profile is activated with debug.enable flag-->
        <buildDocker>true</buildDocker>
        <tomcat-dist-folder>dotserver/tomcat-${tomcat.version}</tomcat-dist-folder>
        <tomcat-lib-folder>${assembly-directory}/${tomcat-dist-folder}/lib</tomcat-lib-folder>
        <tomcat9-overrides>${project.basedir}/src/main/resources/container/tomcat9</tomcat9-overrides>
        <exploded-webapp-dir>${project.build.directory}/${project.build.finalName}</exploded-webapp-dir>
        <war.output.file>${project.build.directory}/${project.build.finalName}-war.war</war.output.file>
        <docker.base.image>tomcat:${tomcat.version}-jdk11</docker.base.image>
        <docker.skip.push>true</docker.skip.push>
        <!-- By default the dev instance started here we want to persist the data -->
        <docker.skip.clean.before>true</docker.skip.clean.before>
        <docker.skip.clean.after>true</docker.skip.clean.after>
        <core.unit.test.fork.count>1C</core.unit.test.fork.count>
        <legacy.webapp.dir>${project.basedir}/src/main/webapp</legacy.webapp.dir>
        <fabric8.dynamic-port>true</fabric8.dynamic-port>
        <!--<db.port></db.port>
        <es.port></es.port>
        -->
        <test.webapp.root>${project.build.directory}/${project.build.finalName}</test.webapp.root>

        <felix.base.dir>${project.build.directory}/core-war/WEB-INF/felix</felix.base.dir>
        <felix.system.base.dir>${project.build.directory}/core-war/WEB-INF/felix-system</felix.system.base.dir>

        <testdata.dir>${project.build.directory}/testdata</testdata.dir>

        <it.test.fork-folder.prefix>${project.build.directory}/testdata/fork-</it.test.fork-folder.prefix>
        <it.test.fork-folder>${it.test.fork-folder.prefix}</it.test.fork-folder>

        <test.logs.folder>logs</test.logs.folder>
        <test.assets.folder>assets</test.assets.folder>
        <test.temp.folder>temp</test.temp.folder>
        <test.working.folder>working</test.working.folder>
        <test.dynamic.folder>secure</test.dynamic.folder>
        <test.felix.cache.folder>felix/core/felix-cache</test.felix.cache.folder>
        <test.felix.system.cache.folder>felix/system/felix-cache</test.felix.system.cache.folder>
        <test.felix.load.folder>felix/core/load</test.felix.load.folder>
        <test.felix.system.load.folder>felix/system/load</test.felix.system.load.folder>
        <test.felix.undeployed.folder>felix/core/undeployed</test.felix.undeployed.folder>
        <test.felix.system.undeployed.folder>felix/system/undeployed</test.felix.system.undeployed.folder>
        <!-- <docker.platforms>linux/arm64,linux/amd64</docker.platforms>-->
        <tomcat.redis-session-manager.version>1.1</tomcat.redis-session-manager.version>
        <commons-pool2.version>2.11.1</commons-pool2.version>
        <org.slfj4.version>1.7.36</org.slfj4.version>
        <jedis.version>4.4.6</jedis.version>
        <tomcat.run.data.folder>${project.build.directory}/tomcat-run-data/${context.name}</tomcat.run.data.folder>
        <cleanup.data.folder>false</cleanup.data.folder>
        <!-- Add enterprise to sonar sources -->
        <sonar.sources>src/main/java,src/enterprise/java</sonar.sources>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.dotcms</groupId>
            <artifactId>dotcms-core-web</artifactId>
            <version>${project.version}</version>
            <type>war</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.dotcms.core.plugins</groupId>
            <artifactId>com.dotcms.tika-api</artifactId>
        </dependency>
        <!--
          *****************************
             dotcms repackaged dependencies
          *****************************
        -->

        <dependency>
            <groupId>com.dotcms</groupId>
            <artifactId>ant-tooling</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.aopalliance-repackaged</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.asm</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.axiom-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.axiom-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.bsf</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.bsh</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.cactus.integration.ant</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.cargo-ant</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.cargo-core-uberjar</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.com.dotmarketing.jhlabs.images.filters</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.commons-dbcp</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.commons-fileupload</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.commons-httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.commons-jci-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.commons-jci-eclipse</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.commons-net</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.commons-pool</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.compression-filter</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.concurrent</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.core-renderer-modified</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.cos</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.counter-ejb</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.dwr</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.fileupload-ext</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.gif89</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.google</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.guava</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.hibernate</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.hibernate-validator</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.httpbridge</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.httpclient</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.iText</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.jamm</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.javacsv</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.javax.annotation-api</artifactId>
        </dependency>


        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.jazzy-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.jboss-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.jempbox</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.jep</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.jsoup</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.jstl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.jta</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.jxl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.ldap</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.lesscss</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.mail-ejb</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.maxmind-db</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.msnm</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.myspell</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.odmg</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.org.eclipse.mylyn.wikitext.confluence.core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.org.eclipse.mylyn.wikitext.core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.org.eclipse.mylyn.wikitext.mediawiki.core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.org.eclipse.mylyn.wikitext.textile.core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.org.eclipse.mylyn.wikitext.tracwiki.core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.org.eclipse.mylyn.wikitext.twiki.core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.persistence-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.platform</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.portlet</artifactId>
        </dependency>

        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.rhino</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.secure-filter</artifactId>
        </dependency>


        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.snappy-java</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.sslext</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.stax2-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.struts</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.Tidy</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.trove</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.twitter4j-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.txtmark</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.util-taglib</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.validation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.wbmp</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.webp-imageio-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.woodstox-core-lgpl</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.xpp3-min</artifactId>
        </dependency>

        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.quartz-all</artifactId>
            <scope>compile</scope>
        </dependency>


        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.slf4j-api</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.slf4j-jcl</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.jaxb-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.jaxb-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.jaxb-impl</artifactId>
        </dependency>

        <dependency>
            <!-- possible remove ? -->
            <groupId>com.dotcms.lib</groupId>
            <artifactId>dot.commons-cli</artifactId>
            <scope>compile</scope>
        </dependency>

        <!--
           *****************************
              WebDav Support
           *****************************
        -->
        <dependency>
            <groupId>com.ettrema</groupId>
            <artifactId>milton-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ettrema</groupId>
            <artifactId>milton-servlet</artifactId>
        </dependency>



        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker-qual</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--
         *****************************
            Coding Utilities
         *****************************
       -->
        <dependency>
            <!-- Google Guava: Google Core Libraries -->
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
        </dependency>

        <dependency>
            <!-- SneakyThrow: A Java library that allows to throw checked exceptions without declaration -->
            <groupId>com.rainerhahnekamp</groupId>
            <artifactId>sneakythrow</artifactId>
        </dependency>

        <dependency>
            <!-- Functional programming utilities including Try, Tuple, Option, Either, Collections, etc. -->
            <groupId>io.vavr</groupId>
            <artifactId>vavr</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.inject</groupId>
            <artifactId>jakarta.inject-api</artifactId>
        </dependency>

        <dependency>
            <!-- Text processing utilities and regex-->
            <groupId>oro</groupId>
            <artifactId>oro</artifactId>
        </dependency>

        <!--
         *****************************
            Apache Commons Utilities
         *****************************
       -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-configuration</groupId>
            <artifactId>commons-configuration</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-digester</groupId>
            <artifactId>commons-digester</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-numbers-gamma</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-pool2</artifactId>
        </dependency>


        <!--
         *****************************
            File and HTTP Processing
         *****************************
       -->
        <dependency>
            <!-- mozilla encoding detector -->
            <groupId>com.googlecode.juniversalchardet</groupId>
            <artifactId>juniversalchardet</artifactId>
        </dependency>

        <dependency>
            <!-- UserAgentUtils: Utility for parsing a user agent string -->
            <groupId>eu.bitwalker</groupId>
            <artifactId>UserAgentUtils</artifactId>
        </dependency>
        <dependency>
            <groupId>eu.medsea.mimeutil</groupId>
            <artifactId>mime-util</artifactId>
        </dependency>

        <dependency>
            <!-- Geo Location -->
            <groupId>com.maxmind.geoip2</groupId>
            <artifactId>geoip2</artifactId>
        </dependency>

        <!--
         *****************************
            GraphQL Support
         *****************************
       -->

        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-java</artifactId>
        </dependency>
        <dependency>
            <groupId>com.graphql-java</groupId>
            <artifactId>graphql-java-extended-scalars</artifactId>
        </dependency>
        <dependency>
            <groupId>com.graphql-java-kickstart</groupId>
            <artifactId>graphql-java-servlet</artifactId>
        </dependency>

        <!--
         *****************************
            Database Support
         *****************************
       -->
        <dependency>
            <!-- Connection Pool -->
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker-qual</artifactId>
                </exclusion>
            </exclusions>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>

        <dependency>
            <!-- MSSQL Driver, MSSQL support is deprecated -->
            <groupId>com.microsoft.sqlserver</groupId>
            <artifactId>mssql-jdbc</artifactId>
            <scope>provided</scope>
        </dependency>


        <dependency>
            <groupId>com.impossibl.pgjdbc-ng</groupId>
            <artifactId>pgjdbc-ng</artifactId>
        </dependency>

        <!--
         *****************************
           Cluster Support
         *****************************
       -->
        <dependency>
            <groupId>dnsjava</groupId>
            <artifactId>dnsjava</artifactId>
        </dependency>

        <dependency>
            <!-- Shedlock Distributed Locking -->
            <groupId>net.javacrumbs.shedlock</groupId>
            <artifactId>shedlock-core</artifactId>
        </dependency>

        <dependency>
            <groupId>net.javacrumbs.shedlock</groupId>
            <artifactId>shedlock-provider-jdbc</artifactId>
        </dependency>

        <!--
         *****************************
            API Client Support
         *****************************
       -->


        <dependency>
            <!-- general HTTP Client -->
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>


        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-kms</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-rekognition</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-s3</artifactId>
        </dependency>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>jmespath-java</artifactId>
        </dependency>

        <dependency>
            <!-- Redis Client -->
            <groupId>io.lettuce</groupId>
            <artifactId>lettuce-core</artifactId>
        </dependency>

        <dependency>
            <groupId>redis.clients</groupId>
            <artifactId>jedis</artifactId>
        </dependency>

        <dependency>
            <groupId>org.elasticsearch.client</groupId>
            <artifactId>elasticsearch-rest-high-level-client</artifactId>
        </dependency>


        <!--
         *****************************
            JavaX/Jakarta/J2EE Support
         *****************************
       -->
        <dependency>
            <groupId>com.sun.activation</groupId>
            <artifactId>javax.activation</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>jakarta.mail</artifactId>
        </dependency>
        <dependency>
            <groupId>jakarta.xml.bind</groupId>
            <artifactId>jakarta.xml.bind-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>javax.servlet.jsp-api</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.websocket</groupId>
            <artifactId>javax.websocket-api</artifactId>
        </dependency>

        <!--
         *****************************
            XML Support
         *****************************
       -->
        <dependency>
            <groupId>com.thoughtworks.xstream</groupId>
            <artifactId>xstream</artifactId>
        </dependency>

        <!-- JaxB -->

        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
        </dependency>



        <!--
         *****************************
            XPath Support
         *****************************
       -->
        <dependency>
            <groupId>jaxen</groupId>
            <artifactId>jaxen</artifactId>
        </dependency>

        <dependency>
            <groupId>werken-xpath</groupId>
            <artifactId>werken-xpath</artifactId>
        </dependency>

        <!--
          *****************************
             JSON
          *****************************
        -->

       <!-- <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        -->
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-guava</artifactId>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-base</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-parameter-names</artifactId>
        </dependency>

        <dependency>
            <groupId>com.github.jonpeterson</groupId>
            <artifactId>jackson-module-model-versioning</artifactId>
        </dependency>


        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
        </dependency>

        <dependency>
            <groupId>net.minidev</groupId>
            <artifactId>json-smart</artifactId>
        </dependency>


        <!-- Image Processing -->
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-batik</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-bmp</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-clippath</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-hdr</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-icns</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-iff</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-jpeg</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-metadata</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-pcx</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-pdf</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-pict</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-pnm</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-psd</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-sgi</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-tga</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-thumbsdb</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-tiff</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-webp</artifactId>
        </dependency>
        <dependency>
            <groupId>com.twelvemonkeys.servlet</groupId>
            <artifactId>servlet</artifactId>
        </dependency>


        <!-- FOP XSL based Print Formatter -->
        <dependency>
            <groupId>fop</groupId>
            <artifactId>fop</artifactId>
        </dependency>

        <!-- Security -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
        </dependency>

        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcpkix-jdk15on</artifactId>
        </dependency>
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
        </dependency>


        <!-- JAX-RS Rest API -->

        <dependency>
            <groupId>javax.ws.rs</groupId>
            <artifactId>javax.ws.rs-api</artifactId>
            <scope>compile</scope>
        </dependency>

        <!-- Rest API Documentation -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-jaxrs2</artifactId>
        </dependency>
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-jaxrs2-servlet-initializer</artifactId>
        </dependency>


        <!--
             *****************************
                Bytecode Processing
             *****************************
        -->

        <dependency>
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy</artifactId>
        </dependency>
        <dependency>
            <!-- Bytebuddy is preferred over cglib and other bytecode manipulation-->
            <groupId>net.bytebuddy</groupId>
            <artifactId>byte-buddy-agent</artifactId>
        </dependency>


        <dependency>
            <!-- deprecated prefer Bytebuddy, used bycom.dotcms.lib:dot.hibernate:2.1.7_3 -->
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <scope>compile</scope>
        </dependency>


        <dependency>
            <!-- Failure handling e.g. Circuit Breaker-->
            <groupId>net.jodah</groupId>
            <artifactId>failsafe</artifactId>
        </dependency>

        <dependency>
            <!-- ANTLR (ANother Tool for Language Recognition)  -->
            <groupId>org.antlr</groupId>
            <artifactId>antlr</artifactId>
            <scope>compile</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.antlr</groupId>
                    <artifactId>stringtemplate</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>antlr</groupId>
                    <artifactId>antlr</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- OSGi Keep Bundles out of here.  This is for core
        framework and interfaces required in parent classloader-->
        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.http.proxy</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.main</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.http.api</artifactId>
            <scope>compile</scope>
        </dependency>


        <!-- File Format Processing -->

        <!-- XML Processing -->
        <dependency>
            <groupId>org.dom4j</groupId>
            <artifactId>dom4j</artifactId>
        </dependency>

        <dependency>
            <groupId>org.jdom</groupId>
            <artifactId>jdom</artifactId>
        </dependency>

        <dependency>
            <!-- XML Stream Processing like Sax -->
            <groupId>xmlpull</groupId>
            <artifactId>xmlpull</artifactId>
        </dependency>


        <!-- HTML Processing -->
        <dependency>
            <groupId>org.ccil.cowan.tagsoup</groupId>
            <artifactId>tagsoup</artifactId>
        </dependency>

        <dependency>
            <!-- PDF Processing -->
            <groupId>org.apache.pdfbox</groupId>
            <artifactId>pdfbox</artifactId>
        </dependency>
        <dependency>
            <!-- Microsoft Document Processing -->
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
        </dependency>
        <dependency>
            <!-- Batik SVG Processing -->
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-anim</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-awt-util</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-bridge</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-codec</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-constants</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-css</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-dom</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>xml-apis</groupId>
                    <artifactId>xml-apis</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-ext</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-gvt</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-i18n</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-parser</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-script</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-svg-dom</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-transcoder</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-util</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-xml</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>xmlgraphics-commons</artifactId>
        </dependency>


        <!-- JAX-RS Rest Implementation Jersey -->

        <dependency>
            <groupId>org.glassfish.jersey.connectors</groupId>
            <artifactId>jersey-apache-connector</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.containers</groupId>
            <artifactId>jersey-container-servlet-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-common</artifactId>
        </dependency>

        <!--
        <dependency>
            <groupId>org.glassfish.jersey.inject</groupId>
            <artifactId>jersey-cdi2-se</artifactId>
        </dependency>
        -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-server</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.ext</groupId>
            <artifactId>jersey-entity-filtering</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-jaxb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-sse</artifactId>
        </dependency>

        <dependency>
            <!-- Immutables is a Java annotation processor to eliminate the burden of writing immutable types.
             Is only needed during compilation and no runtime component required -->
            <groupId>org.immutables</groupId>
            <artifactId>value</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <!-- Helps to load native libraries from JAR files -->
            <groupId>org.scijava</groupId>
            <artifactId>native-lib-loader</artifactId>
        </dependency>


        <!-- Servlet Container support -->
        <dependency>
            <!-- web filter rewrite of urls -->
            <groupId>org.tuckey</groupId>
            <artifactId>urlrewritefilter</artifactId>
        </dependency>


        <!-- Apache Tomcat -->

        <dependency>
            <!-- Jasper is the Tomcat JSP Engine -->
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jasper</artifactId>
            <scope>provided</scope>
        </dependency>


        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jdbc</artifactId>
            <scope>test</scope>
        </dependency>


        <!--
                <dependency>
                    <groupId>org.glowroot</groupId>
                    <artifactId>glowroot-agent</artifactId>
                </dependency>
        -->


        <!-- Test Dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility-proxy</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Deprecated need to remove replace with core mockito-->
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!-- Deprecated need to remove replace with core mockito-->
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- Hamcrest is a framework for writing matcher objects allowing 'match' rules to be defined declaratively. -->
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <!-- often just used for testing we have in production code -->
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.tngtech.junit.dataprovider</groupId>
            <artifactId>junit4-dataprovider</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- explicitly add all the declared logging dependencies -->
        <!-- Logging framework support Log4j2 as base logger
            very specific artifacts are required to support other frameworks.
            Do not include incompatible artifacts e.g. -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
        </dependency>
        <dependency>
            <!-- Support log4j1.2.x API in Log4j2 -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
        </dependency>
        <dependency>
            <!-- Support Java Commons Logging API in Log4j2 -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-jcl</artifactId>
        </dependency>
        <dependency>
            <!-- Support SLF4j2 API in Log4j2 -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j2-impl</artifactId>
        </dependency>
        <dependency>
            <!-- Servlet container initialization of Log4j2 -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
        </dependency>
        <dependency>
            <!-- Async support for Log4J 2.x -->
            <groupId>com.lmax</groupId>
            <artifactId>disruptor</artifactId>
        </dependency>

        <!-- Graalvm Js Engine -->
        <dependency>
            <groupId>org.graalvm.sdk</groupId>
            <artifactId>graal-sdk</artifactId>
        </dependency>
        <dependency>
            <groupId>org.graalvm.js</groupId>
            <artifactId>js</artifactId>
        </dependency>
        <dependency>
            <groupId>org.graalvm.js</groupId>
            <artifactId>js-scriptengine</artifactId>
        </dependency>

    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.dotcms</groupId>
                <artifactId>dotcms-application-bom</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <sourceDirectory>${src.dir}</sourceDirectory>
        <testSourceDirectory>${test.src.dir}</testSourceDirectory>
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>GeoLite2-City.mmdb</exclude>
                    <exclude>dotmarketing-config.properties</exclude>
                </excludes>
            </resource>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>dotmarketing-config.properties</include>
                </includes>
            </resource>
            <resource>
                <filtering>false</filtering>
                <directory>${starter.folder}</directory>
                <includes>
                    <include>${starter.deploy.filename}</include>
                </includes>
            </resource>
            <!--
            <resource>
                <filtering>false</filtering>
                <directory>src/main/webapp</directory>
            </resource>
            -->
        </resources>
        <extensions>
            <extension>
                <groupId>io.quarkus.bot</groupId>
                <artifactId>build-reporter-maven-extension</artifactId>
                <version>3.1.0</version>
            </extension>
        </extensions>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.dotcms</groupId>
                                    <artifactId>dotcms-core-web</artifactId>
                                    <version>${project.version}</version>
                                    <type>war</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/core-web</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.dotcms.plugins</groupId>
                                    <artifactId>dotcms-core-bundles</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/felix</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.dotcms.plugins</groupId>
                                    <artifactId>dotcms-system-bundles</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/felix-system</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-starter</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.dotcms</groupId>
                                    <artifactId>starter</artifactId>
                                    <version>${starter.deploy.version}</version>
                                    <type>zip</type>
                                    <overWrite>false</overWrite>
                                    <outputDirectory>${starter.download.folder}</outputDirectory>
                                    <destFileName>${starter.deploy.filename}</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.dotcms</groupId>
                                    <artifactId>starter</artifactId>
                                    <version>${starter.run.version}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${starter.download.folder}</outputDirectory>
                                    <destFileName>${starter.run.filename}</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-redis</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.dotcms</groupId>
                                    <artifactId>tomcat-redis-session-manager</artifactId>
                                    <version>${tomcat.redis-session-manager.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${tomcat-lib-folder}</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.apache.commons</groupId>
                                    <artifactId>commons-pool2</artifactId>
                                    <version>${commons-pool2.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${tomcat-lib-folder}</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.slf4j</groupId>
                                    <artifactId>slf4j-api</artifactId>
                                    <version>${org.slfj4.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${tomcat-lib-folder}</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>redis.clients</groupId>
                                    <artifactId>jedis</artifactId>
                                    <version>${jedis.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${tomcat-lib-folder}</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <!-- Add contents of WEB-INF/classes to a jar -->
                    <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                </configuration>
                <executions>
                    <execution>
                        <id>default-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                        <configuration>
                            <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                        </configuration>
                    </execution>

                    <execution>
                        <id>test-jar</id>
                        <phase>package</phase>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <archiveClasses>false</archiveClasses>
                    <!-- We will configure jar plugin ourselves to not use classifier -->
                    <attachClasses>false</attachClasses>
                    <classifier>war</classifier>
                    <webXml>${legacy.webapp.dir}/WEB-INF/web.xml</webXml>
                    <overlays>
                        <overlay>
                            <groupId>com.dotcms</groupId>
                            <artifactId>dotcms-core-web</artifactId>
                            <type>war</type>
                            <excludes>
                                <exclude>**/META-INF/**</exclude>
                                <exclude>**/WEB-INF/**</exclude>
                            </excludes>
                        </overlay>
                    </overlays>
                    <webResources>
                        <resource>
                            <directory>${legacy.webapp.dir}</directory>
                            <filtering>false</filtering>
                            <excludes>
                                <exclude>**/context.xml</exclude>
                            </excludes>
                        </resource>
                        <!-- add osgi bundles -->
                        <resource>
                            <directory>
                                ${project.build.directory}/felix
                            </directory>
                            <targetPath>WEB-INF/felix</targetPath>
                        </resource>
                        <resource>
                            <directory>
                                ${project.build.directory}/felix-system
                            </directory>
                            <targetPath>WEB-INF/felix-system</targetPath>
                        </resource>
                    </webResources>
                </configuration>
                <executions>
                    <execution>
                        <id>default-war</id>
                        <phase>package</phase>
                        <goals>
                            <goal>war</goal>
                        </goals>
                        <configuration>
                           <!-- <classifier>war</classifier>-->
                        </configuration>
                    </execution>
                    <execution>
                        <id>explode-war</id>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                        <configuration>
                            <webappDirectory>${exploded-webapp-dir}</webappDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven3-plugin</artifactId>
                <configuration>
                    <container>
                        <timeout>1800000</timeout>
                        <systemProperties>
                            <DOT_DATASOURCE_PROVIDER_STRATEGY_CLASS>com.dotmarketing.db.SystemEnvDataSourceStrategy</DOT_DATASOURCE_PROVIDER_STRATEGY_CLASS>
                            <DOT_DB_DRIVER>org.postgresql.Driver</DOT_DB_DRIVER>
                            <!--suppress UnresolvedMavenProperty -->
                            <DOT_DB_BASE_URL>jdbc:postgresql://localhost:${db.port}/dotcms?autosave=conservative</DOT_DB_BASE_URL>
                            <DOT_DB_USERNAME>postgres</DOT_DB_USERNAME>
                            <DOT_DB_PASSWORD>postgres</DOT_DB_PASSWORD>
                            <DOT_DOTCMS_DEV_MODE>true</DOT_DOTCMS_DEV_MODE>
                            <DOT_FEATURE_FLAG_EXPERIMENTS>true</DOT_FEATURE_FLAG_EXPERIMENTS>
                            <DOT_STARTER_DATA_LOAD>${starter.run.path}</DOT_STARTER_DATA_LOAD>
                            <file.encoding>UTF-8</file.encoding>
                            <!--suppress UnresolvedMavenProperty -->
                            <DOT_ES_ENDPOINTS>http://localhost:${es.port}</DOT_ES_ENDPOINTS>
                            <DOT_DATASOURCE_PROVIDER_STRATEGY_CLASS>com.dotmarketing.db.SystemEnvDataSourceStrategy</DOT_DATASOURCE_PROVIDER_STRATEGY_CLASS>
                            <DOT_ORG_OSGI_FRAMEWORK_STORAGE>${tomcat.run.data.folder}/${test.felix.cache.folder}</DOT_ORG_OSGI_FRAMEWORK_STORAGE>
                            <!--suppress UnresolvedMavenProperty -->
                            <DOT_SYSTEM_ORG_OSGI_FRAMEWORK_STORAGE>${tomcat.run.data.folder}/${test.felix.system.cache.folder}</DOT_SYSTEM_ORG_OSGI_FRAMEWORK_STORAGE>
                            <DOT_FELIX_BASE_DIR>${felix.base.dir}</DOT_FELIX_BASE_DIR>
                            <DOT_SYSTEM_FELIX_BASE_DIR>${felix.system.base.dir}</DOT_SYSTEM_FELIX_BASE_DIR>
                            <!--suppress UnresolvedMavenProperty -->
                            <DOT_FELIX_FILEINSTALL_DIR>${tomcat.run.data.folder}/${test.felix.load.folder}</DOT_FELIX_FILEINSTALL_DIR>
                            <!--suppress UnresolvedMavenProperty -->
                            <DOT_FELIX_UNDEPLOYED_DIR>${tomcat.run.data.folder}/${test.felix.undeployed.folder}</DOT_FELIX_UNDEPLOYED_DIR>
                            <!--suppress UnresolvedMavenProperty -->
                            <DOT_SYSTEM_FELIX_FILEINSTALL_DIR>${tomcat.run.data.folder}/${test.felix.system.load.folder}</DOT_SYSTEM_FELIX_FILEINSTALL_DIR>
                            <!--suppress UnresolvedMavenProperty -->
                            <DOT_SYSTEM_FELIX_UNDEPLOYED_DIR>${tomcat.run.data.folder}/${test.felix.system.undeployed.folder}</DOT_SYSTEM_FELIX_UNDEPLOYED_DIR>
                            <DOT_TEST_WEBAPP_ROOT>${test.webapp.root}</DOT_TEST_WEBAPP_ROOT>
                            <!--suppress UnresolvedMavenProperty -->
                            <DOT_ASSET_REAL_PATH>${tomcat.run.data.folder}/${test.assets.folder}</DOT_ASSET_REAL_PATH>
                            <!--suppress UnresolvedMavenProperty -->
                            <DOT_DYNAMIC_CONTENT_PATH>${tomcat.run.data.folder}/${test.dynamic.folder}</DOT_DYNAMIC_CONTENT_PATH>
                        </systemProperties>
                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                            </dependency>
                        </dependencies>
                    </container>
                    <configuration>
                        <properties>
                            <cargo.servlet.port>${servlet.port}</cargo.servlet.port>
                            <cargo.tomcat.debug.mode>${debug.enable}</cargo.tomcat.debug.mode>
                            <cargo.tomcat.debug.address>${debug.host}</cargo.tomcat.debug.address>
                            <cargo.tomcat.debug.suspend>${debug.suspend.flag}</cargo.tomcat.debug.suspend>
                        </properties>
                    </configuration>
                    <deployables>
                        <deployable>
                            <groupId>org.codehaus.cargo</groupId>
                            <artifactId>simple-war</artifactId>
                            <type>war</type>
                            <!--
                              Override location to point to the exploded webapp.
                              -->
                            <location>${exploded-webapp-dir}</location>
                            <properties>
                                <context>/</context>
                            </properties>
                        </deployable>
                    </deployables>
                    <packager>
                        <outputLocation>${assembly-directory}/dotserver/tomcat-${tomcat.version}</outputLocation>
                    </packager>
                </configuration>
                <executions>
                    <execution>
                        <id>configure</id>
                        <phase>package</phase>
                        <goals>
                            <goal>configure</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>

                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <imagesMap>
                        <dotcms>
                            <build>
                                <dockerFileDir>${project.basedir}/src/main/docker/original</dockerFileDir>
                                <buildx>
                                    <platforms>
                                        <platform>${docker.platforms}</platform>
                                    </platforms>
                                </buildx>
                                <assembly>
                                    <descriptor>original/docker-descriptor.xml</descriptor>
                                    <targetDir>/maven</targetDir>
                                </assembly>
                            </build>
                        </dotcms>
                    </imagesMap>
                </configuration>
                <executions>
                    <execution>
                        <id>docker-build</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                        <configuration>
                            <skip>${docker.skip.build}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>docker-push</id>
                        <phase>package</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <configuration>
                            <skip>${docker.skip.push}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sources>
                                <source>${basedir}/src/enterprise/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-resource</id>
                        <goals>
                            <goal>add-resource</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${starter.download.folder}</directory>
                                    <includes>
                                        <include>${starter.deploy.filename}</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>attach</id>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <phase>package</phase>
                        <configuration>
                            <artifacts>
                                <artifact>
                                    <file>${war.output.file}</file>
                                    <type>war</type>
                                    <classifier>war</classifier>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jboss.jandex</groupId>
                <artifactId>jandex-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-index</id>
                        <goals>
                            <goal>jandex</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}/generated-sources/annotations</directory>
                                </fileSet>
                            </fileSets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>tomcat9x</id>
            <activation>

                <property>
                    <name>!run-container</name>

                </property>

            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.codehaus.cargo</groupId>
                            <artifactId>cargo-maven3-plugin</artifactId>
                            <version>${version.cargo.plugin}</version>
                            <configuration>
                                <configuration>
                                    <type>standalone</type>
                                    <configfiles>
                                        <configfile>
                                            <file>${tomcat9-overrides}/bin/build.conf</file>
                                            <todir>bin</todir>
                                        </configfile>
                                        <configfile>
                                            <file>${tomcat9-overrides}/bin/setenv.bat</file>
                                            <todir>bin</todir>
                                        </configfile>
                                        <configfile>
                                            <file>${tomcat9-overrides}/bin/setenv.sh</file>
                                            <todir>bin</todir>
                                        </configfile>
                                        <!--
                                        <configfile>
                                            <file>${tomcat9-overrides}/conf/catalina.properties</file>
                                            <todir>conf</todir>
                                        </configfile>
                                        -->
                                        <configfile>
                                            <file>${tomcat9-overrides}/conf/server.xml</file>
                                            <todir>conf</todir>
                                        </configfile>
                                        <configfile>
                                            <file>${tomcat9-overrides}/conf/context.xml</file>
                                            <todir>conf</todir>
                                        </configfile>
                                        <configfile>
                                            <file>${tomcat9-overrides}/conf/local.dotcms.site.pem</file>
                                            <todir>conf</todir>
                                        </configfile>
                                    </configfiles>
                                </configuration>
                                <container>
                                    <containerId>tomcat9x</containerId>
                                    <timeout>1800000</timeout>
                                    <zipUrlInstaller>
                                        <url>
                                            https://repo.maven.apache.org/maven2/org/apache/tomcat/tomcat/${tomcat.version}/tomcat-${tomcat.version}.zip
                                        </url>
                                    </zipUrlInstaller>

                                </container>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>


        <profile>
            <id>tomcat-run</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <!-- override default name to create service containers that don't conflict with docker run -->
                <context.name>local-tomcat</context.name>
            </properties>
            <build>
                <defaultGoal>generate-sources</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <configuration/>
                        <executions>
                            <execution>
                                <id>cleanup-it-test-data</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>initialize</phase>
                                <configuration>
                                    <target>
                                        <ant antfile="${basedir}/ant-tasks.xml">
                                            <target name="pre-integration"/>
                                            <property name="cleanup" value="${cleanup.data.folder}"/>
                                        </ant>
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <filter>database,opensearch</filter>
                        </configuration>
                        <executions>
                            <execution>
                                <id>docker-pre-stop</id>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration/>
                            </execution>
                            <execution>
                                <id>docker-start</id>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration/>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven3-plugin</artifactId>
                        <configuration/>
                        <executions>
                            <execution>
                                <id>run-tomcat</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>generate-sources</phase>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>tomcat-stop</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <!-- override default name to create service containers that don't conflict with docker run -->
                <context.name>local-tomcat</context.name>
            </properties>
            <build>
                <defaultGoal>generate-sources</defaultGoal>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.cargo</groupId>
                        <artifactId>cargo-maven3-plugin</artifactId>
                        <configuration/>
                        <executions>
                            <execution>
                                <id>stop-tomcat</id>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <phase>validate</phase>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <filter>database,opensearch</filter>
                        </configuration>
                        <executions>
                            <execution>
                                <id>docker-stop</id>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <phase>validate</phase>
                                <configuration/>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>map-dev-paths</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>${version.docker-maven.plugin}</version>
                        <configuration>
                            <imagesMap>
                                <dotcms>
                                    <run>
                                        <volumes>
                                            <bind combine.children="append">
                                                <volume>${maven.multiModuleProjectDirectory}/core-web/dist/apps/dotcms-block-editor:/srv/${tomcat-dist-folder}/webapps/ROOT/dotcms-block-editor</volume>
                                                <volume>${maven.multiModuleProjectDirectory}/core-web/dist/apps/dotcms-binary-field-builder:/srv/${tomcat-dist-folder}/webapps/ROOT/dotcms-binary-field-builder</volume>
                                                <volume>${maven.multiModuleProjectDirectory}/core-web/dist/apps/dotcms-webcomponents:/srv/${tomcat-dist-folder}/webapps/ROOT/dotcms-webcomponents</volume>
                                                <volume>${maven.multiModuleProjectDirectory}/core-web/dist/apps/dotcms-ui:/srv/${tomcat-dist-folder}/webapps/ROOT/dotAdmin</volume>
                                                <volume>${project.build.directory}/classes:/srv/${tomcat-dist-folder}/webapps/ROOT/WEB-INF/classes</volume>
                                                <volume>${project.basedir}/src/main/webapp/WEB-INF/velocity:/srv/${tomcat-dist-folder}/webapps/ROOT/WEB-INF/velocity</volume>
                                                <volume>${project.basedir}/src/main/webapp/WEB-INF/messages:/srv/${tomcat-dist-folder}/webapps/ROOT/WEB-INF/messages</volume>
                                                <volume>${project.basedir}/src/main/webapp/WEB-INF/publishing-filters:/srv/${tomcat-dist-folder}/webapps/ROOT/WEB-INF/publishing-filters</volume>
                                                <volume>${project.basedir}/src/main/webapp/WEB-INF/javascript:/srv/${tomcat-dist-folder}/webapps/ROOT/WEB-INF/javascript</volume>
                                                <volume>${project.basedir}/src/main/webapp/html:/srv/${tomcat-dist-folder}/webapps/ROOT/html</volume>
                                            </bind>
                                        </volumes>
                                    </run>
                                </dotcms>
                            </imagesMap>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <reporting>
        <plugins>
            <!-- Surefire Report for unit tests -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
            </plugin>

            <!-- Javadoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>

            <!-- Dependency report -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
        </plugins>
    </reporting>
</project>
