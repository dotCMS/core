<project name="Plugin Builder" default="build">

    <property file="${basedir}/../../bin/build.conf" />

    <basename file="${basedir}" property="plugin.name" />
    <property name="home.dir" value="${basedir}/../../dotCMS" />

    <property name="src.dir" value="src" />
    <property name="conf.dir" value="conf" />
    <property name="build.dir" value="build" />
    <property name="build.conf" value="${build.dir}/conf" />
    <property name="build.classes" value="${build.dir}/classes" />
    <property name="src.jsp" value="${build.dir}/src_jsp" />
    <property name="jsp.dir" value="jsp" />
    <property name="tinymce.dir" value="tiny_mce" />
    <property name="dotcms.dir" value="dotcms" />
    <property name="classpath.dir" value="classpath" />
    <property name="ROOT.dir" value="ROOT" />
    <property name="manifest.file" value="MANIFEST.MF" />

    <property name="jar.file" value="${build.dir}/jar/plugin-${plugin.name}.jar" />

    <condition property="target.root.dir" value="${target.root}" else="${home.dir}">
        <isset property="target.root"/>
    </condition>
	
	<path id="jar.classpath">
        <fileset dir="${basedir}/../../../../build/pluginsLib" erroronmissingdir="false">
            <include name="**/*.jar" />
        </fileset>

        <!--TODO: Required to find the servlet API jar, that jar is in the app server libs folder-->
        <fileset dir="${basedir}/../../${target.root.dir}/../../lib" erroronmissingdir="false">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${target.root.dir}/../libs/buildlibs" erroronmissingdir="false">
            <include name="**/*.jar" />
        </fileset>
        <!--TODO: Required to find the servlet API jar, that jar is in the app server libs folder-->

        <fileset dir="${target.root.dir}/WEB-INF/lib" erroronmissingdir="false">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="${basedir}/../../${target.root.dir}/WEB-INF/lib" erroronmissingdir="false">
            <include name="**/*.jar" />
        </fileset>
        <fileset dir="lib">
            <include name="**/*.jar" />
        </fileset>
	</path>
	
	<mkdir dir="lib" />
	
    <manifestclasspath property="tem.classpath" jarfile="classpath-tmp.jar" maxParentLevels="6">
        <classpath refid="jar.classpath"/>
    </manifestclasspath> 

    <jar destfile="classpath-tmp.jar">
        <manifest>             
            <attribute name="Class-Path" value="${tem.classpath}"/>
        </manifest>
    </jar>
        	
    <path id="files-classpath">
    	<pathelement path="classpath-tmp.jar"/>
        <pathelement path="${build.classes}" />
        <pathelement path="../../build/classes" />
    </path>

    <target name="build" depends="clean,compile,jar" />
    <target name="compile">

        <echo>Building at: ${plugin.name} at ${basedir}</echo>
        <mkdir dir="${build.classes}" />
        <mkdir dir="${src.dir}" />
        <!-- 
        CREATE THE LIB DIRECTORIES IF IT DOESN'T EXIST. 
        THIS PREVENTS THE javac TASK FROM FAILING
        -->
        <mkdir dir="lib" />
        <javac debug="true" debuglevel="lines,vars,source" fork="true" srcdir="${src.dir}" destdir="${build.classes}" source="1.8" target="1.8" compiler="modern" nowarn="true" optimize="true" memoryinitialsize="256m" memorymaximumsize="512m">
            <classpath refid="files-classpath" />
        </javac>
        <!-- copying other resource within src folder in the classpath -->
        <copy todir="${build.classes}">
            <fileset dir="${src.dir}">
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>
    <!--<target name="jar" depends="compile,doif">-->
    <target name="jar" depends="compile">
        <mkdir dir="${build.dir}/jar" />

        <!-- 
        CREATE DIRECTORIES THAT DON'T EXIST. 
        THIS PREVENTS THE jar TASK FROM FAILING
        -->
        <mkdir dir="${build.classes}" />
        <mkdir dir="${conf.dir}" />
        <mkdir dir="${build.conf}" />
        <mkdir dir="static_files" />
        <mkdir dir="static_velocity" />
        <mkdir dir="lib" />
        <mkdir dir="${jsp.dir}" />
        <mkdir dir="${tinymce.dir}" />
        <mkdir dir="${dotcms.dir}" />
        <mkdir dir="${ROOT.dir}" />

        <jar jarfile="${jar.file}" manifest="${manifest.file}">
            <fileset dir="${build.classes}" />
            <zipfileset dir="${conf.dir}" prefix="conf" />
            <zipfileset dir="${build.conf}" prefix="conf" />
            <zipfileset dir="static_files" prefix="static_files" excludes="**/thumb.db" />
            <zipfileset dir="static_velocity" prefix="static_velocity" />
            <zipfileset dir="lib" prefix="lib" />
            <zipfileset dir="${ROOT.dir}" prefix="ROOT" />
            <zipfileset dir="${jsp.dir}" prefix="jsp" />
            <zipfileset dir="${tinymce.dir}" prefix="tiny_mce" />
            <zipfileset dir="${dotcms.dir}" prefix="dotcms" excludes="**/thumb.db" />
        </jar>
    	
    	<delete file="classpath-tmp.jar"></delete>

    </target>
    
    <!--
    <target name="doif" depends="checkFileExists, if_target"/>
    <target name="checkFileExists">
        <condition property="p">
           <available file="${classpath.dir}" />
        </condition>
    </target>
    <target name="if_target" if="p">
        <condition property="jar.destfile" value="${basedir}/../../${target.root.dir}/WEB-INF/lib/plugin-${plugin.name}-classpath.jar" else="${target.root.dir}/WEB-INF/lib/plugin-${plugin.name}-classpath.jar">
          <isset property="target.root"/>
        </condition>
        <jar destfile="${jar.destfile}" basedir="${classpath.dir}" />
    </target>
    -->

    <target name="clean">
        <delete dir="${build.dir}" />
    </target>

</project>
