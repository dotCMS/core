var N={"block-editor":"init-editor-inline-editing"};function y(t){r({action:"edit-contentlet",payload:t})}function c(t,n){let{inode:e,languageId:o,contentType:i,fieldName:d,content:a}=n,s=N[t];if(!s)return;let p=typeof a=="string"?a:JSON.stringify(a??{});r({action:s,payload:{type:t,data:{inode:e,fieldName:d,contentType:i,languageId:o,content:p}}})}function D(){return typeof window>"u"?!1:window.parent!==window}function v(){window.dotUVE=E}function L(){document.querySelectorAll('[data-dot-object="contentlet"]').forEach(n=>{n.clientHeight||n.classList.add("empty-contentlet")})}var E={editContentlet:y,initInlineEditing:c,lastScrollYPosition:0};function r(t){window.parent.postMessage(t,"*")}function C(t){return t.map(n=>{let e=n.getBoundingClientRect(),o=Array.from(n.querySelectorAll('[data-dot-object="contentlet"]'));return{x:e.x,y:e.y,width:e.width,height:e.height,payload:JSON.stringify({container:b(n)}),contentlets:U(e,o)}})}function U(t,n){return n.map(e=>{let o=e.getBoundingClientRect();return{x:0,y:o.y-t.y,width:o.width,height:o.height,payload:JSON.stringify({container:e.dataset?.dotContainer?JSON.parse(e.dataset?.dotContainer):g(e),contentlet:{identifier:e.dataset?.dotIdentifier,title:e.dataset?.dotTitle,inode:e.dataset?.dotInode,contentType:e.dataset?.dotType}})}})}function b(t){return{acceptTypes:t.dataset?.dotAcceptTypes||"",identifier:t.dataset?.dotIdentifier||"",maxContentlets:t.dataset?.maxContentlets||"",uuid:t.dataset?.dotUuid||""}}function g(t){let n=t.closest('[data-dot-object="container"]');return n?b(n):(console.warn("No container found for the contentlet"),null)}function m(t){return t?t?.dataset?.dotObject==="contentlet"||t?.dataset?.dotObject==="container"&&t.children.length===0?t:m(t?.parentElement):null}function M(t){let n=t.querySelectorAll('[data-dot-object="vtl-file"]');return n.length?Array.from(n).map(e=>({inode:e.dataset?.dotInode,name:e.dataset?.dotUrl})):null}function w(){let t=document.documentElement.scrollHeight,n=window.innerHeight;return window.scrollY+n>=t}var l=[];function V(){let t=Array.from(document.querySelectorAll('[data-dot-object="container"]')),n=C(t);r({action:"set-bounds",payload:n})}function u(){let t=n=>{({"uve-reload-page":()=>{window.location.reload()},"uve-request-bounds":()=>{V()},"uve-scroll-inside-iframe":()=>{let o=n.data.direction;if(window.scrollY===0&&o==="up"||w()&&o==="down")return;let i=o==="up"?-120:120;window.scrollBy({left:0,top:i,behavior:"smooth"})}})[n.data.name]?.()};window.addEventListener("message",t),l.push({type:"listener",event:"message",callback:t})}function T(){let t=n=>{let e=m(n.target);if(!e)return;let{x:o,y:i,width:d,height:a}=e.getBoundingClientRect(),s=e.dataset?.dotObject==="container",p={identifier:"TEMP_EMPTY_CONTENTLET",title:"TEMP_EMPTY_CONTENTLET",contentType:"TEMP_EMPTY_CONTENTLET_TYPE",inode:"TEMPY_EMPTY_CONTENTLET_INODE",widgetTitle:"TEMP_EMPTY_CONTENTLET",baseType:"TEMP_EMPTY_CONTENTLET",onNumberOfPages:1},I={identifier:e.dataset?.dotIdentifier,title:e.dataset?.dotTitle,inode:e.dataset?.dotInode,contentType:e.dataset?.dotType,baseType:e.dataset?.dotBasetype,widgetTitle:e.dataset?.dotWidgetTitle,onNumberOfPages:e.dataset?.dotOnNumberOfPages},h=M(e),x={container:e.dataset?.dotContainer?JSON.parse(e.dataset?.dotContainer):g(e),contentlet:s?p:I,vtlFiles:h};r({action:"set-contentlet",payload:{x:o,y:i,width:d,height:a,payload:x}})};document.addEventListener("pointermove",t),l.push({type:"listener",event:"pointermove",callback:t})}function f(){let t=()=>{r({action:"scroll"}),window.dotUVE={...window.dotUVE??E,lastScrollYPosition:window.scrollY}},n=()=>{r({action:"scroll-end"})};window.addEventListener("scroll",t),window.addEventListener("scrollend",n),l.push({type:"listener",event:"scroll",callback:n}),l.push({type:"listener",event:"scroll",callback:t})}function O(){let t=()=>{window.scrollTo(0,window.dotUVE?.lastScrollYPosition)};window.addEventListener("load",t),l.push({type:"listener",event:"scroll",callback:t})}var S=()=>{if(document.readyState==="complete"){P();return}window.addEventListener("load",()=>P())},P=()=>{let t=document.querySelectorAll("[data-block-editor-content]");t.length&&t.forEach(n=>{let{inode:e,languageId:o,contentType:i,fieldName:d,blockEditorContent:a}=n.dataset;if(!e||!o||!i||!d){console.error("Missing data attributes for block editor inline editing."),console.warn("inode, languageId, contentType and fieldName are required.");return}n.classList.add("dotcms__inline-edit-field"),n.addEventListener("click",()=>{c("block-editor",{inode:e,content:a||"",fieldName:d,languageId:o,contentType:i})})})};D()&&(v(),u(),f(),O(),T(),L(),S());
