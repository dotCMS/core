import{r as registerInstance,h,H as Host,g as getElement}from"./p-17c4ed33.js";import{h as getOriginalStatus,u as updateStatus,a as getClassNames}from"./p-f1ae637c.js";import{a as getErrorMessage,b as getFieldsFromLayout,f as fieldCustomProcess}from"./p-0ff2a75e.js";class DotUploadService{constructor(){}uploadFile(t,e){return"string"==typeof t?this.uploadFileByURL(t):this.uploadBinaryFile(t,e)}uploadFileByURL(t){return fetch("/api/v1/temp/byUrl",{method:"POST",headers:{"Content-Type":"application/json",Origin:window.location.hostname},body:JSON.stringify({remoteUrl:t})}).then(async t=>{if(200===t.status)return(await t.json()).tempFiles[0];throw{message:(await t.json()).message,status:t.status}})}uploadBinaryFile(t,e){let s="/api/v1/temp";s+=e?`?maxFileLength=${e}`:"";const a=new FormData;return a.append("file",t),fetch(s,{method:"POST",headers:{Origin:window.location.hostname},body:a}).then(async t=>{if(200===t.status)return(await t.json()).tempFiles[0];throw{message:(await t.json()).message,status:t.status}})}}const SUBMIT_FORM_API_URL="/api/v1/workflow/actions/default/fire/NEW",fallbackErrorMessages={500:"500 Internal Server Error",400:"400 Bad Request",401:"401 Unauthorized Error"},DotFormComponent=class{constructor(t){registerInstance(this,t),this.resetLabel="Reset",this.submitLabel="Submit",this.layout=[],this.variable="",this.status=getOriginalStatus(),this.errorMessage="",this.uploadFileInProgress=!1,this.fieldsStatus={},this.value={}}onValueChange(t){const{tagName:e}=t.target,{name:s,value:a}=t.detail,r=fieldCustomProcess[e];"DOT-BINARY-FILE"===e&&a?this.uploadFile(t).then(t=>{this.value[s]=t&&t.id}):this.value[s]=r?r(a):a}onStatusChange({detail:t}){this.fieldsStatus[t.name]=t.status,this.status=updateStatus(this.status,{dotTouched:this.getTouched(),dotPristine:this.getStatusValueByName("dotPristine"),dotValid:this.getStatusValueByName("dotValid")})}layoutWatch(){this.value=this.getUpdateValue()}fieldsToShowWatch(){this.value=this.getUpdateValue()}componentWillLoad(){this.value=this.getUpdateValue()}render(){const t=getClassNames(this.status,this.status.dotValid);return h(Host,{class:Object.assign({},t)},h("form",{onSubmit:this.handleSubmit.bind(this)},this.layout.map(t=>h("dot-form-row",{row:t,"fields-to-show":this.fieldsToShow})),h("div",{class:"dot-form__buttons"},h("button",{type:"reset",onClick:()=>this.resetForm()},this.resetLabel),h("button",{type:"submit",disabled:!this.status.dotValid||this.uploadFileInProgress},this.submitLabel))),h("dot-error-message",null,this.errorMessage))}getStatusValueByName(t){return Object.values(this.fieldsStatus).map(e=>e[t]).every(t=>!0===t)}getTouched(){return Object.values(this.fieldsStatus).map(t=>t.dotTouched).includes(!0)}handleSubmit(t){t.preventDefault(),fetch(SUBMIT_FORM_API_URL,{method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify({contentlet:Object.assign({contentType:this.variable},this.value)})}).then(async t=>{if(200!==t.status)throw{message:await t.text(),status:t.status};return t.json()}).then(t=>{this.runSuccessCallback(t.entity)}).catch(({message:t,status:e})=>{this.errorMessage=getErrorMessage(t)||fallbackErrorMessages[e]})}runSuccessCallback(contentlet){const successCallback=this.getSuccessCallback();if(successCallback)return function(){return eval(successCallback)}.call({contentlet})}getSuccessCallback(){return getFieldsFromLayout(this.layout).filter(t=>"formSuccessCallback"===t.variable)[0].values}resetForm(){Array.from(this.el.querySelectorAll("form dot-form-column > *")).forEach(async t=>{try{await t.reset()}catch(e){console.warn(`${t.tagName}`,e)}})}getUpdateValue(){return getFieldsFromLayout(this.layout).filter(t=>!1===t.fixed).reduce((t,{variable:e,defaultValue:s,dataType:a,values:r})=>Object.assign(Object.assign({},t),{[e]:s||("TEXT"!==a?r:null)}),{})}getMaxSize(t){const e=[...t.target.attributes].filter(t=>"max-file-length"===t.name)[0];return e&&e.value}uploadFile(t){const e=new DotUploadService,s=t.detail.value,a=this.getMaxSize(t),r=t.target;return!a||s.size<=a?(this.uploadFileInProgress=!0,r.errorMessage="",e.uploadFile(s,a).then(t=>(this.errorMessage="",r.previewImageUrl=t.thumbnailUrl,r.previewImageName=t.fileName,this.uploadFileInProgress=!1,t)).catch(({message:t,status:e})=>(r.clearValue(),this.uploadFileInProgress=!1,this.errorMessage=getErrorMessage(t)||fallbackErrorMessages[e],null))):(r.reset(),r.errorMessage=`File size larger than allowed ${a} bytes`,Promise.resolve(null))}get el(){return getElement(this)}static get watchers(){return{layout:["layoutWatch"],fieldsToShow:["fieldsToShowWatch"]}}static get style(){return"dot-form{display:block}dot-form>form label{margin:0;padding:0}dot-form>form dot-form-column>*{display:block;margin:2rem 0}dot-form>form dot-form-column>:first-child{margin-top:0}dot-form>form dot-form-column>:last-child{margin-bottom:0}dot-form>form .dot-form__buttons{display:-ms-flexbox;display:flex;-ms-flex-direction:row;flex-direction:row;-ms-flex-pack:end;justify-content:flex-end}dot-form>form .dot-form__buttons button:last-child{margin-left:1rem}"}};export{DotFormComponent as dot_form};