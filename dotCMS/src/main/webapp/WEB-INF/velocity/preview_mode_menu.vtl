#if($UtilMethods.isSet($request.getParameter("previewDevice")))
	#set($_previewDevice = $dotcontent.find($request.getParameter("previewDevice")))
#elseif($UtilMethods.isSet($request.getAttribute("previewAsDeviceId")))
	#set($_previewDevice = $dotcontent.find($session.getAttribute("previewAsDeviceId")))
#elseif($UtilMethods.isSet($session.getAttribute("previewAsDeviceId")))
	#set($_previewDevice = $dotcontent.find($session.getAttribute("previewAsDeviceId")))
#end

#if($request.getAttribute('archive'))
    #set($archive = $request.getAttribute('archive'))
#end

##macro(shortenString $stringToShorten)${UtilMethods.prettyShortenString($stringToShorten, 20)}#end
#if($UtilMethods.isSet($request.getAttribute("com.dotmarketing.clickstream.uri.override")))
    #set($VTLSERVLET_URI =  $request.getAttribute("com.dotmarketing.clickstream.uri.override"))
#end

#set($dojoPath = $webapi.getConfigVar('path.to.dojo'))
#if(!$UtilMethods.isSet($dojoPath))
    #set($dojoPath = "/html/js/dojo/1.4.0")
#end

##DOTCMS-5365
#if($UtilMethods.isSet($request.getAttribute("com.dotmarketing.wiki.contentlet.url")))
    #set($VTLSERVLET_URI =  $request.getAttribute("com.dotmarketing.wiki.contentlet.url"))
#end
#set($wfSchemes = $workflowtool.findSchemesForStruct($dotPageContent.structure))
#set($wfScheme = '')

#set($wfSteps = $workflowtool.findStepsByContentlet($dotPageContent.contentObject))

#if($wfSteps && $wfSteps.size() == 1)
    #set($wfScheme = $workflowtool.findScheme($wfSteps.get(0).getSchemeId()))
#end

#set($wfActions = $workflowtool.findActions($wfSteps, $backendUser, $dotPageContent.contentObject)))
#set($isLocked = $contents.isLocked($dotPageContent.inode))
#set($iCanLock = $contents.canLock($dotPageContent.inode))
#if($UtilMethods.isSet($wfScheme))
   #set($mandatory = $wfScheme.mandatory)
#else
   #set($mandatory = false)
#end

#set($previewDevices = $dotcontent.pull("+contentType:previewDevice", 500, "previewDevice.name"))


<html>
<head>

<meta http-equiv="cache-control" content="max-age=0" />
<meta http-equiv="cache-control" content="no-cache" />
<meta http-equiv="expires" content="0" />
<meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
<meta http-equiv="pragma" content="no-cache" />


<style type="text/css">
    @import "/html/js/dojo/custom-build/dijit/themes/dijit.css";
	@import "/html/css/dijit-dotcms/dotcms.css?b=3.7.0";
</style>

<style>
	body{
        margin:0;
        padding:0;
        font-family: Roboto, "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;
        font-size: 13px;
        background: #FBFAFB;
    }

	div.maxmin{position:absolute;top:10px;right: 8px;width:24px;bottom:0px;height:24px;background: #0E80CB;border: 1px solid #aaa;border-radius: 100%;text-align: center;}
    .maxmin span {font-weight: bold; color: #fff;line-height: 18px;}
	#max_bar{background: #0E80CB;}
	#min_bar{background: #0E80CB;}
	#min_bar{display: none;}
	
	.sideMenu {width: 100%;overflow: hidden;}

    .content-edit-actions > div a, .content-edit-actions > div a:hover {text-decoration: none;}
    .dijitTabPaneWrapper .dijitContentPane {padding: 16px 20px 16px 8px;}

    .disabled{display:block;line-height:18px;padding:3px;color:#aaa;text-decoration:none;}

    .viewOptions {background: ; padding: 15px 20px 15px 8px; border-top: solid 1px #C5C5C5; border-bottom: solid 1px #C5C5C5;}

    .lang{margin: 0 0 15px 0; }

    .personaWrapper {}
    .personaWrapper .dijitComboBox, .lang .dijitComboBox {width: 100%;}
    .personaImageDiv {margin-top: 8px; text-align: center;}
    .personaImage {border-radius: 50%; border: 1px solid #5C5C5; width: 85px; height: 85px; background-color: #fff;background-position: center center; background-repeat: no-repeat; background-size: contain;}
    label {text-transform: uppercase; margin-bottom: 8px;color: #636163; font-size: 11px; display:block;}

</style>

<script type="text/javascript">
   	djConfig={
           parseOnLoad: true,
           isDebug: false,
           modulePaths: { dotcms: "/html/js/dotcms", dwr: '/dwr' }
   };
</script>
<script type="text/javascript" src="$dojoPath/dojo/dojo.js"></script>
<script type="text/javascript" src="$dojoPath/dojo/dot-dojo.js"></script>
<script type="text/javascript">
    dojo.require("dojo.parser");
    dojo.require("dijit.form.Button");
    dojo.require('dijit.layout.TabContainer');
    dojo.require('dijit.layout.ContentPane');
    dojo.require('dijit.form.FilteringSelect');
    dojo.require('dojo.data.ItemFileReadStore');
    dojo.require("dojo.fx");

</script>

#if($VTLSERVLET_URI.indexOf("?") > -1)
    #set ($referer = "${VTLSERVLET_URI}&language=${language}&host_id=${host.identifier}")
#else
    #set ($referer = "${VTLSERVLET_URI}?language=${language}&host_id=${host.identifier}")
#end
<script type="text/javascript" src="/dwr/engine.js"></script>
<script type="text/javascript" src="/dwr/util.js"></script>
<script type="text/javascript" src="/dwr/interface/ContentletAjax.js"></script>
<script type="text/javascript">
	var language="$language";
	var personaId="$!visitor.persona.identifier";
	var state="live";
	var locked = $isLocked;
	
	
	function setKeepAlive(){
		var myId=document.getElementById("dot_keep_alive_hidden_iframe");
		myId.src ="/html/common/keep_alive.jsp?r=" + Math.random();
	}
	// 15 minutes
	setTimeout("setKeepAlive()", 60000 * 15);



    function protoUpdateWrapper(element,code){
        element.innerHTML='';
        element.innerHTML=code;
        ##Element.update(element,code);
    }

    function protoInsertionBottomWrapper(element,code){
        Insertion.Bottom(element,code);
    }


    function livePage(){
		console.log("livePage");
		console.log("locked:" + locked);
		state="live";
		changeUrl();
    }

    function changeLanguage(lang){
    	language=lang;
		changeUrl();
    }
    
    function changePersona(){
		if(dijit.byId("personaSelector")==undefined){
			return;
		}
    	var val=dijit.byId("personaSelector").getValue();
    	var ids = val.split(":");
    	
    	personaId=ids[0];
    	
    	getPersonaImage(ids[1]);
		changeUrl();
    }
    
    

    var _lastUrl;
    var _previewDevice="$!myDevice";
    //changeUrl Function updates the mainFrame iframe depending on the selected view and session-related attributes
    function changeUrl(){
    	
    	var newUrl="";

        //mainFrame indicates we're updating the main iframe only
        newUrl+="${VTLSERVLET_URI}?mainFrame=1";

        //We check what view mode is selected (Live, Edit or Preview)
    	if(state == "live"){
    		newUrl+="&livePage=1"
    	}
    	else if(state=="editing"){
    		newUrl+="&previewPage=1"
    	}
    	else if(state=="preview"){
    		newUrl+="&previewPage=2"
    	}
        
    	if(_previewDevice != undefined && _previewDevice.length > 0){
    		newUrl+="&previewDevice=" + _previewDevice;
    	}
    	
        //Since it's a page as content, we add LanguageId, HostId AND PersonaId to the Query String
        newUrl+="&com.dotmarketing.htmlpage.language="+language ;
        newUrl+="&host_id=${host.identifier}";
        newUrl+="&com.dotmarketing.persona.id="+personaId ;

        //Check other Query String Params
        var queryStringFromContext = "${queryString}".split("&");

        //Let's check for duplicated ones and those that cannot be added to the QueryString params at the same time
        for (i=0; i< queryStringFromContext.length; i++){
            if(newUrl.indexOf(queryStringFromContext[i]) < 0 && queryStringFromContext[i].indexOf("leftMenu") < 0
                    && queryStringFromContext[i].indexOf("livePage") < 0 && queryStringFromContext[i].indexOf("previewPage") < 0){
                newUrl += "&"+queryStringFromContext[i];
            }
        }

    	if(_lastUrl!=newUrl){
	    	_lastUrl=newUrl;
	    	
			var win = window.top.document.getElementById('detailFrame').contentDocument.getElementById("frameMain").contentWindow !=null 
				? window.top.document.getElementById('detailFrame').contentDocument.getElementById("frameMain").contentWindow
					: window.top.document.getElementById('detailFrame').contentDocument.getElementById("frameMain");
	    	
			console.log("name3:" + win.name);

   			win.location  = newUrl;
   	 	}
    }
    
    function listFrames(win){
    	console.log("name:" + win.name);
    	for(i=0;i<win.frames.length;i++){
    		console.log("frames:" + win.frames[i].name);
    	}
    }
    
    
    


    function previewPage(){
		//console.log("previewPage");
		//console.log("locked:" + locked);
    	state="preview";
    	// hide editing, show preview
    	if(locked){
    		dojo.byId("previewModeTools").innerHTML=dojo.byId("lockedPageToolsTmpl").innerHTML;
    		dojo.style(dijit.byId("editModeTab").controlButton.domNode,{display:"inline-block"});
    	}
    	else{
        	var html = dojo.byId("unLockedPageToolsTmpl").innerHTML;
			dojo.byId("previewModeTools").innerHTML=dojo.byId("unLockedPageToolsTmpl").innerHTML;
			dojo.style(dijit.byId("editModeTab").controlButton.domNode,{display:"none"});
    	}
		

    	changeUrl();
    }

    function editingPage(){
		//console.log("editingPage");
		//console.log("locked:" + locked);
    	// hide preview, show editing
		dojo.byId("lockedPageTools").innerHTML=dojo.byId("lockedPageToolsTmpl").innerHTML;
		dojo.style(dijit.byId("editModeTab").controlButton.domNode,{display:"inline-block"});
    	
    	state="editing";
    	changeUrl();
    }

    function popBrowser(x){
        document.getElementById('container').value=x;
        document.getElementById('cmd').value="addChild";
        newwin = window.open('${viewFoldersURL}&view=${view}&content=contentlets&popup=contentlet&child=true#treeTop', 'newwin', 'scrollbars=yes,width=700,height=400,scrollbars=yes,resizable=yes');
    }

    function submitParent(){
        if(newwin) newwin.close();
        document.getElementById('submitParent').submit();

    }

    function addPage(){
        document.getElementById('htmlPage').value='0';
        document.getElementById('cmd').value="newHTMLPage";
 
        document.getElementById('HTMLPageType').value="${HTMLPAGE_ASSET_STRUCTURE_TYPE}";
        document.getElementById('submitParent').submit();
    }

    function editPageProperties(){
        document.getElementById('cmd').value="editHTMLPage";
        document.getElementById('submitParent').submit();
    }
    


    function viewStatistics(){
        document.getElementById('cmd').value="viewStatistics";
        document.getElementById('submitParent').submit();
    }

    function viewTask(id){
        document.getElementById('taskInode').value=id;
        document.getElementById('cmd').value="viewWorkflow";
        document.getElementById('submitParent').submit();
    }

    function publishAll(){
        if(confirm("$languagewebapi.getFromUserLanguage("message.confirm.modes.publish.page")")){

            document.getElementById('cmd').value="publishHTMLPage";
            document.getElementById('submitParent').submit();
        }
    }

    function remotePublishCall(){
    	parent.remotePublish();
    }

    function addToBundleCall(){
    	parent.addToBundle();
    }
    function editTemplate(){
            document.getElementById('cmd').value="editTemplate";
            document.getElementById('submitParent').submit();
    }


    function submitMenu() {
        form = document.getElementById("form_menu");
        formsubmitParent = document.getElementById("submitParent");
        form.referer.value = formsubmitParent.referer.value;
        form.submit();
    }
    function doLogout() {
        top.window.location="/c/portal/logout?referer=/";
    }
    var is_collapsed = false;

    function ToggleCollapse() {
        if (is_collapsed) {
            parent.document.getElementById('frameMenu').style.width="240px";
            document.getElementById("main_window").style.display = 'block';
            document.getElementById("max_bar").style.display = "block";
            document.getElementById("max_bar").style.backgroundColor = "#0E80CB";
            document.getElementById("min_bar").style.display = 'none';
            document.getElementById("min_bar").style.backgroundColor = "#0E80CB";
            document.getElementsByTagName("html")[0].style.overflow = "";
            is_collapsed = false;
            parent.resetFrameWidth();
        } else {
            document.getElementById("main_window").style.display = 'none';
            document.getElementById("max_bar").style.display = "none";
            document.getElementById("max_bar").style.backgroundColor = "#0E80CB";
            document.getElementById("min_bar").style.backgroundColor = "#0E80CB";
            document.getElementById("min_bar").style.display = 'block';
            document.getElementsByTagName("html")[0].style.overflow = "hidden";
            parent.document.getElementById('frameMenu').style.width="36px";
            is_collapsed = true;
            parent.resetFrameWidth();
        }
    }
    
    
    function viewDiff(){
		var varHTMLPage = document.getElementById("htmlPageId").value;
		var diffUrl;
        #if($UtilMethods.isSet($request.getAttribute('com.dotmarketing.wiki.contentlet')))
        	diffUrl="/html/portlet/ext/htmlpages/view_live_working_diff.jsp?id=" + varHTMLPage + "&contentId=$request.getAttribute('com.dotmarketing.wiki.contentlet')" + "&pageLang=" + language;
        #else
        	diffUrl="/html/portlet/ext/htmlpages/view_live_working_diff.jsp?id=" + varHTMLPage + "&pageLang=" + language;
        #end
        var nothingChangedMsg='$languagewebapi.getFromUserLanguage("nothing-changed")';
        
    	var xhrArgs = {
    			url : diffUrl ,
    			handleAs : "text",

    			sync: false,
    			load : function(data) {
    				var html = data.trim();
    				if(html.length<50 || html == nothingChangedMsg){
    			    	parent.frameMenu.document.body.style.cursor  = 'default';
    			    	parent.frameMain.document.body.style.cursor  = 'default';
    					alert(nothingChangedMsg);
    					
    				}
    				else{
    					var  frameDocument=  parent.frameMain.document;
    					frameDocument.write(html);
    			    	parent.frameMenu.document.body.style.cursor  = 'default';
    			    	parent.frameMain.document.body.style.cursor  = 'default';
    			    	_lastUrl=diffUrl;
    				}
    			},
    			error : function(error) {
    				alert(error);
    				console.log(error);
    			}
    		}
    	
    	parent.frameMenu.document.body.style.cursor  = 'progress';
    	parent.frameMain.document.body.style.cursor  = 'progress';
    	var deferred = dojo.xhrGet(xhrArgs);
    }
    
    function fireLockPage(){
    	var xhrArgs = {
    			url : "/api/content/lock/inode/$dotPageContent.inode" ,
    			handleAs : "json",

    			
    			headers: { 
    		        'Accept': 'application/json',
    		        'Content-Type': 'application/json' 
    		    },
    			sync: false,
    			load : function(data) {

    				
    				toggleLock(true);
    			},
    			error : function(error) {
    				console.log(error);
    			}
    		}

    	var deferred = dojo.xhrPut(xhrArgs);
    }
    
    function fireUnlockPage(){
    	var xhrArgs = {
    			url : "/api/content/unlock/inode/$dotPageContent.inode" ,
    			handleAs : "json",

    			
    			headers: { 
    		        'Accept': 'application/json',
    		        'Content-Type': 'application/json' 
    		    },
    			sync: false,
    			load : function(data) {
    				toggleLock(false);
    			},
    			error : function(error) {
    				console.log(error);
    			}
    		}

    	var deferred = dojo.xhrPut(xhrArgs);

    	
    }
    
    
    function getPersonaImage(inode){

		if(document.getElementById("personaImage")==undefined){
			return;
		}
   		if(!inode || inode==0 || inode=="0"){
			document.getElementById("personaImage").style.backgroundImage="url(/html/images/persona/default-persona.png)";
   			document.getElementById("personaImage").src="/html/images/shim.gif";
   			//document.getElementById("personaImage").style.backgroundColor="#fff";
   			return;
   		}

		var imageUrl = "/contentAsset/image/" + inode + "/photo/byInode/true/filter/Thumbnail/thumbnail_w/80/thumbnail_h/80/?r=" +new Date().getTime();
		var newImage = new Image();
						
		newImage.onload = function(){
			document.getElementById("personaImage").src= this.src;
		}
		newImage.onerror = function(){
			console.log(document.getElementById("personaImage").style);
			document.getElementById("personaImage").src="/html/images/shim.gif";
			document.getElementById("personaImage").style.backgroundImage="url(/html/images/persona/default-persona.png)";
			document.getElementById("personaImage").style.backgroundColor="#fff";
		}
		newImage.src=imageUrl;


    }
    
    
    
    
    
    function toggleLock(lock){

    	locked = lock;
		//console.log("toggleLock");
		//console.log("locked:" + locked);
    	if(locked && $iCanLock){

			var edit = dijit.byId("editModeTab");
			var tabs = dijit.byId("mainTabContainer");
			if(tabs.selectedChildWidget.id==edit.id){
				editingPage();
			}
			else{
				tabs.selectChild(edit);
			}
			


    	}else{

			var preview = dijit.byId("previewModeTab");
			var tabs = dijit.byId("mainTabContainer");
			
			//console.log(tabs.selectedChildWidget.id)
			//console.log(preview.id)
			if(tabs.selectedChildWidget.id==preview.id){
				previewPage();
			}
			else{
				tabs.selectChild(preview);
			}

    	}
    }

	function changePreviewDevice(){
		if(dijit.byId("previewDeviceSelector")==undefined){
			return;
		}
		_previewDevice=dijit.byId("previewDeviceSelector").getValue();

		changeUrl();
	}
    
    
    dojo.ready(function(){

    	
    	
		html = dojo.byId("commonPageToolsTmpl").innerHTML;
		dojo.query(".commonPageTools").forEach(function(node, index, arr){
		    node.innerHTML = html
		});
		
		toggleLock(locked);
		getPersonaImage('$!{visitor.persona.inode}');

    })
    
    
    
    
    dojo.subscribe("mainTabContainer-selectChild", function(child){
		//console.log("tab selected child:" + child.id);
        if("previewModeTab" == child.id){
            previewPage();
        }
        else if("editModeTab" == child.id){
            editingPage();
        }
        else{
            livePage();
        }
    });

    
</script>
</head>

<body>

<!-- Start Frame Max-Min -->
    <div class="maxmin" id="min_bar" style="z-index:1000"
         onmouseover="this.style.backgroundColor='#cbe1f2'"
         onmouseout="this.style.backgroundColor='#0E80CB'"
         onclick="ToggleCollapse()"
         title="Expand pane">
         <span class="toggle"><</span>
    </div>
    <div class="maxmin" id="max_bar" style="z-index:1000"
         onmouseover="this.style.backgroundColor='#cbe1f2'"
         onmouseout="this.style.backgroundColor='#0E80CB'"
         title="Collapse pane"
         onclick="ToggleCollapse()">
         <span class="toggle">></span>
    </div>
<!-- END Frame Max-Min -->



<div id="main_window" class="portlet-main edit-mode__side-nav">

    <div id="mainTabContainer" dojoType="dijit.layout.TabContainer" dolayout="false">

            
    <!-- Edit Mode -->
      <div id="editModeTab" dojoType="dijit.layout.ContentPane" title="$languagewebapi.getFromUserLanguage("modes.Edit")" #if ($EDIT_MODE && $ADMIN_MODE) selected="true" #end>
           	<div class="content-edit-actions" id="lockedPageTools"></div>
    		<div class="content-edit-actions commonPageTools"></div>
        </div>

    <!-- /Edit Mode -->
            
            
    <!-- Preview Mode -->
        <div id="previewModeTab" dojoType="dijit.layout.ContentPane" title="$languagewebapi.getFromUserLanguage("modes.Preview")" #if ($PREVIEW_MODE && $ADMIN_MODE) selected="true" #end>
           
           	<div class="content-edit-actions" id="previewModeTools"></div>



    		#if($canViewDiff)
    			<div class="content-edit-actions">
    				<div>
    					<a href="javascript: viewDiff();">
    						<span class="redlineIcon"></span> $languagewebapi.getFromUserLanguage("modes.Whats-Changed")
    					</a>
    				</div>
    			</div>
    		#end

        	<div class="content-edit-actions commonPageTools"></div>
        </div>
    <!-- /Preview Mode -->




    <!-- Live Mode -->
        <div id="liveModeTab" dojoType="dijit.layout.ContentPane" title="$languagewebapi.getFromUserLanguage("modes.Live")" #if (!$EDIT_MODE && $ADMIN_MODE) selected="true" #end>
            <div class="content-edit-actions commonPageTools"></div>
        </div>
    <!-- /Live Mode -->



    </div>

    <div class="viewOptions">
    <!-- Start Languages -->
        #if($availablePageLangs.size() > 0)
            <div class="lang">

                <div id="combo_zone2">
                    <label>$languagewebapi.getFromUserLanguage("language")</label>
                    <input id="language_id"/>
                </div>

                  <script>

                      // http://jira.dotmarketing.net/browse/DOTCMS-6148
                      #set($myString="{identifier:'id',label:'label',items:[")
                      #set($first=true)
                      #foreach($displayedLang in $availablePageLangs)
                          #set($lang=$displayedLang.language)
                          #set($display="${lang.language} (${lang.countryCode})")
                          #if($first)
                            #set($first=false)
                          #else
                            #set($myString="${myString},")
                          #end
                          #set($myString="${myString}{id:'${lang.id}',")
                          #set($myString="${myString}value:'${lang.id}',")
                          #set($myString="${myString}lang:'${display}',")
                          #set($myString="${myString}label:'${display}'}")
                      #end
                      #set($myString="${myString}]}")

                        var storeData=${myString};
                        var langStore = new dojo.data.ItemFileReadStore({data: storeData});
                        var myselect = new dijit.form.FilteringSelect({
                                 id: "language_id",
                                 name: "language_id",
                                 value: '',
                                 required: true,
                                 store: langStore,
                                 searchAttr: "lang",
                                 labelAttr: "label",
                                 labelType: "html",
                                 onChange: function() {
                                     var el=dijit.byId('language_id');
                                     changeLanguage(el.item.value);
                                 },
                                 labelFunc: function(item, store) { return store.getValue(item, "label"); }
                            },
                            dojo.byId("language_id"));
                            myselect.setValue('${language}');

                </script>
            </div>
        #end
    <!-- End Languages -->

        #if($canViewDiff)
        	## Personas
        	<div id="personaInfo" class="personaWrapper" style="visibility:none;">
        		<label> $languagewebapi.getFromUserLanguage("modes.persona.select.persona") </label>
                <select name="personaSelector" id="personaSelector" dojoType="dijit.form.FilteringSelect" onchange="changePersona">
                    <option value="0:0">$languagewebapi.getFromUserLanguage("modes.persona.no.persona")</option>
                    #foreach($persona in $personatool.personas)
                        <option value="$persona.identifier:$persona.inode" #if($visitor.persona.identifier ==$persona.identifier ) selected #end  >$persona.name</option>
                    #end
                </select>
        		<div class="personaImageDiv">
        			<img id="personaImage" 
        			#if($visitor.persona.identifier) 
        				src="/contentAsset/image/${visitor.persona.identifier}/photo/filter/Thumbnail/thumbnail_w/100/thumbnail_h/100/photo" 
        			#else 
        				src="/html/images/shim.gif" 
        			#end 
        			class="personaImage" /> 
        			
        			
        			
        		</div>		
   
        	
        	#if($previewDevices && $previewDevices.size() > 0)
	        	<div style="border-top:0px;padding:10px 0px 10px 0px;text-align:center;">
				on a(n):
				</div>
				
				<select name="previewDeviceSelector" id="previewDeviceSelector" dojoType="dijit.form.FilteringSelect" onchange="changePreviewDevice">
					<option value="0">$languagewebapi.getFromUserLanguage("Desktop")</option>
					#foreach($device in $previewDevices)
						<option value="$device.identifier" #if($device.identifier =="$_previewDevice.identifier" ) selected #end  >$device.name</option>
					#end
				</select>
        	#end
        	</div>
        #end



    </div>

</div>

<div style="display:none">
<form action="${directorURL}" id="submitParent" method="post" target="_parent" >
    <input type="hidden" name="referer" id="referer" value="$referer">
    <input type="hidden" name="taskInode" id="taskInode" value="">
    <input type="hidden" name="cmd" id="cmd" value="addChild">
    <input type="hidden" name="container" id="container" value="">
    <input type="hidden" name="htmlPage" id="htmlPage" value="$htmlPageInode">
    <input type="hidden" name="htmlPageId" id="htmlPageId" value="$HTMLPAGE_IDENTIFIER">
    <input type="hidden" name="contentlet" id="contentlet" value="">
    <input type="hidden" name="selectedcontentlet" id="selectedcontentlet" value="">
    <input type="hidden" name="menuItem" id="menuItem" value="">
    <input type="hidden" name="level" id="level" value="">
    <input type="hidden" name="static" id="static" value="">
    <input type="hidden" name="course" id="course" value="">
    <input type="hidden" name="department" id="department" value="">
    <input type="hidden" name="package" id="package" value="">
    <input type="hidden" name="category" id="category" value="">
    <input type="hidden" name="parentFolder" id="parentFolder" value="">
    <input type="hidden" name="HTMLPageType" id="HTMLPageType" value="">
    <input type="hidden" name="language" id="language" value="$language">
     <input type="hidden" name="folder" id="folder" value="$dotPageContent.folder">
    
</form>
</div>






<!-- HTML Templates for the buttons for the different states -->


	<div id="commonPageToolsTmpl" style="display:none">
        <div>
    		<a href="javascript: editPageProperties();">
    			$languagewebapi.getFromUserLanguage("modes.Page-Properties")
    		</a>
    		<a href="javascript: viewStatistics();">
    			$languagewebapi.getFromUserLanguage("modes.Page-Statistics")
    		</a>
    	
    		#if($EDIT_TEMPLATE_PERMISSION)
    			<a href="javascript: editTemplate();">
    				$languagewebapi.getFromUserLanguage("modes.Edit-Template")
    			</a>
    		#else
    			<span class="disabled">
    				$languagewebapi.getFromUserLanguage("modes.Edit-Template")
    			</span>
    		#end
    	
    		<a href="javascript: addPage();">
    			$languagewebapi.getFromUserLanguage("modes.Create-New-Page")
    		</a>
    	</div>
    </div>






    <div id="lockedPageToolsTmpl" style="display:none">
        <div>
        	#if($iCanLock)
    			<a href="#" onclick="fireUnlockPage()">
    				<span class="unlockIcon"></span> $languagewebapi.getFromUserLanguage("Release-Lock")
    			</a>
    			#if(!$mandatory)
    	        	#if($PUBLISH_HTMLPAGE_PERMISSION)
    	                <a href="javascript: publishAll();">
    	                	<span class="publishIcon"></span> $languagewebapi.getFromUserLanguage("modes.Publish-Page")
    	                </a>
    	                #if($REMOTE_PUBLISH_HTMLPAGE_PERMISSION)
    	                    #if($REMOTE_PUBLISH_END_POINTS)
    	                        <a href="javascript: remotePublishCall();">
    	                            <span class="sServerIcon"></span> $languagewebapi.getFromUserLanguage("modes.Remote-Publish-Page")
    	                        </a>
    		                #end
    		                 <a href="javascript: addToBundleCall();">
    		                	<span class="bundleIcon"></span> $languagewebapi.getFromUserLanguage("modes.Add-To-Bundle-Page")
    		                </a>
    	                #end
    	            #end
    	        #end
    	           

    			#foreach($a in $wfActions)
    				#if($a.requiresCheckout())
    					#set($actionlets = $workflowtool.findActionClasses($a))
    					#set($hasPushPublishActionlet = false)
    					#foreach($actionlet in $actionlets)
    						#if($UtilMethods.isSet($actionlet.getActionlet()) && $actionlet.getActionlet().getClass().getName().contains("PushPublishActionlet"))
    							#set($hasPushPublishActionlet = true)
    						#end
    						
    					#end
    				
    					#set($popup = ($hasPushPublishActionlet || $a.isAssignable() || $a.isCommentable() || $UtilMethods.isSet($a.getCondition())))
                        #set($wfStep = $workflowtool.findStep($a.getStepId()) )
    				    #set($wfScheme = $workflowtool.findScheme( $wfStep.getSchemeId()))
    					<a href="#" onclick="parent.fireOffWorkflow('$a.id', $popup)">
    								<span class="$a.icon"></span>
    						$UtilMethods.escapeSingleQuotes($languagewebapi.getFromUserLanguage($a.getName())) <br/>
    						<small> ( $wfScheme.getName() ) </small>
    					</a>
    	
    				#end
    			#end
    		#else
    		 <span class="disabled">
    			<span class="lockIcon" style=""></span>
    			$UtilMethods.escapeSingleQuotes($languagewebapi.getFromUserLanguage("message.htmlpage.locked.page"))
    		</span>
    		#end
        </div>
	</div>
	
	
	
    <div id="unLockedPageToolsTmpl" style="display:none">
        <div>
    	    #if($iCanLock)
				<a id="lockBtn" href="#" onclick="fireLockPage()" >
					<span class="lockIcon"></span> $languagewebapi.getFromUserLanguage("Make-Editable")
				</a>
    			#if(!$mandatory)
    	        	#if($PUBLISH_HTMLPAGE_PERMISSION)
    	                <a href="javascript: publishAll();">
    	                	<span class="publishIcon"></span> $languagewebapi.getFromUserLanguage("modes.Publish-Page")
    	                </a>
    	                #if($REMOTE_PUBLISH_HTMLPAGE_PERMISSION)
    	                    #if($REMOTE_PUBLISH_END_POINTS)
    	                        <a href="javascript: remotePublishCall();">
    	                            <span class="sServerIcon"></span> $languagewebapi.getFromUserLanguage("modes.Remote-Publish-Page")
    	                        </a>
    		                #end
    		                 <a href="javascript: addToBundleCall();">
    		                	<span class="bundleIcon"></span> $languagewebapi.getFromUserLanguage("modes.Add-To-Bundle-Page")
    		                </a>
    	                #end
    	            #end
    	           #end
    	           
    			#foreach($a in $wfActions)
    				#if(!$a.requiresCheckout())
    					#set($actionlets = $workflowtool.findActionClasses($a))
    					#set($hasPushPublishActionlet = false)
    					#foreach($actionlet in $actionlets)
    						#if($UtilMethods.isSet($actionlet.getActionlet()) && $actionlet.getActionlet().getClass().getName().contains("PushPublishActionlet"))
    							#set($hasPushPublishActionlet = true)
    						#end
    						
    					#end
    				
    					#set($popup = ($hasPushPublishActionlet || $a.isAssignable() || $a.isCommentable() || $UtilMethods.isSet($a.getCondition())))
    				    #set($wfStep = $workflowtool.findStep($a.getStepId()) )
                        #set($wfScheme = $workflowtool.findScheme( $wfStep.getSchemeId()))

    					<a href="#" onclick="parent.fireOffWorkflow('$a.id', $popup)">
    						<span class="$a.icon"></span>
    							$UtilMethods.escapeSingleQuotes($text.get($a.getName())) <br/>
                                <small> ( $wfScheme.getName() ) </small>
    					</a>
    					
    				#end
    			#end
    		#else
        		 <span class="disabled">
        			<span class="lockIcon" style=""></span>
        			$UtilMethods.escapeSingleQuotes($languagewebapi.getFromUserLanguage("message.htmlpage.locked.page"))
        		</span>
    		#end
        </div>
	</div>












<iframe name="hidden_iframe" id="dot_keep_alive_hidden_iframe" style="position:absolute;top:-100px;width:0px; height:0px; border: 0px;"></iframe>

</body>
</html>















