#set($hasForm = true)

#if(!$UtilMethods.isSet($contentFormReferer))
	#set($contentFormReferer = "${VTLSERVLET_URI}")
#end

<script type="module" src="/dotcms-webcomponents/dotcms-webcomponents.esm.js"></script>
<script nomodule="" src="/dotcms-webcomponents/dotcms-webcomponents.js"></script>

<script>
    var tabCounterCalls = [];

    function addTabCounterCall(value) {
        tabCounterCalls.push(value);
    }
</script>


<link rel="stylesheet" href="/html/css/content/forms.css" type="text/css" media="screen" />
#if($UtilMethods.isSet($contentFormMacroCSS))
	<link rel="stylesheet" href="$contentFormMacroCSS" type="text/css" media="screen" />
#end

#if(!$UtilMethods.isSet("$!errorMessagesPath"))
	#set($errorMessagesPath = 'static/content/error_messages.vtl')
#end
#parse($errorMessagesPath)
#set($contentId='')
#set($contentIdentifier='')
#if($UtilMethods.isSet($contentletInode))
	#set($contentMap = $dotcontent.find($contentletInode))
#end
#if($UtilMethods.isSet($contentMap))
	#set($structure = $contentMap.getStructure())
	#set($contentId = $contentMap.get('inode'))
	#set($contentIdentifier = $contentMap.get('identifier'))				
#else
	#set($structure = $structures.findStructure($structureName))
#end

#if($action == 'editContent')
	#set($_hasEditPermissionOnContent = $contents.doesUserHasPermission($contentMap.get('inode'), 2))
	#set($_showField = false)
#else
	#set($_hasEditPermissionOnContent = true)
	#set($_showField = true)
#end

#if(!$UtilMethods.isSet($structure) || !$UtilMethods.isSet($structure.getInode()))
	#set($structure = $structures.findStructureByName($structureName))
#end

#set($fields = $structures.getFields($structure))
#set($options= "")
#set($lineDividerOpen = false)

#set($structureRelationShips = $structures.getStructureRelationShips($structure))
#if($UtilMethods.isSet($structureRelationShips) && $structureRelationShips.size() > 0)
	#foreach($relationship in $structureRelationShips)

		#set($temp = $render.eval($render.eval("\\$$relationship.getRelationTypeValue()")))

	    #if(("$!relationship.getParentStructure().inode" == "$structure.inode" && $relationship.isChildRequired()) || ("$!relationship.getChildStructure().inode" == "$structure.inode" && $relationship.isParentRequired()))

	    	#if($UtilMethods.isSet($temp) && $temp.indexOf("$relationship.getRelationTypeValue()") == -1)

	    	    #if("$!relationship.getChildStructure().inode" == "$structure.inode" && "$!relationship.getCardinality()"=="0" && $temp.indexOf(',') != -1)
	    	    	#set($options = "")
	    	    	#set($relationShipsError = "$!{relationShipsError} $text.getFromSessionLanguage('org.dotcms.frontend.content.submission.1.n.cardinality') ${relationship.getRelationTypeValue()} $text.getFromSessionLanguage('org.dotcms.frontend.content.submission.not.allow.multiple.parents')")
	    	    #else
	    			#set($options = "${options}${relationship.getRelationTypeValue()}=${temp};")
	    		#end
	    	#else
				#set($options = "")
	    	    #set($relationShipsError = "$!{relationShipsError} $text.getFromSessionLanguage('org.dotcms.frontend.content.submission.missing.relationship') ${relationship.getRelationTypeValue()}<br/>")
	    	#end
	    #else
	    	#if($UtilMethods.isSet($temp) && $temp.indexOf("$relationship.getRelationTypeValue()") == -1)
	    		#if("$!relationship.getChildStructure().inode" == "$structure.inode" && "$!relationship.getCardinality()"=="0" && $temp.indexOf(',') != -1)
	    	    	#set($options = "")
	    	    	#set($relationShipsError = "$!{relationShipsError} $text.getFromSessionLanguage('org.dotcms.frontend.content.submission.1.n.cardinality') ${relationship.getRelationTypeValue()} $text.getFromSessionLanguage('org.dotcms.frontend.content.submission.not.allow.multiple.parents')")
	    	    #else
	    			#set($options = "${options}${relationship.getRelationTypeValue()}=${temp};")
	    		#end
	    	#end
	    #end
	#end
#end

#if(!$UtilMethods.isSet($user) && $UtilMethods.isSet($cmsuser))
	#set($user = $cmsuser.getLoggedInUser($request))
#end

#if(!$UtilMethods.isSet("$!structure") || !$UtilMethods.isSet($structure.inode))

<div class="submitContent">
	<div class="formTop">&nbsp;</div>
	<div class="formBody">
		$text.getFromSessionLanguage('org.dotcms.frontend.content.submission.structure.dont.exists')
	</div>
</div>

#elseif($UtilMethods.isSet("$!relationShipsError"))

 <div class="submitContent">
	<div class="formTop">&nbsp;</div>
	<div class="formBody">
		$relationShipsError
	</div>
</div>

#elseif(($structures.haveEditPermision($structure, null) || ($UtilMethods.isSet($user) && $structures.haveEditPermision($structure, $user))) && $_hasEditPermissionOnContent)
    #set($formId = "form_" + $date.getSystemDate().getTime())

	<dot-form id="$formId" variable='${structure.velocityVarName}''></dot-form>
    <script type="text/javascript">
        document.getElementById('$formId').layout = $structures.getLayoutAsJson($structure, $user);
    </script>

#elseif($UtilMethods.isSet($user) && !$structures.haveEditPermision($structure, $user))
   <div class="submitContent">
		<div class="formTop">&nbsp;</div>
		<div class="formBody">
		   #if($contentNoPermissionsSource)
  				#dotParse($contentNoPermissionsSource)
   			#else
				$text.getFromSessionLanguage('org.dotcms.frontend.content.submission.not.proper.permissions')
			#end
		</div>
		<div style="clear:both"></div>
	</div>
#else
	<div class="submitContent">
		<div class="formTop">&nbsp;</div>
		<div class="formBody">
		   #if($contentLoginSource)
  				#dotParse($contentLoginSource)
   			#else
				$text.getFromSessionLanguage('org.dotcms.frontend.content.submission.login.message1') <a href="/dotCMS/login">$text.getFromSessionLanguage('org.dotcms.frontend.content.submission.login.message2')</a> $text.getFromSessionLanguage('org.dotcms.frontend.content.submission.login.message3') ${structure.name}.
			#end
			$session.setAttribute("REDIRECT_AFTER_LOGIN","${VTLSERVLET_URI}?$!{request.getQueryString()}")
		</div>
		<div style="clear:both"></div>
	</div>
#end

<script language="javascript">

	function checkTabFields(tab) {


	if("$firstTabName"==tab) {

	    #foreach($field in $fields)

    	    #if($field.fieldType == 'tab_divider' && !(($isDontShowFields && $stringsapi.MatchCommaSeparated($dontShowFields,$field.velocityVarName)) || $structures.isFieldConstant($field)))
			    }else if("${field.velocityVarName}Tab"==tab) {
			#else

				#if($field.isRequired())
					#set($customErrorMessages ="")
					#set($customErrorMessages = $submitcontenttool.getFieldVariableValue($structure.getVelocityVarName(), $field.velocityVarName, "errorFieldMessage"))
					#if(!$UtilMethods.isSet($customErrorMessages))
						#set($customErrorMessages ="")
					#else
					    #set($customErrorMessages = $text.get($customErrorMessages))
					#end

					#if("$field.getFieldType().toUpperCase()"=="TEXT")
						customErrorMessages["$field.velocityVarName"]="$customErrorMessages";
				    	#if($field.getFieldContentlet().indexOf('integer') != -1 || $field.getFieldContentlet().indexOf('float') != -1)
				    		if(!numberValid(document.getElementById("$field.velocityVarName"), "$field.fieldName")){
								return false;
							}
				    	#else
				    		requiredLength = (document.getElementById("$field.velocityVarName").getAttribute("requiredLength")!= undefined) ? document.getElementById("$field.velocityVarName").getAttribute("requiredLength") : 1;
			            	if(!lengthValid(document.getElementById("$field.velocityVarName"), requiredLength, "$field.fieldName")){
			                	return false;
			            	}
			         	#end
					#end

					#if("$field.getFieldType().toUpperCase()"=="CATEGORY")
						customErrorMessages["$field.velocityVarName"]="$customErrorMessages";
						if(!categoryValid("$field.velocityVarName", "$field.fieldName")){
			               	return false;
			            }
			        #end

					#if("$field.getFieldType().toUpperCase()"=="RADIO")
						customErrorMessages["$field.velocityVarName"]="$customErrorMessages";
						radios = eval("document.submitContentForm.${field.velocityVarName}");
			       		radiosLength = radios.length;
			       		if(!radioValid(radios,radiosLength,"$field.fieldName")){
			       			return false;
			       		}
					#end

					#if("$field.getFieldType().toUpperCase()"=="CHECKBOX")

						customErrorMessages["$field.velocityVarName"]="$customErrorMessages";
						checkboxes = eval("document.submitContentForm.${field.velocityVarName}");
			       		checkboxesLength = checkboxes.length;
					 	requiredNumber = ((checkboxesLength != undefined) && (checkboxes[0].getAttribute("requiredNumber")!= undefined)) ? checkboxes[0].getAttribute("requiredNumber") : 1;
			        	prettyText = "$field.fieldName";
			       		if(!checkboxValid(checkboxes,checkboxesLength,requiredNumber,prettyText)){
			       			return false;
			       		}
					#end

					#if("$field.getFieldType().toUpperCase()"=="WYSIWYG" || "$field.getFieldType().toUpperCase()"=="TEXTAREA")
						if(isWYSIWYGEnabled("$field.velocityVarName")){
				    		tinyMCE.triggerSave(false,false);
				    	}

						customErrorMessages["$field.velocityVarName"]="$customErrorMessages";
						requiredLength = (document.getElementById("$field.velocityVarName").getAttribute("requiredLength")!= undefined) ? document.getElementById("$field.velocityVarName").getAttribute("requiredLength") : 1;
						if(!lengthValidText(document.getElementById("$field.velocityVarName"), requiredLength , "$field.fieldName")){
							return false;
						}
					#end
					#if("$field.getFieldType().toUpperCase()"=="TAG")
						customErrorMessages["$field.velocityVarName"]="$customErrorMessages";
						requiredLength = (document.getElementById("tags").getAttribute("requiredLength")!= undefined) ? document.getElementById("$field.velocityVarName").getAttribute("requiredLength") : 1;
						if(!lengthValidText(document.getElementById("tags"), requiredLength , "$field.fieldName")){
							return false;
						}
					#end
					#if("$field.getFieldType().toUpperCase()"=="CATEGORY_TAB" || "$field.getFieldType().toUpperCase()"=="SELECT" || "$field.getFieldType().toUpperCase()"=="MULTI_SELECT")
						customErrorMessages["$field.velocityVarName"]="$customErrorMessages";
						if(!selectValid(dijit.byId("${field.velocityVarName}"), "$field.fieldName")){
			        		return false;
			        	}
					#end

					#if("$field.getFieldType().toUpperCase()"=="BINARY" || "$field.getFieldType().toUpperCase()"=="FILE" || "$field.getFieldType().toUpperCase()"=="IMAGE")
						customErrorMessages["$field.velocityVarName"]="$customErrorMessages";
						if(!fileValid(document.getElementById("$field.velocityVarName"),"$field.fieldName")){
							return false
						}
					#end
					#if("$field.getFieldType().toUpperCase()"=="CUSTOM_FIELD")
						customErrorMessages["$field.velocityVarName"]="$customErrorMessages";
						requiredLength = (document.getElementById("$field.velocityVarName").getAttribute("requiredLength")!= undefined) ? document.getElementById("$field.velocityVarName").getAttribute("requiredLength") : 1;
						if(!lengthValidCustomField(document.getElementById("$field.velocityVarName"), requiredLength , "$field.fieldName")){
							return false;
						}
					#end
					#if("$field.getFieldType().toUpperCase()"=="KEY_VALUE")
						customErrorMessages["$field.velocityVarName"]="$customErrorMessages";
						var ${field.velocityVarName}Empty = "$text.getFromSessionLanguage('org.dotcms.frontend.content.submission.keyval.empty')";
						if(document.getElementById("${fieldAux.velocityVarName}list").value == ${field.velocityVarName}Empty){
							if(customErrorMessages["$field.velocityVarName"] != "")
								document.getElementById("alert"+"${field.velocityVarName}").innerHTML = customErrorMessages["$field.velocityVarName"];
							else
								document.getElementById("alert"+"${field.velocityVarName}").innerHTML = ${field.velocityVarName}Empty;

							return false;
						}
					#end
				#end


				#if($UtilMethods.isSet($field.getRegexCheck()))

					#set($customErrorMessage = $secureformtool.getFieldVariableValue($structure.getVelocityVarName(), $field.velocityVarName, "errorFieldMessage"))
					#if($UtilMethods.isSet($customErrorMessage))
						customErrorMessages["$field.velocityVarName"]="$customErrorMessage";
						#set($customErrorMessage ="")
					#else
						customErrorMessages["$field.velocityVarName"]="";
					#end


					#set($regExp = $field.getRegexCheck())
					if("$!regExp" != ""){
						#if($regExp.equals("[^(<[.\n]+>)]*"))
							#set($regExp = $regExp.replaceAll("\(","").replaceAll("\)",""))
							if(!validateRegularExpresionNotHTML(document.getElementById("$field.velocityVarName"), "$UtilMethods.makeJavaSafe($regExp)", "$field.fieldName")){
							return false;
						}	
						#else
			       		if(!validateRegularExpresion(document.getElementById("$field.velocityVarName"), "$UtilMethods.makeJavaSafe($regExp)", "$field.fieldName")){
							return false;
						}

						#end	
					}
					
				#end
			#end
    	#end

    	#if($contentUseCaptcha || $contentUseAudioCaptcha)
    		 customErrorMessages["captcha"]="";
	    	if(!lengthValid(document.getElementById("captcha"), 1, "captcha")){
				return false;
			}
	    #end
    }


    return true;
}

    var captcha_audio_play;

	function playAudioCaptcha(){
		captcha_audio_play = document.getElementById('captcha-audio-play');
		captcha_audio_play.setAttribute("class","captcha-audio-playing");
		var rand=Math.floor(Math.random()*999999999);
		if(dojo.isIE){
			document.getElementById('captcha-audio').innerHTML = '<embed hidden="false" src="/audioCaptcha.wav?r=' + rand +'" id="captcha-sound" controller="false" width="0" height="0" autoplay="true" autostart="true" type="audio/wav" />';
		}else{
			document.getElementById('captcha-audio').innerHTML = '<audio hidden="false" src="/audioCaptcha.wav?r=' + rand +'" id="captcha-sound" controller="false" width="0" height="0" autoplay="true" autostart="true" type="audio/wav" />';
		}

		setTimeout(function(){
			captcha_audio_play.setAttribute("class","audio-play");
		},8000);

	}


	function resetCaptcha(){
		var rand=Math.floor(Math.random()*999999999)
		document.getElementById('captcha-image').innerHTML = "<img width='200' height='50'  src='/Captcha.jpg?r=" + rand + "'>";
	}

    function userLang() {
        return "$text.getFromSessionLanguage('org.dotcms.frontend.content.submission.does.not.comply.format')";
	}

</script>
