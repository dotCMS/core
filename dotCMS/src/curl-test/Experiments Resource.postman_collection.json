{
	"info": {
		"_postman_id": "69009bbf-a168-4d81-9d42-112e62d757c7",
		"name": "Experiments Resource",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1549189"
	},
	"item": [
		{
			"name": "Preconditions",
			"item": [
				{
					"name": "pre_ImportBundleWithPage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Bundle uploaded sucessfully\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData);",
									"",
									"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"page_experiment.tar.gz\");",
									"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Disposition",
								"type": "text",
								"value": "attachment"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "resources/Experiments/page_experiment.tar.gz"
								}
							]
						},
						"url": {
							"raw": "{{serverURL}}/api/bundle?sync=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle"
							],
							"query": [
								{
									"key": "sync",
									"value": "true"
								},
								{
									"key": "AUTH_TOKEN",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Imports a Bundle that includes:\n* A piece of content with a tag field without any tags selected"
					},
					"response": []
				},
				{
					"name": "pre_PublishPage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.json().entity.identifier).to.be.eq(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
									"    pm.expect(pm.response.json().entity.live).to.be.true;",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH?identifier=e424abd7e2e7a9031c5a0a3c18182f1b",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							],
							"query": [
								{
									"key": "identifier",
									"value": "e424abd7e2e7a9031c5a0a3c18182f1b"
								}
							]
						},
						"description": "Fire any action using the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here.\n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "pre_ImportBundleWithSecondPage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Bundle uploaded sucessfully\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData);",
									"",
									"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"second-experiment-page.tar.gz\");",
									"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Disposition",
								"type": "text",
								"value": "attachment"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "resources/Experiments/second-experiment-page.tar.gz"
								}
							]
						},
						"url": {
							"raw": "{{serverURL}}/api/bundle?sync=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle"
							],
							"query": [
								{
									"key": "sync",
									"value": "true"
								},
								{
									"key": "AUTH_TOKEN",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Imports a Bundle that includes:\n* A piece of content with a tag field without any tags selected"
					},
					"response": []
				},
				{
					"name": "pre_PublishSecondPage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.json().entity.identifier).to.be.eq(\"9044ec0fdb3788a814ccabf789f376d4\");",
									"    pm.expect(pm.response.json().entity.live).to.be.true;",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH?identifier=9044ec0fdb3788a814ccabf789f376d4",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							],
							"query": [
								{
									"key": "identifier",
									"value": "9044ec0fdb3788a814ccabf789f376d4"
								}
							]
						},
						"description": "Fire any action using the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here.\n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "GET Experiment",
			"item": [
				{
					"name": "pre_ImportBundleWithPage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Bundle uploaded sucessfully\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData);",
									"",
									"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"page_experiment.tar.gz\");",
									"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Disposition",
								"type": "text",
								"value": "attachment"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "resources/Experiments/page_experiment.tar.gz"
								}
							]
						},
						"url": {
							"raw": "{{serverURL}}/api/bundle?sync=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle"
							],
							"query": [
								{
									"key": "sync",
									"value": "true"
								},
								{
									"key": "AUTH_TOKEN",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Imports a Bundle that includes:\n* A piece of content with a tag field without any tags selected"
					},
					"response": []
				},
				{
					"name": "pre_PublishPage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.json().entity.identifier).to.be.eq(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
									"    pm.expect(pm.response.json().entity.live).to.be.true;",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH?identifier=e424abd7e2e7a9031c5a0a3c18182f1b",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							],
							"query": [
								{
									"key": "identifier",
									"value": "e424abd7e2e7a9031c5a0a3c18182f1b"
								}
							]
						},
						"description": "Fire any action using the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here.\n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "pre_createExperiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.set(\"experimentToAddVariant\", jsonData.entity.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "pre_addVariantToExperiment_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Variants with correct weight\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"My first Variant\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
									"    ",
									"    pm.collectionVariables.set(\"variantToDelete\", jsonData.entity.trafficProportion.variants[1].id);",
									"",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"My first Variant\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}/variants",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentToAddVariant}}",
								"variants"
							]
						}
					},
					"response": []
				},
				{
					"name": "pre_addSecondVariantToExperiment_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Variants with correct weight\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(3);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(33.333332);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"My first Variant\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(33.333332);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[2].name).equal(\"My second Variant\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[2].weight).equal(33.333332);",
									"",
									"    pm.collectionVariables.set(\"secondVariantId\", jsonData.entity.trafficProportion.variants[2].id);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"My second Variant\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}/variants",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentToAddVariant}}",
								"variants"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateExperimentStartAndEndDate_shoudSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Experiment should have the expected values\", function () {",
									"    pm.expect(jsonData.entity.description).equal(\"experiment with goals and variants\");",
									"    pm.expect(jsonData.entity.name).equal(\"20220901\");",
									"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
									"    pm.expect(jsonData.entity.modDate).is.not.null;",
									"    pm.expect(jsonData.entity.scheduling.startDate).to.equal(2608661952000);",
									"    pm.expect(jsonData.entity.scheduling.endDate).to.equal(2611340352000);",
									"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
									"    pm.expect(jsonData.entity.trafficAllocation).equal(100);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
									"",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"scheduling\": {\n    \"startDate\": \"2052-08-30T20:19:12Z\",\n    \"endDate\": \"2052-09-30T20:19:12Z\"\n}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentToAddVariant}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getExperimentById_existingId_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Experiment returns expected data\", function () {",
									"    var experiment = jsonData.entity;",
									"    pm.expect(experiment.description).to.be.eq(\"experiment with goals and variants\");",
									"    pm.expect(experiment.goals.primary.name).to.be.eq(\"Reach thank-you page\");",
									"    pm.expect(experiment.scheduling.startDate).to.be.not.null;",
									"    pm.expect(experiment.scheduling.endDate).to.be.not.null;",
									"});",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentToAddVariant}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getExperimentById_nonExistingId_Should404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Proper error message\", function () {",
									"    pm.expect(jsonData.error).contains(\"Experiment with id: sdfsd not found.\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/sdfsd",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"sdfsd"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Variants",
			"item": [
				{
					"name": "Keep Content after change Layout to a Specific Variant",
					"item": [
						{
							"name": "Create a Content Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"contentTypeId\", jsonData.entity[0].id);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultType\":false,\n    \"icon\":null,\n    \"fixed\":false,\n    \"system\":false,\n    \"clazz\":\"com.dotcms.contenttype.model.type.ImmutableSimpleContentType\",\n    \"description\":\"\",\n    \"host\":\"8a7d5e23-da1e-420a-b4f0-471e7da8ea2d\",\n    \"folder\":\"SYSTEM_FOLDER\",\n    \"name\":\"Keep Contentlet when after change layout\",\n    \"systemActionMappings\":{\"NEW\":\"\"},\n    \"workflow\":[\"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/contenttype",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"contenttype"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Field to Content Type",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"layout\":[\n        {\"divider\":{\n            \"clazz\":\"com.dotcms.contenttype.model.field.ImmutableRowField\",\n            \"contentTypeId\":\"{{contentTypeId}}\",\n            \"dataType\":\"SYSTEM\",\n            \"fieldContentTypeProperties\":[],\n            \"fieldType\":\"Row\",\n            \"fieldTypeLabel\":\"Row\",\n            \"fieldVariables\":[],\n            \"fixed\":false,\n            \"iDate\":1667572217000,\n            \"indexed\":false,\n            \"listed\":false,\n            \"modDate\":1667572217000,\n            \"name\":\"Row Field\",\n            \"readOnly\":false,\n            \"required\":false,\n            \"searchable\":false,\n            \"sortOrder\":-1,\n            \"unique\":false},\n            \"columns\":[\n                {\n                    \"columnDivider\":{\n                        \"clazz\":\"com.dotcms.contenttype.model.field.ImmutableColumnField\",\n                        \"contentTypeId\":\"{{contentTypeId}}\",\n                        \"dataType\":\"SYSTEM\",\n                        \"fieldContentTypeProperties\":[],\n                        \"fieldType\":\"Column\",\n                        \"fieldTypeLabel\":\"Column\",\n                        \"fieldVariables\":[],\n                        \"fixed\":false,\n                        \"iDate\":1667572217000,\n                        \"indexed\":false,\n                        \"listed\":false,\n                        \"modDate\":1667572217000,\n                        \"name\":\"Column Field\",\n                        \"readOnly\":false,\n                        \"required\":false,\n                        \"searchable\":false,\n                        \"sortOrder\":-1,\n                        \"unique\":false\n                    },\n                    \"fields\":[\n                        {\n                            \"clazz\":\"com.dotcms.contenttype.model.field.ImmutableTextField\",\n                            \"name\":\"title\",\n                            \"dataType\":\"TEXT\",\n                            \"regexCheck\":\"\",\n                            \"defaultValue\":\"\",\n                            \"hint\":\"\",\n                            \"required\":false,\n                            \"searchable\":false,\n                            \"indexed\":false,\n                            \"listed\":false,\n                            \"unique\":false,\n                            \"id\":null\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v3/contenttype/{{contentTypeId}}/fields/move",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v3",
										"contenttype",
										"{{contentTypeId}}",
										"fields",
										"move"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Container",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"keep_content_container_id\", jsonData.entity.identifier);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"container_keep_content_after_change_layout\",\n    \"friendlyName\": \"container_keep_content_after_change_layout\",\n    \"maxContentlets\": 1,\n    \"containerStructures\": [{\n        \"structureId\": \"{{contentTypeId}}\",\n        \"maxContentlets\": 1,\n        \"code\": \"$!{dotContentMap.title}\"\n    }]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/containers",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"containers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Template",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"keep_contents_template_id\", jsonData.entity.identifier);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\t\t\n    \"layout\":{\n        \"body\":{\n            \"rows\":[\n                {\n                    \"styleClass\":\"\",\n                    \"columns\":[\n                        {\n                            \"styleClass\":\"\",\n                            \"leftOffset\":1,\n                            \"width\":12,\n                            \"containers\":[\n                                {\"identifier\":\"{{keep_content_container_id}}\"}\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }    \n    },\n    \"friendlyName\": \"\",\n    \"title\": \"page_version_keep_containers_template\",\n    \"theme\": \"SYSTEM_THEME\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/templates",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"templates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pubish Templates",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{keep_contents_template_id}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/templates/_publish",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"templates",
										"_publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create page 1 And Publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"page_version_keep_contentlet\", jsonData.entity.identifier);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \n    \"contentlet\" : {\n        \"title\" : \"page_version_keep_contentlet_after_change_layout\",\n        \"languageId\" : 1,\n        \"stInode\": \"c541abb1-69b3-4bc5-8430-5e09e5239cc8\",\n        \"url\": \"page_version_keep_contentlet_after_change_layout\",\n        \"hostFolder\": \"8a7d5e23-da1e-420a-b4f0-471e7da8ea2d\",\n        \"template\": \"{{keep_contents_template_id}}\",\n        \"cachettl\": 0,\n        \"friendlyName\": \"friendlyName\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"workflow",
										"actions",
										"default",
										"fire",
										"PUBLISH"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create contentlet_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"content1_id\", jsonData.entity.identifier);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \n    \"contentlet\" : {\n        \"title\" : \"content_1\",\n        \"languageId\" : 1,\n        \"stInode\": \"{{contentTypeId}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"workflow",
										"actions",
										"default",
										"fire",
										"PUBLISH"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create contentlet_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"content2_id\", jsonData.entity.identifier);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \n    \"contentlet\" : {\n        \"title\" : \"content_2\",\n        \"languageId\" : 1,\n        \"stInode\": \"{{contentTypeId}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"workflow",
										"actions",
										"default",
										"fire",
										"PUBLISH"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add contetlet into DEFAULT variant",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Variants with correct weight\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n    \"contentletsId\": [\"{{content1_id}}\"],\n    \"identifier\": \"{{keep_content_container_id}}\",\n    \"uuid\": \"1\" \n    }   \n]\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/page/{{page_version_keep_contentlet}}/content",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"page",
										"{{page_version_keep_contentlet}}",
										"content"
									]
								}
							},
							"response": []
						},
						{
							"name": "Render Page 1 IN PREVIEW MODE after create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonBody = JSON.parse(jsonData.entity.template.drawedBody);",
											"var containerId = pm.collectionVariables.get(\"keep_content_container_id\");",
											"",
											"pm.expect(jsonBody.body.rows[0].columns[0].width).to.equal(12);",
											"pm.expect(jsonBody.body.rows[0].columns[0].containers[0].identifier).to.equal(containerId);",
											"",
											"var render = jsonData.entity.containers[containerId].rendered['uuid-1'];",
											"",
											"pm.expect(\"content_1\").to.equal(render);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{serverURL}}/api/v1/page/render/page_version_keep_contentlet_after_change_layout?host_id=8a7d5e23-da1e-420a-b4f0-471e7da8ea2d&language_id=1&mode=PREVIEW_MODE",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"page",
										"render",
										"page_version_keep_contentlet_after_change_layout"
									],
									"query": [
										{
											"key": "host_id",
											"value": "8a7d5e23-da1e-420a-b4f0-471e7da8ea2d"
										},
										{
											"key": "language_id",
											"value": "1"
										},
										{
											"key": "mode",
											"value": "PREVIEW_MODE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createDraftExperiment_shoudSucceed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"experimentId\", jsonData.entity.id);",
											"pm.collectionVariables.set(\"experimentShortId\", jsonData.entity.id.substring(0, 11).replace('-', ''));",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pageId\": \"{{page_version_keep_contentlet}}\",\n    \"name\": \"Keep Contentlet after Layout Change\",\n    \"description\": \"\" \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										""
									]
								},
								"description": "Create a new Experiment named \"Add/Remove content Experiment\" with the page created in the previous request."
							},
							"response": []
						},
						{
							"name": "addVariantToExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Variants with correct weight\", function () {",
											"    pm.response.to.have.status(200);",
											"",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Variant to Keep Contentlet after Change Layout\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}/variants",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentId}}",
										"variants"
									]
								},
								"description": "Create a new variant into the previous created experiment"
							},
							"response": []
						},
						{
							"name": "Add Contentlet into a specific variant",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Variants with correct weight\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n    \"contentletsId\": [\"{{content2_id}}\"],\n    \"identifier\": \"{{keep_content_container_id}}\",\n    \"uuid\": \"1\" \n    }   \n]\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/page/{{page_version_keep_contentlet}}/content?variantName=dotexperiment-{{experimentShortId}}-variant-1",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"page",
										"{{page_version_keep_contentlet}}",
										"content"
									],
									"query": [
										{
											"key": "variantName",
											"value": "dotexperiment-{{experimentShortId}}-variant-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Render Page 1 IN PREVIEW MODE after create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonBody = JSON.parse(jsonData.entity.template.drawedBody);",
											"var containerId = pm.collectionVariables.get(\"keep_content_container_id\");",
											"",
											"pm.expect(jsonBody.body.rows[0].columns[0].width).to.equal(12);",
											"pm.expect(jsonBody.body.rows[0].columns[0].containers[0].identifier).to.equal(containerId);",
											"",
											"var render = jsonData.entity.containers[containerId].rendered['uuid-1'];",
											"",
											"pm.expect(\"content_2\").to.equal(render);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{serverURL}}/api/v1/page/render/page_version_keep_contentlet_after_change_layout?host_id=8a7d5e23-da1e-420a-b4f0-471e7da8ea2d&language_id=1&mode=PREVIEW_MODE&variantName=dotexperiment-{{experimentShortId}}-variant-1",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"page",
										"render",
										"page_version_keep_contentlet_after_change_layout"
									],
									"query": [
										{
											"key": "host_id",
											"value": "8a7d5e23-da1e-420a-b4f0-471e7da8ea2d"
										},
										{
											"key": "language_id",
											"value": "1"
										},
										{
											"key": "mode",
											"value": "PREVIEW_MODE"
										},
										{
											"key": "variantName",
											"value": "dotexperiment-{{experimentShortId}}-variant-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Page 2 Layout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\t\t\n    \"layout\":{\n        \"body\":{\n            \"rows\":[\n                {\n                    \"styleClass\":\"\",\n                    \"columns\":[\n                        {\n                            \"styleClass\":\"\",\n                            \"leftOffset\":1,\n                            \"width\":1,\n                            \"containers\":[\n                                {\"identifier\":\"{{keep_content_container_id}}\"}\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }    \n    },\n    \"themeId\": \"SYSTEM_THEME\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/page/{{page_version_keep_contentlet}}/layout?variantName=dotexperiment-{{experimentShortId}}-variant-1",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"page",
										"{{page_version_keep_contentlet}}",
										"layout"
									],
									"query": [
										{
											"key": "variantName",
											"value": "dotexperiment-{{experimentShortId}}-variant-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Render Page Variant/PREVIEW",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonBody = JSON.parse(jsonData.entity.template.drawedBody);",
											"var containerId = pm.collectionVariables.get(\"keep_content_container_id\");",
											"",
											"pm.expect(jsonBody.body.rows[0].columns[0].width).to.equal(1);",
											"pm.expect(jsonBody.body.rows[0].columns[0].containers[0].identifier).to.equal(containerId);",
											"",
											"var render = jsonData.entity.containers[containerId].rendered['uuid-1'];",
											"",
											"pm.expect(\"content_2\").to.equal(render);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{serverURL}}/api/v1/page/render/page_version_keep_contentlet_after_change_layout?host_id=8a7d5e23-da1e-420a-b4f0-471e7da8ea2d&language_id=1&mode=PREVIEW_MODE&variantName=dotexperiment-{{experimentShortId}}-variant-1",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"page",
										"render",
										"page_version_keep_contentlet_after_change_layout"
									],
									"query": [
										{
											"key": "host_id",
											"value": "8a7d5e23-da1e-420a-b4f0-471e7da8ea2d"
										},
										{
											"key": "language_id",
											"value": "1"
										},
										{
											"key": "mode",
											"value": "PREVIEW_MODE"
										},
										{
											"key": "variantName",
											"value": "dotexperiment-{{experimentShortId}}-variant-1"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "Steps:\n\n1. Create one drawed Templates with:\n    \n\nName: should_have_same_template_to_LIVE_and_working_1\n\nBody: Add the SYSTEM_CONTAINER with a with of 12\n\nPublish it.\n\n2\\. Create a Page with DEFAULT lang and using the \"should_have_same_template_to_LIVE_and_working_1\" template\n\n3\\. Render the Page in LIVE and PREVIEW MODE and check that the layout have the SYSTEM_CONTAINER with a width of 12.\n\n4\\. Change the page's Template to \"should_have_same_template_to_LIVE_and_working_2\" and just save.\n\n6\\. Render both Page version and check that now the results is \"Template 2\" for both."
				},
				{
					"name": "Add Contentlet on Default Variant after A Specific Variant exists",
					"item": [
						{
							"name": "Create a Content Type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"contentTypeId\", jsonData.entity[0].id);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"defaultType\":false,\n    \"icon\":null,\n    \"fixed\":false,\n    \"system\":false,\n    \"clazz\":\"com.dotcms.contenttype.model.type.ImmutableSimpleContentType\",\n    \"description\":\"\",\n    \"host\":\"8a7d5e23-da1e-420a-b4f0-471e7da8ea2d\",\n    \"folder\":\"SYSTEM_FOLDER\",\n    \"name\":\"Add Contentlet Specific/Default Variant\",\n    \"systemActionMappings\":{\"NEW\":\"\"},\n    \"workflow\":[\"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\"]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/contenttype",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"contenttype"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Field to Content Type",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"layout\":[\n        {\"divider\":{\n            \"clazz\":\"com.dotcms.contenttype.model.field.ImmutableRowField\",\n            \"contentTypeId\":\"{{contentTypeId}}\",\n            \"dataType\":\"SYSTEM\",\n            \"fieldContentTypeProperties\":[],\n            \"fieldType\":\"Row\",\n            \"fieldTypeLabel\":\"Row\",\n            \"fieldVariables\":[],\n            \"fixed\":false,\n            \"iDate\":1667572217000,\n            \"indexed\":false,\n            \"listed\":false,\n            \"modDate\":1667572217000,\n            \"name\":\"Row Field\",\n            \"readOnly\":false,\n            \"required\":false,\n            \"searchable\":false,\n            \"sortOrder\":-1,\n            \"unique\":false},\n            \"columns\":[\n                {\n                    \"columnDivider\":{\n                        \"clazz\":\"com.dotcms.contenttype.model.field.ImmutableColumnField\",\n                        \"contentTypeId\":\"{{contentTypeId}}\",\n                        \"dataType\":\"SYSTEM\",\n                        \"fieldContentTypeProperties\":[],\n                        \"fieldType\":\"Column\",\n                        \"fieldTypeLabel\":\"Column\",\n                        \"fieldVariables\":[],\n                        \"fixed\":false,\n                        \"iDate\":1667572217000,\n                        \"indexed\":false,\n                        \"listed\":false,\n                        \"modDate\":1667572217000,\n                        \"name\":\"Column Field\",\n                        \"readOnly\":false,\n                        \"required\":false,\n                        \"searchable\":false,\n                        \"sortOrder\":-1,\n                        \"unique\":false\n                    },\n                    \"fields\":[\n                        {\n                            \"clazz\":\"com.dotcms.contenttype.model.field.ImmutableTextField\",\n                            \"name\":\"title\",\n                            \"dataType\":\"TEXT\",\n                            \"regexCheck\":\"\",\n                            \"defaultValue\":\"\",\n                            \"hint\":\"\",\n                            \"required\":false,\n                            \"searchable\":false,\n                            \"indexed\":false,\n                            \"listed\":false,\n                            \"unique\":false,\n                            \"id\":null\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v3/contenttype/{{contentTypeId}}/fields/move",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v3",
										"contenttype",
										"{{contentTypeId}}",
										"fields",
										"move"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Container",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"add_contentlet_default_specific_variant_container_id\", jsonData.entity.identifier);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"title\": \"add_contentlet_default_specific_variant_container\",\n    \"friendlyName\": \"Container to test When COntentlet are add to Default Variant after another Variant exists\",\n    \"maxContentlets\": 1,\n    \"containerStructures\": [{\n        \"structureId\": \"{{contentTypeId}}\",\n        \"maxContentlets\": 1,\n        \"code\": \"$!{dotContentMap.title}\"\n    }]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/containers",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"containers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Template",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"add_contentlet_default_specific_variant_template\", jsonData.entity.identifier);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\t\t\n    \"layout\":{\n        \"body\":{\n            \"rows\":[\n                {\n                    \"styleClass\":\"\",\n                    \"columns\":[\n                        {\n                            \"styleClass\":\"\",\n                            \"leftOffset\":1,\n                            \"width\":12,\n                            \"containers\":[\n                                {\"identifier\":\"{{add_contentlet_default_specific_variant_container_id}}\"}\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }    \n    },\n    \"friendlyName\": \"\",\n    \"title\": \"add_contentlet_default_specific_variant_template\",\n    \"theme\": \"SYSTEM_THEME\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/templates",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"templates"
									]
								}
							},
							"response": []
						},
						{
							"name": "Pubish Templates",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\"{{add_contentlet_default_specific_variant_template}}\"]",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/templates/_publish",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"templates",
										"_publish"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create page 1 And Publish",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"add_contentlet_default_specific_variant_page_id\", jsonData.entity.identifier);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \n    \"contentlet\" : {\n        \"title\" : \"add_contentlet_default_specific_variant_page\",\n        \"languageId\" : 1,\n        \"stInode\": \"c541abb1-69b3-4bc5-8430-5e09e5239cc8\",\n        \"url\": \"add_contentlet_default_specific_variant_page\",\n        \"hostFolder\": \"8a7d5e23-da1e-420a-b4f0-471e7da8ea2d\",\n        \"template\": \"{{add_contentlet_default_specific_variant_template}}\",\n        \"cachettl\": 0,\n        \"friendlyName\": \"friendlyName\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"workflow",
										"actions",
										"default",
										"fire",
										"PUBLISH"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create contentlet_1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"content1_id\", jsonData.entity.identifier);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \n    \"contentlet\" : {\n        \"title\" : \"content_1\",\n        \"languageId\" : 1,\n        \"stInode\": \"{{contentTypeId}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"workflow",
										"actions",
										"default",
										"fire",
										"PUBLISH"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create contentlet_2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"content2_id\", jsonData.entity.identifier);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{ \n    \"contentlet\" : {\n        \"title\" : \"content_2\",\n        \"languageId\" : 1,\n        \"stInode\": \"{{contentTypeId}}\"\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"workflow",
										"actions",
										"default",
										"fire",
										"PUBLISH"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add contetlet into DEFAULT variant",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Variants with correct weight\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n    \"contentletsId\": [\"{{content1_id}}\"],\n    \"identifier\": \"{{add_contentlet_default_specific_variant_container_id}}\",\n    \"uuid\": \"1\" \n    }   \n]\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/page/{{add_contentlet_default_specific_variant_page_id}}/content",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"page",
										"{{add_contentlet_default_specific_variant_page_id}}",
										"content"
									]
								}
							},
							"response": []
						},
						{
							"name": "Render Page DEFAULT/PREVIEW MODE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonBody = JSON.parse(jsonData.entity.template.drawedBody);",
											"var containerId = pm.collectionVariables.get(\"add_contentlet_default_specific_variant_container_id\");",
											"",
											"pm.expect(jsonBody.body.rows[0].columns[0].width).to.equal(12);",
											"pm.expect(jsonBody.body.rows[0].columns[0].containers[0].identifier).to.equal(containerId);",
											"",
											"var render = jsonData.entity.containers[containerId].rendered['uuid-1'];",
											"",
											"pm.expect(\"content_1\").to.equal(render);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{serverURL}}/api/v1/page/render/add_contentlet_default_specific_variant_page?host_id=8a7d5e23-da1e-420a-b4f0-471e7da8ea2d&language_id=1&mode=PREVIEW_MODE",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"page",
										"render",
										"add_contentlet_default_specific_variant_page"
									],
									"query": [
										{
											"key": "host_id",
											"value": "8a7d5e23-da1e-420a-b4f0-471e7da8ea2d"
										},
										{
											"key": "language_id",
											"value": "1"
										},
										{
											"key": "mode",
											"value": "PREVIEW_MODE"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "createDraftExperiment_shoudSucceed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"experimentId\", jsonData.entity.id);",
											"pm.collectionVariables.set(\"experimentShortId\", jsonData.entity.id.substring(0, 11).replace('-', ''));",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pageId\": \"{{add_contentlet_default_specific_variant_page_id}}\",\n    \"name\": \"Experiment Add Contentlet on DEFAULT Variant after Specific Variant exists\",\n    \"description\": \"\" \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										""
									]
								},
								"description": "Create a new Experiment named \"Add/Remove content Experiment\" with the page created in the previous request."
							},
							"response": []
						},
						{
							"name": "addVariantToExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Variants with correct weight\", function () {",
											"    pm.response.to.have.status(200);",
											"",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Variant to Test Add COntentlet after a Variant Exists\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}/variants",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentId}}",
										"variants"
									]
								},
								"description": "Create a new variant into the previous created experiment"
							},
							"response": []
						},
						{
							"name": "Render Page Variant/Preview Mode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonBody = JSON.parse(jsonData.entity.template.drawedBody);",
											"var containerId = pm.collectionVariables.get(\"add_contentlet_default_specific_variant_container_id\");",
											"",
											"pm.expect(jsonBody.body.rows[0].columns[0].width).to.equal(12);",
											"pm.expect(jsonBody.body.rows[0].columns[0].containers[0].identifier).to.equal(containerId);",
											"",
											"var render = jsonData.entity.containers[containerId].rendered['uuid-1'];",
											"",
											"pm.expect(\"content_1\").to.equal(render);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{serverURL}}/api/v1/page/render/add_contentlet_default_specific_variant_page?host_id=8a7d5e23-da1e-420a-b4f0-471e7da8ea2d&language_id=1&mode=PREVIEW_MODE&variantName=dotexperiment-{{experimentShortId}}-variant-1",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"page",
										"render",
										"add_contentlet_default_specific_variant_page"
									],
									"query": [
										{
											"key": "host_id",
											"value": "8a7d5e23-da1e-420a-b4f0-471e7da8ea2d"
										},
										{
											"key": "language_id",
											"value": "1"
										},
										{
											"key": "mode",
											"value": "PREVIEW_MODE"
										},
										{
											"key": "variantName",
											"value": "dotexperiment-{{experimentShortId}}-variant-1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Another Contentlet into a DEFAULTvariant",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Variants with correct weight\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n    \"contentletsId\": [\"{{content1_id}}\", \"{{content2_id}}\"],\n    \"identifier\": \"{{add_contentlet_default_specific_variant_container_id}}\",\n    \"uuid\": \"1\" \n    }   \n]\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/page/{{add_contentlet_default_specific_variant_page_id}}/content",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"page",
										"{{add_contentlet_default_specific_variant_page_id}}",
										"content"
									]
								}
							},
							"response": []
						},
						{
							"name": "Render Page Variant/Preview Mode",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonBody = JSON.parse(jsonData.entity.template.drawedBody);",
											"var containerId = pm.collectionVariables.get(\"add_contentlet_default_specific_variant_container_id\");",
											"",
											"pm.expect(jsonBody.body.rows[0].columns[0].width).to.equal(12);",
											"pm.expect(jsonBody.body.rows[0].columns[0].containers[0].identifier).to.equal(containerId);",
											"",
											"var render = jsonData.entity.containers[containerId].rendered['uuid-1'];",
											"",
											"pm.expect(\"content_1content_2\").to.equal(render);",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{serverURL}}/api/v1/page/render/add_contentlet_default_specific_variant_page?host_id=8a7d5e23-da1e-420a-b4f0-471e7da8ea2d&language_id=1&mode=PREVIEW_MODE&variantName=dotexperiment-{{experimentShortId}}-variant-1",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"page",
										"render",
										"add_contentlet_default_specific_variant_page"
									],
									"query": [
										{
											"key": "host_id",
											"value": "8a7d5e23-da1e-420a-b4f0-471e7da8ea2d"
										},
										{
											"key": "language_id",
											"value": "1"
										},
										{
											"key": "mode",
											"value": "PREVIEW_MODE"
										},
										{
											"key": "variantName",
											"value": "dotexperiment-{{experimentShortId}}-variant-1"
										}
									]
								}
							},
							"response": []
						}
					],
					"description": "Steps:\n\n1. Create one drawed Templates with:\n    \n\nName: should_have_same_template_to_LIVE_and_working_1\n\nBody: Add the SYSTEM_CONTAINER with a with of 12\n\nPublish it.\n\n2\\. Create a Page with DEFAULT lang and using the \"should_have_same_template_to_LIVE_and_working_1\" template\n\n3\\. Render the Page in LIVE and PREVIEW MODE and check that the layout have the SYSTEM_CONTAINER with a width of 12.\n\n4\\. Change the page's Template to \"should_have_same_template_to_LIVE_and_working_2\" and just save.\n\n6\\. Render both Page version and check that now the results is \"Template 2\" for both."
				},
				{
					"name": "Set Bounce_Rate Goal",
					"item": [
						{
							"name": "Create Experiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"bounceRateExperimentId\", jsonData.entity.id);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"Bounce Rate experiment\",\n    \"description\": \"Bounce Rate experiment description\" \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "setExperimentGoal_shoudSucceed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.goals.primary.type).equal(\"BOUNCE_RATE\");",
											"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Bounce rate Goal\");",
											"  ",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Bounce rate Goal\",\n            \"type\": \"BOUNCE_RATE\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{bounceRateExperimentId}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{bounceRateExperimentId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "pre_ImportBundleWithPage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Bundle uploaded sucessfully\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData);",
									"",
									"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"page_experiment.tar.gz\");",
									"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Disposition",
								"type": "text",
								"value": "attachment"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "resources/Experiments/page_experiment.tar.gz"
								}
							]
						},
						"url": {
							"raw": "{{serverURL}}/api/bundle?sync=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle"
							],
							"query": [
								{
									"key": "sync",
									"value": "true"
								},
								{
									"key": "AUTH_TOKEN",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Imports a Bundle that includes:\n* A piece of content with a tag field without any tags selected"
					},
					"response": []
				},
				{
					"name": "pre_createExperiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.set(\"variantExperiment\", jsonData.entity.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "pre_addVariantToExperiment_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Variants with correct weight\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"My first Variant\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
									"    ",
									"    pm.collectionVariables.set(\"originalVariant\", jsonData.entity.trafficProportion.variants[0].id);",
									"    pm.collectionVariables.set(\"variantToEdit\", jsonData.entity.trafficProportion.variants[1].id);",
									"",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"My first Variant\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{variantExperiment}}/variants",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{variantExperiment}}",
								"variants"
							]
						}
					},
					"response": []
				},
				{
					"name": "editVariantDescription_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Variants with correct weight\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"Updated variant description\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Updated variant description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{variantExperiment}}/variants/{{variantToEdit}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{variantExperiment}}",
								"variants",
								"{{variantToEdit}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "editVariantDescription_OriginalVariant_shouldFail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Cannot update Original Variant\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.expect(jsonData.message).equal(\"Invalid Variant provided\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Updated variant description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{variantExperiment}}/variants/{{originalVariant}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{variantExperiment}}",
								"variants",
								"{{originalVariant}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "pre_createExperiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.set(\"experimentToAddVariant\", jsonData.entity.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"9044ec0fdb3788a814ccabf789f376d4\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "addVariantToExperiment_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Variants with correct weight\", function () {",
									"    var experimetnShortId = pm.collectionVariables.get(\"experimentToAddVariant\").substring(0, 11).replace('-', '');",
									"",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].url).equal(\"/another-experiment-page?variantName=DEFAULT\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"My first Variant\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].url).equal(\"/another-experiment-page?variantName=dotexperiment-\" + experimetnShortId + \"-variant-1\");",
									"    ",
									"    pm.collectionVariables.set(\"variantToDelete\", jsonData.entity.trafficProportion.variants[1].id);",
									"",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"My first Variant\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}/variants",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentToAddVariant}}",
								"variants"
							]
						}
					},
					"response": []
				},
				{
					"name": "addSecondVariantToExperiment_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Variants with correct weight\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(3);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(33.333332);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"My first Variant\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(33.333332);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[2].name).equal(\"My second Variant\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[2].weight).equal(33.333332);",
									"",
									"    pm.collectionVariables.set(\"secondVariantId\", jsonData.entity.trafficProportion.variants[2].id);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"My second Variant\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}/variants",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentToAddVariant}}",
								"variants"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteVariantOfExperiment_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Started Experiment with expected values\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"My second Variant\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}/variants/{{variantToDelete}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentToAddVariant}}",
								"variants",
								"{{variantToDelete}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateExperimentTrafficProportion_shoudSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Variants with correct weight\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"CUSTOM_PERCENTAGES\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(80.0);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"Variant 2\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(20.0);",
									"",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"trafficProportion\": {\n        \"type\": \"CUSTOM_PERCENTAGES\",\n        \"variants\": [\n            {\n                \"name\": \"Original\",\n                \"id\": \"DEFAULT\",\n                \"weight\": 80\n            },\n            {\n                \"name\": \"Variant 2\",\n                \"id\": \"{{secondVariantId}}\",\n                \"weight\": 20\n            }\n        ]\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentToAddVariant}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "addVariantToExperiment_CustomPercentages_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Variants with correct weight\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"CUSTOM_PERCENTAGES\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(3);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(80.0);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"My third Variant\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(0.0);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[2].name).equal(\"Variant 2\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[2].weight).equal(20.0);",
									"",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"My third Variant\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}/variants",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentToAddVariant}}",
								"variants"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteOriginalVariant_shouldFail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Started Experiment with expected values\", function () {",
									"    pm.response.to.have.status(405);",
									"    pm.expect(jsonData.message).equal(\"Cannot delete Original Variant\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}/variants/DEFAULT",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentToAddVariant}}",
								"variants",
								"DEFAULT"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST Experiment",
			"item": [
				{
					"name": "createExperiment_shoudSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Experiment should have the expected values\", function () {",
									"    pm.expect(jsonData.entity.description).equal(\"my experiment description\");",
									"    pm.expect(jsonData.entity.name).equal(\"my experiment\");",
									"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
									"    pm.expect(jsonData.entity.modDate).is.not.null;",
									"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
									"    pm.expect(jsonData.entity.trafficAllocation).equal(100.0);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
									"});",
									"",
									"pm.collectionVariables.set(\"experimentId\", jsonData.entity.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"my experiment\",\n    \"description\": \"my experiment description\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "createExperimentNoDescription_shoudSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Experiment should have the expected values\", function () {",
									"    pm.expect(jsonData.entity.description).equal(\"\");",
									"    pm.expect(jsonData.entity.name).equal(\"my experiment\");",
									"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
									"    pm.expect(jsonData.entity.modDate).is.not.null;",
									"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
									"    pm.expect(jsonData.entity.trafficAllocation).equal(100.0);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"my experiment\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PATCH Experiment",
			"item": [
				{
					"name": "Update Name and Description",
					"item": [
						{
							"name": "updateExperimentNameAndDesc_shoudSucceed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.description).equal(\"my patched experiment description\");",
											"    pm.expect(jsonData.entity.name).equal(\"my patched experiment\");",
											"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
											"    pm.expect(jsonData.entity.modDate).is.not.null;",
											"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
											"    pm.expect(jsonData.entity.trafficAllocation).equal(100.0);",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"my patched experiment\",\n    \"description\": \"my patched experiment description\" \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update Traffic Allocation",
					"item": [
						{
							"name": "updateExperimentTrafficAllocation_shoudSucceed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.description).equal(\"my patched experiment description\");",
											"    pm.expect(jsonData.entity.name).equal(\"my patched experiment\");",
											"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
											"    pm.expect(jsonData.entity.modDate).is.not.null;",
											"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
											"    pm.expect(jsonData.entity.trafficAllocation).equal(20.0);",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"trafficAllocation\": 20  \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update Scheduling",
					"item": [
						{
							"name": "updateExperimentStartAndEndDate_shoudSucceed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.description).equal(\"my patched experiment description\");",
											"    pm.expect(jsonData.entity.name).equal(\"my patched experiment\");",
											"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
											"    pm.expect(jsonData.entity.modDate).is.not.null;",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.equal(2608661952000);",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.equal(2611340352000);",
											"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
											"    pm.expect(jsonData.entity.trafficAllocation).equal(20.0);",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"scheduling\": {\n    \"startDate\": \"2052-08-30T20:19:12Z\",\n    \"endDate\": \"2052-09-30T20:19:12Z\"\n}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateExperimentStartAndEndDate with timestamp",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.description).equal(\"my patched experiment description\");",
											"    pm.expect(jsonData.entity.name).equal(\"my patched experiment\");",
											"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
											"    pm.expect(jsonData.entity.modDate).is.not.null;",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.equal(2608661952010);",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.equal(2611340352010);",
											"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
											"    pm.expect(jsonData.entity.trafficAllocation).equal(20.0);",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"scheduling\": {\n    \"startDate\": 2608661952010,\n    \"endDate\": 2611340352010\n}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateScheduling_startDateInPast_shouldFail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 400\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(jsonData.message).to.contain(\"Invalid Scheduling. Start date is in the past\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"scheduling\": {\n    \"startDate\": \"2020-08-30T20:19:12Z\"\n}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateScheduling_endDateInPast_shouldFail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 400\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(jsonData.message).to.contain(\"Invalid Scheduling. End date is in the past\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"scheduling\": {\n    \"endDate\": \"2020-08-30T20:19:12Z\"\n}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateScheduling_endDateBeforeStartDate_shouldFail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 400\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(jsonData.message).to.contain(\"Invalid Scheduling. End date must be after the start date\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"scheduling\": {\n    \"startDate\": \"2051-08-30T20:19:12Z\",\n    \"endDate\": \"2050-08-30T20:19:12Z\"\n}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateScheduling_experimentDurationMoreThanMax_shouldFail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 400\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(jsonData.message).to.contain(\"Experiment duration must be less than 90 days\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"scheduling\": {\n    \"startDate\": \"2051-08-30T20:19:12Z\",\n    \"endDate\": \"2052-08-30T20:19:12Z\"\n}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateScheduling_nullDates_shouldSucceed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.be.null;",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.be.null;",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"scheduling\": {\n    \"startDate\": null,\n    \"endDate\": null\n}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateExperiment_validStartDate_nullEndDate_shouldSucceed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.description).equal(\"my patched experiment description\");",
											"    pm.expect(jsonData.entity.name).equal(\"my patched experiment\");",
											"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
											"    pm.expect(jsonData.entity.modDate).is.not.null;",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.equal(2608661952000);",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.equal(2616437952000);",
											"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
											"    pm.expect(jsonData.entity.trafficAllocation).equal(20.0);",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"scheduling\": {\n    \"startDate\": \"2052-08-30T20:19:12Z\",\n    \"endDate\": null\n}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateExperiment_nullStartDate_validEndDate_shouldSucceed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.description).equal(\"my patched experiment description\");",
											"    pm.expect(jsonData.entity.name).equal(\"my patched experiment\");",
											"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
											"    pm.expect(jsonData.entity.modDate).is.not.null;",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.equal(2603564352000);",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.equal(2611340352000);",
											"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
											"    pm.expect(jsonData.entity.trafficAllocation).equal(20.0);",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"scheduling\": {\n    \"startDate\": null,\n    \"endDate\": \"2052-09-30T20:19:12Z\"\n}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update LookbackWindow",
					"item": [
						{
							"name": "updateExperimentLookbackWindow_shoudSucceed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.description).equal(\"my patched experiment description\");",
											"    pm.expect(jsonData.entity.name).equal(\"my patched experiment\");",
											"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
											"    pm.expect(jsonData.entity.modDate).is.not.null;",
											"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
											"    pm.expect(jsonData.entity.trafficAllocation).equal(20.0);",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"    pm.expect(jsonData.entity.lookBackWindowExpireTime).equal(20);",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"lookbackWindow\": 20  \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "DELETE Experiment",
			"item": [
				{
					"name": "createDraftExperiment_shoudSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Experiment should have the expected values\", function () {",
									"    pm.expect(jsonData.entity.description).equal(\"my experiment description\");",
									"    pm.expect(jsonData.entity.name).equal(\"my experiment\");",
									"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
									"    pm.expect(jsonData.entity.modDate).is.not.null;",
									"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
									"    pm.expect(jsonData.entity.trafficAllocation).equal(100.0);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
									"});",
									"",
									"pm.collectionVariables.set(\"draftExperimentId\", jsonData.entity.id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"my experiment\",\n    \"description\": \"my experiment description\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteExperiment_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity).equal(\"Experiment deleted\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{draftExperimentId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{draftExperimentId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET List of Experiments",
			"item": [
				{
					"name": "listExperimentsByPageId_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Lists of experiments should not be empty\", function () {",
									"    pm.expect(jsonData.entity.length).to.be.greaterThan(0);",
									"});",
									"",
									"pm.test(\"All returned experiments should have the pageId in the filter\", function () {",
									"    for(let i in jsonData.entity) {",
									"        let experiment = jsonData.entity[i]",
									"        pm.expect(experiment.pageId).to.be.eq('e424abd7e2e7a9031c5a0a3c18182f1b');",
									"    }",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments?pageId=e424abd7e2e7a9031c5a0a3c18182f1b",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments"
							],
							"query": [
								{
									"key": "pageId",
									"value": "e424abd7e2e7a9031c5a0a3c18182f1b"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "pre_createExperimentInSecondPage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.set(\"secondExperimentId\", jsonData.entity.id);",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"9044ec0fdb3788a814ccabf789f376d4\",\n    \"name\": \"second page experiment\",\n    \"description\": \"second page experiment description\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "listExperimentsNoFilter_shouldIncludeAll",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Lists of experiments should not be empty\", function () {",
									"    pm.expect(jsonData.entity.length).to.be.greaterThan(0);",
									"});",
									"",
									"pm.test(\"The two experiments with different pageId are included\", function () {",
									"    let experiment1ID = pm.collectionVariables.get(\"experimentId\")",
									"    let experiment2ID = pm.collectionVariables.get(\"secondExperimentId\");",
									"    pm.expect(isExperimentIncluded(experiment1ID)).to.be.true;",
									"    pm.expect(isExperimentIncluded(experiment2ID)).to.be.true;",
									"});",
									"",
									"function isExperimentIncluded(id) {",
									"    for(let i in jsonData.entity) {",
									"        let experiment = jsonData.entity[i]",
									"        if(experiment.id===id) return true;",
									"    }",
									"",
									"    return false;",
									"}",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments"
							]
						}
					},
					"response": []
				},
				{
					"name": "listExperimentsFilterBySingleStatus_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Lists of experiments should not be empty\", function () {",
									"    pm.expect(jsonData.entity.length).to.be.greaterThan(0);",
									"});",
									"",
									"pm.test(\"All returned experiments should have the status DRAFT\", function () {",
									"    for(let i in jsonData.entity) {",
									"        let experiment = jsonData.entity[i]",
									"        pm.expect(experiment.status).to.be.eq('DRAFT');",
									"    }",
									"});",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments?status=DRAFT",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments"
							],
							"query": [
								{
									"key": "status",
									"value": "DRAFT"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "pre_createExperimentUniqueName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"9044ec0fdb3788a814ccabf789f376d4\",\n    \"name\": \"20220901\",\n    \"description\": \"second page experiment description\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "listExperimentsFilterByName_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Lists of experiments should not be empty\", function () {",
									"    pm.expect(jsonData.entity.length).to.be.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Experiments with DRAFT and ENDED statuses returned\", function () {",
									"    pm.expect(jsonData.entity[0].name).to.be.eq('20220901')",
									"});",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments?name=20220901",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments"
							],
							"query": [
								{
									"key": "name",
									"value": "20220901"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "listExperimentsFilterByPartialName_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Lists of experiments should not be empty\", function () {",
									"    pm.expect(jsonData.entity.length).to.be.greaterThan(0);",
									"});",
									"",
									"pm.test(\"Experiments with DRAFT and ENDED statuses returned\", function () {",
									"    pm.expect(jsonData.entity[0].name).to.be.eq('20220901')",
									"});",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments?name=2022",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments"
							],
							"query": [
								{
									"key": "name",
									"value": "2022"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Goal",
			"item": [
				{
					"name": "Set URL_PARAMETER Goal",
					"item": [
						{
							"name": "Create Experiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"urlParameterExperimentId\", jsonData.entity.id);",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"Url Parameter experiment\",\n    \"description\": \"Url Parameter experiment description\" \n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "setExperimentGoal_as_url_parameter_shoudSucceed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.goals.primary.type).equal(\"URL_PARAMETER\");",
											"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Url Parameter Condition\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"queryParameter\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"{\\\"name\\\":\\\"testName\\\",\\\"value\\\":\\\"testValue\\\"}\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"REGEX\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"visitBefore\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"/my-page\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Url Parameter Condition\",\n            \"type\": \"URL_PARAMETER\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"queryParameter\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": {\n                        \"name\": \"testName\",\n                        \"value\": \"testValue\"\n                    }\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{urlParameterExperimentId}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{urlParameterExperimentId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "setExperimentGoal_shoudSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Experiment should have the expected values\", function () {",
									"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
									"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referer\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
									"",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setExperimentGoal_InvalidCondition_ShouldFail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Expected error message\", function () {",
									"    pm.expect(jsonData.message).equal(\"Invalid Parameters provided: [does-not-exist]\")",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"does-not-exist\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setExperimentGoal_MissingRequiredParameter_ShouldFail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Expected error message\", function () {",
									"    pm.expect(jsonData.message).equal(\"Missing required Parameters: [url]\")",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setExperimentGoal_MissingAllRequiredParameter_ShouldFail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Expected error message\", function () {",
									"    pm.expect(jsonData.message).equal(\"At least one of these are required Parameters: [id, class, target]\")",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"CLICK_ON_ELEMENT\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"pageUrl\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeExperimentGoal_shoudSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Experiment should have null goals\", function () {",
									"    pm.expect(jsonData.entity.goals).is.null;",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}/goals/primary",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentId}}",
								"goals",
								"primary"
							]
						}
					},
					"response": []
				},
				{
					"name": "setExperimentGoal_ProvideAtLeastOneRequiredParameter_ShouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Expected Goal with two Conditions created\", function () {",
									"    pm.expect(jsonData.entity.goals.primary.conditions.length).to.be.eq(2)",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"CLICK_ON_ELEMENT\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"pageUrl\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }, \n                {\n                    \"parameter\": \"id\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"my-button\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Start Experiment",
			"item": [
				{
					"name": "StartExperimentNow_shouldSucceed",
					"item": [
						{
							"name": "pre_ImportBundleWithPage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bundle uploaded sucessfully\", function () {",
											"    pm.response.to.have.status(200);",
											"",
											"    var jsonData = pm.response.json();",
											"    console.log(jsonData);",
											"",
											"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"page_experiment.tar.gz\");",
											"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/octet-stream"
									},
									{
										"key": "Content-Disposition",
										"type": "text",
										"value": "attachment"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "resources/Experiments/page_experiment.tar.gz"
										}
									]
								},
								"url": {
									"raw": "{{serverURL}}/api/bundle?sync=true",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"bundle"
									],
									"query": [
										{
											"key": "sync",
											"value": "true"
										},
										{
											"key": "AUTH_TOKEN",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Imports a Bundle that includes:\n* A piece of content with a tag field without any tags selected"
							},
							"response": []
						},
						{
							"name": "pre_createExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"experimentToStartNow\", jsonData.entity.id);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_addVariantToExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Variants with correct weight\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"I wanna be promoted!\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
											"    ",
											"    pm.collectionVariables.set(\"originalVariant\", jsonData.entity.trafficProportion.variants[0].id);",
											"    pm.collectionVariables.set(\"variantToPromote\", jsonData.entity.trafficProportion.variants[1].id);",
											"",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"I wanna be promoted!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToStartNow}}/variants",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToStartNow}}",
										"variants"
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_setExperimentGoal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
											"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referer\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToStartNow}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToStartNow}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "startExperiment_shouldSucceed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Started Experiment with expected values\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.status).equal(\"RUNNING\");",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.be.not.null;",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.be.not.null;",
											"",
											"    var runningIds = jsonData.entity.runningIds.ids;",
											"    console.log('runningIds', runningIds);",
											"    console.log('jsonData.entity.runningIds.ids', jsonData.entity.runningIds.ids);",
											"    pm.expect(1).equal(runningIds.length);",
											"",
											"    var runningId = runningIds[0];",
											"    pm.expect(runningId.id).not.null;",
											"    pm.expect(runningId.startDate).not.null;",
											"    pm.expect(runningId.endDate).be.null;",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToStartNow}}/_start",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToStartNow}}",
										"_start"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "AttemptToStartSecondExperimentNow_shouldFail",
					"item": [
						{
							"name": "pre_createExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"secondExperimentToStartNow\", jsonData.entity.id);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_addVariantToExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Variants with correct weight\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"I wanna be promoted!\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
											"    ",
											"    pm.collectionVariables.set(\"originalVariant\", jsonData.entity.trafficProportion.variants[0].id);",
											"    pm.collectionVariables.set(\"variantToPromote\", jsonData.entity.trafficProportion.variants[1].id);",
											"",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"I wanna be promoted!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{secondExperimentToStartNow}}/variants",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{secondExperimentToStartNow}}",
										"variants"
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_setExperimentGoal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
											"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referer\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{secondExperimentToStartNow}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{secondExperimentToStartNow}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "startExperiment_shouldFail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Started Experiment with expected values\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(jsonData.message).contains(\"There is a running Experiment on the same page. Name: 20220901\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{secondExperimentToStartNow}}/_start",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{secondExperimentToStartNow}}",
										"_start"
									]
								}
							},
							"response": []
						},
						{
							"name": "endFirstExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Ended Experiment with expected values\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.status).equal(\"ENDED\");",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.be.not.null;",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.be.not.null;",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToStartNow}}/_end",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToStartNow}}",
										"_end"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "StartExperimentShouldPublishPage",
					"item": [
						{
							"name": "pre_ImportBundleWithPage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bundle uploaded sucessfully\", function () {",
											"    pm.response.to.have.status(200);",
											"",
											"    var jsonData = pm.response.json();",
											"    console.log(jsonData);",
											"",
											"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"page_experiment.tar.gz\");",
											"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/octet-stream"
									},
									{
										"key": "Content-Disposition",
										"type": "text",
										"value": "attachment"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "resources/Experiments/page_experiment.tar.gz"
										}
									]
								},
								"url": {
									"raw": "{{serverURL}}/api/bundle?sync=true",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"bundle"
									],
									"query": [
										{
											"key": "sync",
											"value": "true"
										},
										{
											"key": "AUTH_TOKEN",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Imports a Bundle that includes:\n* A piece of content with a tag field without any tags selected"
							},
							"response": []
						},
						{
							"name": "pre_UnpublishPage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"No errors\", function () {",
											"    ",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.errors.length).to.eql(0);",
											"});",
											"",
											"pm.test(\"Information Publish Correctly\", function () {",
											"    ",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.entity.baseType).to.eql(\"HTMLPAGE\");",
											"    pm.expect(jsonData.entity.live).to.eql(false);",
											"});",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/UNPUBLISH?identifier=e424abd7e2e7a9031c5a0a3c18182f1b",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"workflow",
										"actions",
										"default",
										"fire",
										"UNPUBLISH"
									],
									"query": [
										{
											"key": "identifier",
											"value": "e424abd7e2e7a9031c5a0a3c18182f1b"
										}
									]
								},
								"description": "Fires an PUBLISH default action"
							},
							"response": []
						},
						{
							"name": "pre_createExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"experimentToStartNow\", jsonData.entity.id);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_addVariantToExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Variants with correct weight\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"I wanna be promoted!\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
											"    ",
											"    pm.collectionVariables.set(\"originalVariant\", jsonData.entity.trafficProportion.variants[0].id);",
											"    pm.collectionVariables.set(\"variantToPromote\", jsonData.entity.trafficProportion.variants[1].id);",
											"",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"I wanna be promoted!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToStartNow}}/variants",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToStartNow}}",
										"variants"
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_setExperimentGoal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
											"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referer\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToStartNow}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToStartNow}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "startExperiment_shouldSucceed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Started Experiment with expected values\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.status).equal(\"RUNNING\");",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.be.not.null;",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.be.not.null;",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToStartNow}}/_start",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToStartNow}}",
										"_start"
									]
								}
							},
							"response": []
						},
						{
							"name": "pageOfExperiment_shouldBeLive",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code should be 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var jsonData = pm.response.json();",
											"",
											"var identifier = pm.collectionVariables.get(\"contentletIdentifier\");",
											"pm.test(\"Live check\", function () {",
											"    pm.expect(jsonData.entity.live).to.true;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{serverURL}}/api/v1/content/e424abd7e2e7a9031c5a0a3c18182f1b",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"content",
										"e424abd7e2e7a9031c5a0a3c18182f1b"
									]
								}
							},
							"response": []
						},
						{
							"name": "post_endExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Ended Experiment with expected values\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.status).equal(\"ENDED\");",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.be.not.null;",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.be.not.null;",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToStartNow}}/_end",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToStartNow}}",
										"_end"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "pre_createExperiment_NoGoal_NoVariant",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.set(\"experimentNoGoalsId\", jsonData.entity.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"9044ec0fdb3788a814ccabf789f376d4\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "startExperiment_MissingVariants_shouldFail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Experiment without Goal should fail\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.expect(jsonData.message).equal(\"The Experiment needs at least one Page Variant in order to be started.\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentNoGoalsId}}/_start",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentNoGoalsId}}",
								"_start"
							]
						}
					},
					"response": []
				},
				{
					"name": "pre_addVariantToExperiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Variants with correct weight\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"Some other Variant\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
									"",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Some other Variant\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentNoGoalsId}}/variants",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentNoGoalsId}}",
								"variants"
							]
						}
					},
					"response": []
				},
				{
					"name": "startExperiment_MissingGoal_shouldFail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Experiment without Goal should fail\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.expect(jsonData.message).equal(\"The Experiment needs to have the Goal set.\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentNoGoalsId}}/_start",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentNoGoalsId}}",
								"_start"
							]
						}
					},
					"response": []
				},
				{
					"name": "pre_setExperimentGoal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Experiment should have the expected values\", function () {",
									"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
									"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referer\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
									"",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentNoGoalsId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentNoGoalsId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "startExperiment_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Started Experiment with expected values\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.status).equal(\"RUNNING\");",
									"    pm.expect(jsonData.entity.scheduling.startDate).to.be.not.null;",
									"    pm.expect(jsonData.entity.scheduling.endDate).to.be.not.null;",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentNoGoalsId}}/_start",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentNoGoalsId}}",
								"_start"
							]
						}
					},
					"response": []
				},
				{
					"name": "startAlreadyStarterExperiment_shouldFail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 400\", function () {",
									"    pm.response.to.have.status(400);",
									"    pm.expect(jsonData.message).equal(\"Only DRAFT experiments can be started\");",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentNoGoalsId}}/_start",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentNoGoalsId}}",
								"_start"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "End Experiment",
			"item": [
				{
					"name": "endExperiment_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Ended Experiment with expected values\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.status).equal(\"ENDED\");",
									"    pm.expect(jsonData.entity.scheduling.startDate).to.be.not.null;",
									"    pm.expect(jsonData.entity.scheduling.endDate).to.be.not.null;",
									"",
									"    var runningIds = jsonData.entity.runningIds.ids;",
									"    console.log('runningIds', runningIds);",
									"    console.log('jsonData.entity.runningIds.ids', jsonData.entity.runningIds.ids);",
									"    pm.expect(1).equal(runningIds.length);",
									"",
									"    var runningId = runningIds[0];",
									"    pm.expect(runningId.id).not.null;",
									"    pm.expect(runningId.startDate).not.null;",
									"    pm.expect(runningId.endDate).be.null;",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentNoGoalsId}}/_end",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentNoGoalsId}}",
								"_end"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Targeting Conditions",
			"item": [
				{
					"name": "pre_createExperiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.set(\"experimentTargeting\", jsonData.entity.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "addTargetingConditions_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Experiment should have the expected values\", function () {",
									"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
									"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referer\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
									"    pm.expect(jsonData.entity.targetingConditions.length).equal(3);",
									"",
									"});",
									"",
									"pm.collectionVariables.set(\"conditionId\", jsonData.entity.targetingConditions[0].id);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"targetingConditions\": [\n        {\n            \"conditionKey\": \"UsersBrowserConditionlet\",\n             \"values\": {\n                 \"comparison\": \"is\", \n                 \"browser\": \"Chrome\"\n             }   \n        }, \n        {\n            \"conditionKey\": \"UsersPlatformConditionlet\",\n             \"values\": {\n                 \"comparison\": \"is\", \n                 \"platform\": \"MOBILE\"\n             }   \n        }, \n        {\n            \"conditionKey\": \"VisitorsGeolocationConditionlet\",\n             \"values\": {\n                 \"comparison\": \"withinDistance\", \n                 \"latitude\": \"38.8977\", \n                 \"longitude\": \"-77.0365\", \n                 \"preferredDisplayUnits\": \"mi\", \n                 \"radius\": \"16191.182801892148\"\n             }   \n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentTargeting}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentTargeting}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateTargetingConditions_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Experiment should have the expected values\", function () {",
									"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
									"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referer\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
									"    pm.expect(jsonData.entity.targetingConditions.length).equal(3);",
									"",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"targetingConditions\": [\n        {\n            \"id\": \"{{conditionId}}\",\n            \"conditionKey\": \"UsersBrowserConditionlet\",\n             \"values\": {\n                 \"comparison\": \"is\", \n                 \"browser\": \"Firefox\"\n             }   \n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentTargeting}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentTargeting}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteTargetingCondition_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Started Experiment with expected values\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.targetingConditions.length).equal(2);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentTargeting}}/targetingConditions/{{conditionId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentTargeting}}",
								"targetingConditions",
								"{{conditionId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Promote Experiment Variant",
			"item": [
				{
					"name": "pre_ImportBundleWithPage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Bundle uploaded sucessfully\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData);",
									"",
									"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"page_experiment.tar.gz\");",
									"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Disposition",
								"type": "text",
								"value": "attachment"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "resources/Experiments/page_experiment.tar.gz"
								}
							]
						},
						"url": {
							"raw": "{{serverURL}}/api/bundle?sync=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle"
							],
							"query": [
								{
									"key": "sync",
									"value": "true"
								},
								{
									"key": "AUTH_TOKEN",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Imports a Bundle that includes:\n* A piece of content with a tag field without any tags selected"
					},
					"response": []
				},
				{
					"name": "pre_createExperiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.set(\"variantExperiment\", jsonData.entity.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "pre_addVariantToExperiment_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Variants with correct weight\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"I wanna be promoted!\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
									"    ",
									"    pm.collectionVariables.set(\"originalVariant\", jsonData.entity.trafficProportion.variants[0].id);",
									"    pm.collectionVariables.set(\"variantToPromote\", jsonData.entity.trafficProportion.variants[1].id);",
									"",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"I wanna be promoted!\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{variantExperiment}}/variants",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{variantExperiment}}",
								"variants"
							]
						}
					},
					"response": []
				},
				{
					"name": "pre_setExperimentGoal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Experiment should have the expected values\", function () {",
									"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
									"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referer\");",
									"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
									"",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{variantExperiment}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{variantExperiment}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "startExperiment_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Started Experiment with expected values\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.status).equal(\"RUNNING\");",
									"    pm.expect(jsonData.entity.scheduling.startDate).to.be.not.null;",
									"    pm.expect(jsonData.entity.scheduling.endDate).to.be.not.null;",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{variantExperiment}}/_start",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{variantExperiment}}",
								"_start"
							]
						}
					},
					"response": []
				},
				{
					"name": "promoteVariant_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Variants with correct weight\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"I wanna be promoted!\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].promoted).true;",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"description\": \"Updated variant description\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{variantExperiment}}/variants/{{variantToPromote}}/_promote",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{variantExperiment}}",
								"variants",
								"{{variantToPromote}}",
								"_promote"
							]
						}
					},
					"response": []
				},
				{
					"name": "getExperimentOfPromotedVariant_shouldBeEnded",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Experiment returns expected data\", function () {",
									"    var experiment = jsonData.entity;",
									"    pm.expect(experiment.description).to.be.eq(\"experiment with goals and variants\");",
									"    pm.expect(experiment.goals.primary.name).to.be.eq(\"Reach thank-you page\");",
									"    pm.expect(experiment.scheduling.startDate).to.be.not.null;",
									"    pm.expect(experiment.scheduling.endDate).to.be.not.null;",
									"});",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{variantExperiment}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{variantExperiment}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Schedule Experiments",
			"item": [
				{
					"name": "ScheduleExperimentForJanuary2053_shouldSucceed",
					"item": [
						{
							"name": "pre_ImportBundleWithPage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bundle uploaded sucessfully\", function () {",
											"    pm.response.to.have.status(200);",
											"",
											"    var jsonData = pm.response.json();",
											"    console.log(jsonData);",
											"",
											"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"page_experiment.tar.gz\");",
											"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/octet-stream"
									},
									{
										"key": "Content-Disposition",
										"type": "text",
										"value": "attachment"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "resources/Experiments/page_experiment.tar.gz"
										}
									]
								},
								"url": {
									"raw": "{{serverURL}}/api/bundle?sync=true",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"bundle"
									],
									"query": [
										{
											"key": "sync",
											"value": "true"
										},
										{
											"key": "AUTH_TOKEN",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Imports a Bundle that includes:\n* A piece of content with a tag field without any tags selected"
							},
							"response": []
						},
						{
							"name": "pre_createExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"experimentToScheduleInJanuary\", jsonData.entity.id);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_addVariantToExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Variants with correct weight\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"I wanna be promoted!\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
											"    ",
											"    pm.collectionVariables.set(\"originalVariant\", jsonData.entity.trafficProportion.variants[0].id);",
											"    pm.collectionVariables.set(\"variantToPromote\", jsonData.entity.trafficProportion.variants[1].id);",
											"",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"I wanna be promoted!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInJanuary}}/variants",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInJanuary}}",
										"variants"
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_setExperimentGoal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
											"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referer\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInJanuary}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInJanuary}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateExperimentStartAndEndDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
											"    pm.expect(jsonData.entity.modDate).is.not.null;",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.equal(2619375552000);",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.equal(2621967552000);",
											"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"scheduling\": {\n    \"startDate\": \"2053-01-01T20:19:12Z\",\n    \"endDate\": \"2053-01-31T20:19:12Z\"\n}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInJanuary}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInJanuary}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "scheduleExperimentForJanuary2053",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Started Experiment with expected values\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.status).equal(\"SCHEDULED\");",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.be.not.null;",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.be.not.null;",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInJanuary}}/_start",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInJanuary}}",
										"_start"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ScheduleExperimentForFebruary2053_shouldSucceed",
					"item": [
						{
							"name": "pre_createSecondExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"experimentToScheduleInFebruary\", jsonData.entity.id);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_addVariantToSecondExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Variants with correct weight\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"I wanna be promoted!\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
											"    ",
											"    pm.collectionVariables.set(\"originalVariant\", jsonData.entity.trafficProportion.variants[0].id);",
											"    pm.collectionVariables.set(\"variantToPromote\", jsonData.entity.trafficProportion.variants[1].id);",
											"",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"I wanna be promoted!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInFebruary}}/variants",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInFebruary}}",
										"variants"
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_setSecondExperimentGoal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
											"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referer\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInFebruary}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInFebruary}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateSecondExperimentStartAndEndDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
											"    pm.expect(jsonData.entity.modDate).is.not.null;",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.equal(2622053952000);",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.equal(2624386752000);",
											"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"scheduling\": {\n    \"startDate\": \"2053-02-01T20:19:12Z\",\n    \"endDate\": \"2053-02-28T20:19:12Z\"\n}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInFebruary}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInFebruary}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "scheduleExperimentForFebruary2053",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Started Experiment with expected values\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.status).equal(\"SCHEDULED\");",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.be.not.null;",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.be.not.null;",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInFebruary}}/_start",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInFebruary}}",
										"_start"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ScheduleExperimentForApril2053_shouldSucceed",
					"item": [
						{
							"name": "pre_createExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"experimentToScheduleInApril\", jsonData.entity.id);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_addVariantToExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Variants with correct weight\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"I wanna be promoted!\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
											"    ",
											"    pm.collectionVariables.set(\"originalVariant\", jsonData.entity.trafficProportion.variants[0].id);",
											"    pm.collectionVariables.set(\"variantToPromote\", jsonData.entity.trafficProportion.variants[1].id);",
											"",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"I wanna be promoted!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInApril}}/variants",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInApril}}",
										"variants"
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_setExperimentGoal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
											"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referer\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInApril}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInApril}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateExperimentStartAndEndDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
											"    pm.expect(jsonData.entity.modDate).is.not.null;",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.equal(2627151552000);",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.equal(2629657152000);",
											"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"scheduling\": {\n    \"startDate\": \"2053-04-01T20:19:12Z\",\n    \"endDate\": \"2053-04-30T20:19:12Z\"\n}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInApril}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInApril}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "scheduleExperimentForApril2053",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Started Experiment with expected values\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.status).equal(\"SCHEDULED\");",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.be.not.null;",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.be.not.null;",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInApril}}/_start",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInApril}}",
										"_start"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ScheduleExperimentForMarch2053_shouldSucceed",
					"item": [
						{
							"name": "pre_createExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"experimentToScheduleInMarch\", jsonData.entity.id);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_addVariantToExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Variants with correct weight\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"I wanna be promoted!\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
											"    ",
											"    pm.collectionVariables.set(\"originalVariant\", jsonData.entity.trafficProportion.variants[0].id);",
											"    pm.collectionVariables.set(\"variantToPromote\", jsonData.entity.trafficProportion.variants[1].id);",
											"",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"I wanna be promoted!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInMarch}}/variants",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInMarch}}",
										"variants"
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_setExperimentGoal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
											"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referer\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInMarch}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInMarch}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateExperimentStartAndEndDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
											"    pm.expect(jsonData.entity.modDate).is.not.null;",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.equal(2624473152000);",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.equal(2627065152000);",
											"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"scheduling\": {\n    \"startDate\": \"2053-03-01T20:19:12Z\",\n    \"endDate\": \"2053-03-31T20:19:12Z\"\n}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInMarch}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInMarch}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "scheduleExperimentForMarch2053",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Started Experiment with expected values\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.status).equal(\"SCHEDULED\");",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.be.not.null;",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.be.not.null;",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInMarch}}/_start",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInMarch}}",
										"_start"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "ScheduleExperimentForMiddleOfMarch_shouldFail",
					"item": [
						{
							"name": "pre_createExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"experimentToScheduleInJanuary2\", jsonData.entity.id);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_addVariantToExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Variants with correct weight\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"I wanna be promoted!\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
											"    ",
											"    pm.collectionVariables.set(\"originalVariant\", jsonData.entity.trafficProportion.variants[0].id);",
											"    pm.collectionVariables.set(\"variantToPromote\", jsonData.entity.trafficProportion.variants[1].id);",
											"",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"I wanna be promoted!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInJanuary2}}/variants",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInJanuary2}}",
										"variants"
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_setExperimentGoal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
											"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referer\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInJanuary2}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInJanuary2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateExperimentStartAndEndDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
											"    pm.expect(jsonData.entity.modDate).is.not.null;",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.equal(2625423552000);",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.equal(2627065152000);",
											"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"scheduling\": {\n    \"startDate\": \"2053-03-12T20:19:12Z\",\n    \"endDate\": \"2053-03-31T20:19:12Z\"\n}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInJanuary2}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInJanuary2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "scheduleExperimentForMiddleOfJaunary2053",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Experiment should conflict with existing\", function () {",
											"    pm.response.to.have.status(400);",
											"    pm.expect(jsonData.message).contains(\"Scheduling conflict: The same page can't be included in different experiments with overlapping schedules. Overlapping with Experiment: 20220901\");",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleInJanuary2}}/_start",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleInJanuary2}}",
										"_start"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Cancel Experiment",
			"item": [
				{
					"name": "cancelScheduledExperiment_shouldSucceed",
					"item": [
						{
							"name": "pre_ImportBundleWithPage",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Bundle uploaded sucessfully\", function () {",
											"    pm.response.to.have.status(200);",
											"",
											"    var jsonData = pm.response.json();",
											"    console.log(jsonData);",
											"",
											"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"page_experiment.tar.gz\");",
											"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										},
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/octet-stream"
									},
									{
										"key": "Content-Disposition",
										"type": "text",
										"value": "attachment"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": "resources/Experiments/page_experiment.tar.gz"
										}
									]
								},
								"url": {
									"raw": "{{serverURL}}/api/bundle?sync=true",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"bundle"
									],
									"query": [
										{
											"key": "sync",
											"value": "true"
										},
										{
											"key": "AUTH_TOKEN",
											"value": "",
											"disabled": true
										}
									]
								},
								"description": "Imports a Bundle that includes:\n* A piece of content with a tag field without any tags selected"
							},
							"response": []
						},
						{
							"name": "pre_createExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.collectionVariables.set(\"experimentToScheduleIn2050\", jsonData.entity.id);",
											"",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_addVariantToExperiment",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Variants with correct weight\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"I wanna be promoted!\");",
											"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
											"    ",
											"    pm.collectionVariables.set(\"originalVariant\", jsonData.entity.trafficProportion.variants[0].id);",
											"    pm.collectionVariables.set(\"variantToPromote\", jsonData.entity.trafficProportion.variants[1].id);",
											"",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"I wanna be promoted!\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleIn2050}}/variants",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleIn2050}}",
										"variants"
									]
								}
							},
							"response": []
						},
						{
							"name": "pre_setExperimentGoal",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
											"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referer\");",
											"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleIn2050}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleIn2050}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateExperimentStartAndEndDate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Status code should be ok 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Experiment should have the expected values\", function () {",
											"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
											"    pm.expect(jsonData.entity.modDate).is.not.null;",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.equal(2524681152000);",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.equal(2527273152000);",
											"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
											"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
											"",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\"scheduling\": {\n    \"startDate\": \"2050-01-01T20:19:12Z\",\n    \"endDate\": \"2050-01-31T20:19:12Z\"\n}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleIn2050}}",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleIn2050}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "scheduleExperimentForJanuary2053",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Started Experiment with expected values\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.status).equal(\"SCHEDULED\");",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.be.not.null;",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.be.not.null;",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/{{experimentToScheduleIn2050}}/_start",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"{{experimentToScheduleIn2050}}",
										"_start"
									]
								}
							},
							"response": []
						},
						{
							"name": "cancelScheduledExperiment_shouldSucceed",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"",
											"",
											"pm.test(\"Ended Experiment with expected values\", function () {",
											"    pm.response.to.have.status(200);",
											"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
											"    pm.expect(jsonData.entity.scheduling.startDate).to.be.not.null;",
											"    pm.expect(jsonData.entity.scheduling.endDate).to.be.not.null;",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "admin",
											"type": "string"
										},
										{
											"key": "username",
											"value": "admin@dotcms.com",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{serverURL}}/api/v1/experiments/scheduled/{{experimentToScheduleIn2050}}/_cancel",
									"host": [
										"{{serverURL}}"
									],
									"path": [
										"api",
										"v1",
										"experiments",
										"scheduled",
										"{{experimentToScheduleIn2050}}",
										"_cancel"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "experimentId",
			"value": ""
		},
		{
			"key": "secondExperimentId",
			"value": ""
		},
		{
			"key": "draftExperimentId",
			"value": ""
		},
		{
			"key": "experimentToStartId",
			"value": ""
		},
		{
			"key": "experimentNoGoalsId",
			"value": ""
		},
		{
			"key": "experimentNoVariantsId",
			"value": ""
		},
		{
			"key": "experimentToAddVariant",
			"value": ""
		},
		{
			"key": "variantToDelete",
			"value": ""
		},
		{
			"key": "secondVariantId",
			"value": ""
		},
		{
			"key": "experimentTargeting",
			"value": ""
		},
		{
			"key": "conditionId",
			"value": ""
		},
		{
			"key": "experimentGet",
			"value": ""
		},
		{
			"key": "contentletIdentifier",
			"value": ""
		},
		{
			"key": "contentletInode",
			"value": ""
		},
		{
			"key": "fireActionLanguageKey",
			"value": ""
		},
		{
			"key": "variantExperiment",
			"value": ""
		},
		{
			"key": "variantToEdit",
			"value": ""
		},
		{
			"key": "originalVariant",
			"value": ""
		},
		{
			"key": "variantToPromote",
			"value": ""
		},
		{
			"key": "experimentToScheduleInJanuary",
			"value": ""
		},
		{
			"key": "experimentToScheduleInFebruary",
			"value": ""
		},
		{
			"key": "experimentToScheduleInApril",
			"value": ""
		},
		{
			"key": "experimentToScheduleInMarch",
			"value": ""
		},
		{
			"key": "experimentToScheduleInJanuary2",
			"value": ""
		},
		{
			"key": "experimentToStartNow",
			"value": ""
		},
		{
			"key": "secondExperimentToStartNow",
			"value": ""
		},
		{
			"key": "experimentToScheduleIn2050",
			"value": ""
		},
		{
			"key": "urlParameterExperimentId",
			"value": ""
		},
		{
			"key": "bounceRateExperimentId",
			"value": ""
		},
		{
			"key": "contentTypeId",
			"value": ""
		},
		{
			"key": "keep_content_container_id",
			"value": ""
		},
		{
			"key": "add_content_container_id",
			"value": ""
		},
		{
			"key": "add_contentlet_default_specific_variant_container_id",
			"value": ""
		},
		{
			"key": "add_contentlet_default_specific_variant_template",
			"value": ""
		},
		{
			"key": "add_contentlet_default_specific_variant_page_id",
			"value": ""
		},
		{
			"key": "content1_id",
			"value": ""
		},
		{
			"key": "content2_id",
			"value": ""
		},
		{
			"key": "experimentShortId",
			"value": ""
		},
		{
			"key": "keep_contents_template_id",
			"value": ""
		},
		{
			"key": "page_version_keep_contentlet",
			"value": ""
		}
	]
}