{
	"info": {
		"_postman_id": "58fe3bb5-ad72-47e3-9118-80306254e024",
		"name": "Experiments Resource",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1549189"
	},
	"item": [
		{
			"name": "GET Experiment",
			"item": [
				{
					"name": "pre_ImportBundleWithPage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Bundle uploaded sucessfully\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData);",
									"",
									"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"page_experiment.tar.gz\");",
									"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/octet-stream"
							},
							{
								"key": "Content-Disposition",
								"type": "text",
								"value": "attachment"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "resources/Experiments/page_experiment.tar.gz"
								}
							]
						},
						"url": {
							"raw": "{{serverURL}}/api/bundle?sync=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"bundle"
							],
							"query": [
								{
									"key": "sync",
									"value": "true"
								},
								{
									"key": "AUTH_TOKEN",
									"value": "",
									"disabled": true
								}
							]
						},
						"description": "Imports a Bundle that includes:\n* A piece of content with a tag field without any tags selected"
					},
					"response": []
				},
				{
					"name": "pre_createExperiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.set(\"experimentToAddVariant\", jsonData.entity.id);",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referrer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "pre_addVariantToExperiment_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Variants with correct weight\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"My first Variant\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
									"    ",
									"    pm.collectionVariables.set(\"variantToDelete\", jsonData.entity.trafficProportion.variants[1].id);",
									"",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My first Variant\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}/variants",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentToAddVariant}}",
								"variants"
							]
						}
					},
					"response": []
				},
				{
					"name": "pre_addSecondVariantToExperiment_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Variants with correct weight\", function () {",
									"    pm.response.to.have.status(200);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(3);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(33.333332);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"My first Variant\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(33.333332);",
									"    pm.expect(jsonData.entity.trafficProportion.variants[2].name).equal(\"My second Variant\");",
									"    pm.expect(jsonData.entity.trafficProportion.variants[2].weight).equal(33.333332);",
									"",
									"    pm.collectionVariables.set(\"secondVariantId\", jsonData.entity.trafficProportion.variants[2].id);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"My second Variant\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}/variants",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentToAddVariant}}",
								"variants"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateExperimentStartAndEndDate_shoudSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Experiment should have the expected values\", function () {",
									"    pm.expect(jsonData.entity.description).equal(\"experiment with goals and variants\");",
									"    pm.expect(jsonData.entity.name).equal(\"20220901\");",
									"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
									"    pm.expect(jsonData.entity.modDate).is.not.null;",
									"    pm.expect(jsonData.entity.scheduling.startDate).to.equal(2608661952000);",
									"    pm.expect(jsonData.entity.scheduling.endDate).to.equal(2611340352000);",
									"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
									"    pm.expect(jsonData.entity.trafficAllocation).equal(100);",
									"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
									"",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\"scheduling\": {\n    \"startDate\": \"2052-08-30T20:19:12Z\",\n    \"endDate\": \"2052-09-30T20:19:12Z\"\n}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentToAddVariant}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getExperimentById_existingId_shouldSucceed",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Experiment returns expected data\", function () {",
									"    var experiment = jsonData.entity;",
									"    pm.expect(experiment.description).to.be.eq(\"experiment with goals and variants\");",
									"    pm.expect(experiment.goals.primary.name).to.be.eq(\"Reach thank-you page\");",
									"    pm.expect(experiment.scheduling.startDate).to.be.not.null;",
									"    pm.expect(experiment.scheduling.endDate).to.be.not.null;",
									"});",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentToAddVariant}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getExperimentById_nonExistingId_Should404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"pm.test(\"Proper error message\", function () {",
									"    pm.expect(jsonData.error).contains(\"Experiment with id: sdfsd not found.\");",
									"});",
									"",
									"",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/sdfsd",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"sdfsd"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "pre_ImportBundleWithPage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Bundle uploaded sucessfully\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"",
							"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"page_experiment.tar.gz\");",
							"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/octet-stream"
					},
					{
						"key": "Content-Disposition",
						"type": "text",
						"value": "attachment"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "resources/Experiments/page_experiment.tar.gz"
						}
					]
				},
				"url": {
					"raw": "{{serverURL}}/api/bundle?sync=true",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"bundle"
					],
					"query": [
						{
							"key": "sync",
							"value": "true"
						},
						{
							"key": "AUTH_TOKEN",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Imports a Bundle that includes:\n* A piece of content with a tag field without any tags selected"
			},
			"response": []
		},
		{
			"name": "createExperiment_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity.description).equal(\"my experiment description\");",
							"    pm.expect(jsonData.entity.name).equal(\"my experiment\");",
							"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
							"    pm.expect(jsonData.entity.modDate).is.not.null;",
							"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
							"    pm.expect(jsonData.entity.trafficAllocation).equal(100.0);",
							"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
							"});",
							"",
							"pm.collectionVariables.set(\"experimentId\", jsonData.entity.id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"my experiment\",\n    \"description\": \"my experiment description\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "updateExperimentNameAndDesc_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity.description).equal(\"my patched experiment description\");",
							"    pm.expect(jsonData.entity.name).equal(\"my patched experiment\");",
							"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
							"    pm.expect(jsonData.entity.modDate).is.not.null;",
							"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
							"    pm.expect(jsonData.entity.trafficAllocation).equal(100.0);",
							"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"my patched experiment\",\n    \"description\": \"my patched experiment description\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateExperimentTrafficAllocation_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity.description).equal(\"my patched experiment description\");",
							"    pm.expect(jsonData.entity.name).equal(\"my patched experiment\");",
							"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
							"    pm.expect(jsonData.entity.modDate).is.not.null;",
							"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
							"    pm.expect(jsonData.entity.trafficAllocation).equal(20.0);",
							"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"trafficAllocation\": 20  \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateExperimentStartAndEndDate_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity.description).equal(\"my patched experiment description\");",
							"    pm.expect(jsonData.entity.name).equal(\"my patched experiment\");",
							"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
							"    pm.expect(jsonData.entity.modDate).is.not.null;",
							"    pm.expect(jsonData.entity.scheduling.startDate).to.equal(2608661952000);",
							"    pm.expect(jsonData.entity.scheduling.endDate).to.equal(2611340352000);",
							"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
							"    pm.expect(jsonData.entity.trafficAllocation).equal(20.0);",
							"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"scheduling\": {\n    \"startDate\": \"2052-08-30T20:19:12Z\",\n    \"endDate\": \"2052-09-30T20:19:12Z\"\n}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateExperimentStartAndEndDate with timestamp",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity.description).equal(\"my patched experiment description\");",
							"    pm.expect(jsonData.entity.name).equal(\"my patched experiment\");",
							"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
							"    pm.expect(jsonData.entity.modDate).is.not.null;",
							"    pm.expect(jsonData.entity.scheduling.startDate).to.equal(2608661952010);",
							"    pm.expect(jsonData.entity.scheduling.endDate).to.equal(2611340352010);",
							"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
							"    pm.expect(jsonData.entity.trafficAllocation).equal(20.0);",
							"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"scheduling\": {\n    \"startDate\": 2608661952010,\n    \"endDate\": 2611340352010\n}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateScheduling_startDateInPast_shouldFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 400\", function () {",
							"    pm.response.to.have.status(400);",
							"    pm.expect(jsonData.message).to.contain(\"Invalid Scheduling. Start date is in the past\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"scheduling\": {\n    \"startDate\": \"2020-08-30T20:19:12Z\"\n}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateScheduling_endDateInPast_shouldFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 400\", function () {",
							"    pm.response.to.have.status(400);",
							"    pm.expect(jsonData.message).to.contain(\"Invalid Scheduling. End date is in the past\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"scheduling\": {\n    \"endDate\": \"2020-08-30T20:19:12Z\"\n}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateScheduling_endDateBeforeStartDate_shouldFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 400\", function () {",
							"    pm.response.to.have.status(400);",
							"    pm.expect(jsonData.message).to.contain(\"Invalid Scheduling. End date must be after the start date\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"scheduling\": {\n    \"startDate\": \"2051-08-30T20:19:12Z\",\n    \"endDate\": \"2050-08-30T20:19:12Z\"\n}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateScheduling_experimentDurationMoreThanMax_shouldFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 400\", function () {",
							"    pm.response.to.have.status(400);",
							"    pm.expect(jsonData.message).to.contain(\"Experiment duration must be less than 35 days\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"scheduling\": {\n    \"startDate\": \"2051-08-30T20:19:12Z\",\n    \"endDate\": \"2052-08-30T20:19:12Z\"\n}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateExperimentLookbackWindow_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity.description).equal(\"my patched experiment description\");",
							"    pm.expect(jsonData.entity.name).equal(\"my patched experiment\");",
							"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
							"    pm.expect(jsonData.entity.modDate).is.not.null;",
							"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
							"    pm.expect(jsonData.entity.trafficAllocation).equal(20.0);",
							"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
							"    pm.expect(jsonData.entity.lookbackWindow).equal(20);",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"lookbackWindow\": 20  \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "createDraftExperiment_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity.description).equal(\"my experiment description\");",
							"    pm.expect(jsonData.entity.name).equal(\"my experiment\");",
							"    pm.expect(jsonData.entity.pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
							"    pm.expect(jsonData.entity.modDate).is.not.null;",
							"    pm.expect(jsonData.entity.status).equal(\"DRAFT\");",
							"    pm.expect(jsonData.entity.trafficAllocation).equal(100.0);",
							"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
							"});",
							"",
							"pm.collectionVariables.set(\"draftExperimentId\", jsonData.entity.id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"my experiment\",\n    \"description\": \"my experiment description\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteExperiment_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData.entity).equal(\"Experiment deleted\");",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{draftExperimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{draftExperimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "listExperimentsByPageId_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Lists of experiments should not be empty\", function () {",
							"    pm.expect(jsonData.entity.length).to.be.greaterThan(0);",
							"});",
							"",
							"pm.test(\"All returned experiments should have the pageId in the filter\", function () {",
							"    pm.expect(jsonData.entity.length).to.be.eq(2);",
							"    for(let i in jsonData.entity) {",
							"        let experiment = jsonData.entity[i]",
							"        pm.expect(experiment.pageId).to.be.eq('e424abd7e2e7a9031c5a0a3c18182f1b');",
							"    }",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments?pageId=e424abd7e2e7a9031c5a0a3c18182f1b",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments"
					],
					"query": [
						{
							"key": "pageId",
							"value": "e424abd7e2e7a9031c5a0a3c18182f1b"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pre_ImportBundleWithSecondPage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Bundle uploaded sucessfully\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"",
							"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"second-experiment-page.tar.gz\");",
							"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/octet-stream"
					},
					{
						"key": "Content-Disposition",
						"type": "text",
						"value": "attachment"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "resources/Experiments/second-experiment-page.tar.gz"
						}
					]
				},
				"url": {
					"raw": "{{serverURL}}/api/bundle?sync=true",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"bundle"
					],
					"query": [
						{
							"key": "sync",
							"value": "true"
						},
						{
							"key": "AUTH_TOKEN",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Imports a Bundle that includes:\n* A piece of content with a tag field without any tags selected"
			},
			"response": []
		},
		{
			"name": "pre_createExperimentInSecondPage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.collectionVariables.set(\"secondExperimentId\", jsonData.entity.id);",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"pageId\": \"9044ec0fdb3788a814ccabf789f376d4\",\n    \"name\": \"second page experiment\",\n    \"description\": \"second page experiment description\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "listExperimentsNoFilter_shouldIncludeAll",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Lists of experiments should not be empty\", function () {",
							"    pm.expect(jsonData.entity.length).to.be.greaterThan(0);",
							"});",
							"",
							"pm.test(\"The two experiments with different pageId are included\", function () {",
							"    let experiment1ID = pm.collectionVariables.get(\"experimentId\")",
							"    let experiment2ID = pm.collectionVariables.get(\"secondExperimentId\");",
							"    pm.expect(isExperimentIncluded(experiment1ID)).to.be.true;",
							"    pm.expect(isExperimentIncluded(experiment2ID)).to.be.true;",
							"});",
							"",
							"function isExperimentIncluded(id) {",
							"    for(let i in jsonData.entity) {",
							"        let experiment = jsonData.entity[i]",
							"        if(experiment.id===id) return true;",
							"    }",
							"",
							"    return false;",
							"}",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments"
					]
				}
			},
			"response": []
		},
		{
			"name": "listExperimentsFilterBySingleStatus_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Lists of experiments should not be empty\", function () {",
							"    pm.expect(jsonData.entity.length).to.be.greaterThan(0);",
							"});",
							"",
							"pm.test(\"All returned experiments should have the status DRAFT\", function () {",
							"    for(let i in jsonData.entity) {",
							"        let experiment = jsonData.entity[i]",
							"        pm.expect(experiment.status).to.be.eq('DRAFT');",
							"    }",
							"});",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments?status=DRAFT",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments"
					],
					"query": [
						{
							"key": "status",
							"value": "DRAFT"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pre_createExperimentUniqueName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"pageId\": \"9044ec0fdb3788a814ccabf789f376d4\",\n    \"name\": \"20220901\",\n    \"description\": \"second page experiment description\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "listExperimentsFilterByName_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Lists of experiments should not be empty\", function () {",
							"    pm.expect(jsonData.entity.length).to.be.greaterThan(0);",
							"});",
							"",
							"pm.test(\"Experiments with DRAFT and ENDED statuses returned\", function () {",
							"    pm.expect(jsonData.entity[0].name).to.be.eq('20220901')",
							"});",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments?name=20220901",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments"
					],
					"query": [
						{
							"key": "name",
							"value": "20220901"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "listExperimentsFilterByPartialName_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Lists of experiments should not be empty\", function () {",
							"    pm.expect(jsonData.entity.length).to.be.greaterThan(0);",
							"});",
							"",
							"pm.test(\"Experiments with DRAFT and ENDED statuses returned\", function () {",
							"    pm.expect(jsonData.entity[0].name).to.be.eq('20220901')",
							"});",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments?name=2022",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments"
					],
					"query": [
						{
							"key": "name",
							"value": "2022"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "setExperimentGoal_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
							"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referrer\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referrer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "setExperimentGoal_InvalidCondition_ShouldFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Expected error message\", function () {",
							"    pm.expect(jsonData.message).equal(\"Invalid Parameters provided: [does-not-exist]\")",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"does-not-exist\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "setExperimentGoal_MissingRequiredParameter_ShouldFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Expected error message\", function () {",
							"    pm.expect(jsonData.message).equal(\"Missing required Parameters: [url]\")",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"referrer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "setExperimentGoal_MissingAllRequiredParameter_ShouldFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Expected error message\", function () {",
							"    pm.expect(jsonData.message).equal(\"At least one of these are required Parameters: [id, class, target]\")",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"CLICK_ON_ELEMENT\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"pageUrl\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "removeExperimentGoal_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have null goals\", function () {",
							"    pm.expect(jsonData.entity.goals).is.null;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}/goals/primary",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}",
						"goals",
						"primary"
					]
				}
			},
			"response": []
		},
		{
			"name": "setExperimentGoal_ProvideAtLeastOneRequiredParameter_ShouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Expected Goal with two Conditions created\", function () {",
							"    pm.expect(jsonData.entity.goals.primary.conditions.length).to.be.eq(2)",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"CLICK_ON_ELEMENT\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"pageUrl\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }, \n                {\n                    \"parameter\": \"id\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"my-button\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "pre_createExperiment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.collectionVariables.set(\"experimentToAddVariant\", jsonData.entity.id);",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"pageId\": \"9044ec0fdb3788a814ccabf789f376d4\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referrer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "addVariantToExperiment_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Variants with correct weight\", function () {",
							"    var experimetnShortId = pm.collectionVariables.get(\"experimentToAddVariant\").substring(0, 11).replace('-', '');",
							"",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
							"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
							"    pm.expect(jsonData.entity.trafficProportion.variants[0].url).equal(\"/another-experiment-page?variantName=dotexperiment-\" + experimetnShortId + \"-variant-1\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"My first Variant\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
							"    pm.expect(jsonData.entity.trafficProportion.variants[1].url).equal(\"/another-experiment-page?variantName=dotexperiment-\" + experimetnShortId + \"-variant-2\");",
							"    ",
							"    pm.collectionVariables.set(\"variantToDelete\", jsonData.entity.trafficProportion.variants[1].id);",
							"",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"My first Variant\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}/variants",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentToAddVariant}}",
						"variants"
					]
				}
			},
			"response": []
		},
		{
			"name": "addSecondVariantToExperiment_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Variants with correct weight\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(3);",
							"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(33.333332);",
							"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"My first Variant\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(33.333332);",
							"    pm.expect(jsonData.entity.trafficProportion.variants[2].name).equal(\"My second Variant\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants[2].weight).equal(33.333332);",
							"",
							"    pm.collectionVariables.set(\"secondVariantId\", jsonData.entity.trafficProportion.variants[2].id);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"My second Variant\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}/variants",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentToAddVariant}}",
						"variants"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteVariantOfExperiment_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Started Experiment with expected values\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
							"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
							"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"My second Variant\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}/variants/{{variantToDelete}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentToAddVariant}}",
						"variants",
						"{{variantToDelete}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateExperimentTrafficProportion_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Variants with correct weight\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"CUSTOM_PERCENTAGES\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
							"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(80.0);",
							"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"Variant 2\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(20.0);",
							"",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"trafficProportion\": {\n        \"type\": \"CUSTOM_PERCENTAGES\",\n        \"variants\": [\n            {\n                \"name\": \"Original\",\n                \"id\": \"DEFAULT\",\n                \"weight\": 80\n            },\n            {\n                \"name\": \"Variant 2\",\n                \"id\": \"{{secondVariantId}}\",\n                \"weight\": 20\n            }\n        ]\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentToAddVariant}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "addVariantToExperiment_CustomPercentages_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Variants with correct weight\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"CUSTOM_PERCENTAGES\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(3);",
							"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(80.0);",
							"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"My third Variant\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(0.0);",
							"    pm.expect(jsonData.entity.trafficProportion.variants[2].name).equal(\"Variant 2\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants[2].weight).equal(20.0);",
							"",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"My third Variant\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}/variants",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentToAddVariant}}",
						"variants"
					]
				}
			},
			"response": []
		},
		{
			"name": "startExperiment_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Started Experiment with expected values\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData.entity.status).equal(\"RUNNING\");",
							"    pm.expect(jsonData.entity.scheduling.startDate).to.be.not.null;",
							"    pm.expect(jsonData.entity.scheduling.endDate).to.be.not.null;",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}/_start",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentToAddVariant}}",
						"_start"
					]
				}
			},
			"response": []
		},
		{
			"name": "pre_createExperiment_NoGoal_NoVariant",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.collectionVariables.set(\"experimentNoGoalsId\", jsonData.entity.id);",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"pageId\": \"9044ec0fdb3788a814ccabf789f376d4\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "startExperiment_MissingVariants_shouldFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Experiment without Goal should fail\", function () {",
							"    pm.response.to.have.status(400);",
							"    pm.expect(jsonData.message).equal(\"The Experiment needs at least one Page Variant in order to be started.\");",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentNoGoalsId}}/_start",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentNoGoalsId}}",
						"_start"
					]
				}
			},
			"response": []
		},
		{
			"name": "pre_addVariantToExperiment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Variants with correct weight\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData.entity.trafficProportion.type).equal(\"SPLIT_EVENLY\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants.length).equal(2);",
							"    pm.expect(jsonData.entity.trafficProportion.variants[0].name).equal(\"Original\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants[0].weight).equal(50.0);",
							"    pm.expect(jsonData.entity.trafficProportion.variants[1].name).equal(\"Some other Variant\");",
							"    pm.expect(jsonData.entity.trafficProportion.variants[1].weight).equal(50.0);",
							"",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Some other Variant\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentNoGoalsId}}/variants",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentNoGoalsId}}",
						"variants"
					]
				}
			},
			"response": []
		},
		{
			"name": "startExperiment_MissingGoal_shouldFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Experiment without Goal should fail\", function () {",
							"    pm.response.to.have.status(400);",
							"    pm.expect(jsonData.message).equal(\"The Experiment needs to have the Goal set.\");",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentNoGoalsId}}/_start",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentNoGoalsId}}",
						"_start"
					]
				}
			},
			"response": []
		},
		{
			"name": "pre_setExperimentGoal",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
							"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referrer\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referrer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentNoGoalsId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentNoGoalsId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "startExperiment_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Started Experiment with expected values\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData.entity.status).equal(\"RUNNING\");",
							"    pm.expect(jsonData.entity.scheduling.startDate).to.be.not.null;",
							"    pm.expect(jsonData.entity.scheduling.endDate).to.be.not.null;",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentNoGoalsId}}/_start",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentNoGoalsId}}",
						"_start"
					]
				}
			},
			"response": []
		},
		{
			"name": "startAlreadyStarterExperiment_shouldFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 400\", function () {",
							"    pm.response.to.have.status(400);",
							"    pm.expect(jsonData.message).equal(\"Cannot start an already started Experiment.\");",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentNoGoalsId}}/_start",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentNoGoalsId}}",
						"_start"
					]
				}
			},
			"response": []
		},
		{
			"name": "endExperiment_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Ended Experiment with expected values\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData.entity.status).equal(\"ENDED\");",
							"    pm.expect(jsonData.entity.scheduling.startDate).to.be.not.null;",
							"    pm.expect(jsonData.entity.scheduling.endDate).to.be.not.null;",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentNoGoalsId}}/_end",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentNoGoalsId}}",
						"_end"
					]
				}
			},
			"response": []
		},
		{
			"name": "pre_createExperiment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.collectionVariables.set(\"experimentTargeting\", jsonData.entity.id);",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"20220901\",\n    \"description\": \"experiment with goals and variants\", \n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referrer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "addTargetingConditions_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
							"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referrer\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
							"    pm.expect(jsonData.entity.targetingConditions.length).equal(3);",
							"",
							"});",
							"",
							"pm.collectionVariables.set(\"conditionId\", jsonData.entity.targetingConditions[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"targetingConditions\": [\n        {\n            \"conditionKey\": \"UsersBrowserConditionlet\",\n             \"values\": {\n                 \"comparison\": \"is\", \n                 \"browser\": \"Chrome\"\n             }   \n        }, \n        {\n            \"conditionKey\": \"UsersPlatformConditionlet\",\n             \"values\": {\n                 \"comparison\": \"is\", \n                 \"platform\": \"MOBILE\"\n             }   \n        }, \n        {\n            \"conditionKey\": \"VisitorsGeolocationConditionlet\",\n             \"values\": {\n                 \"comparison\": \"withinDistance\", \n                 \"latitude\": \"38.8977\", \n                 \"longitude\": \"-77.0365\", \n                 \"preferredDisplayUnits\": \"mi\", \n                 \"radius\": \"16191.182801892148\"\n             }   \n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentTargeting}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentTargeting}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateTargetingConditions_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity.goals.primary.type).equal(\"REACH_PAGE\");",
							"    pm.expect(jsonData.entity.goals.primary.name).equal(\"Reach thank-you page\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[0].operator).equal(\"EQUALS\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[0].parameter).equal(\"url\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[0].value).equal(\"thank-you\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[1].operator).equal(\"EQUALS\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[1].parameter).equal(\"referrer\");",
							"    pm.expect(jsonData.entity.goals.primary.conditions[1].value).equal(\"home\");",
							"    pm.expect(jsonData.entity.targetingConditions.length).equal(3);",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"targetingConditions\": [\n        {\n            \"id\": \"{{conditionId}}\",\n            \"conditionKey\": \"UsersBrowserConditionlet\",\n             \"values\": {\n                 \"comparison\": \"is\", \n                 \"browser\": \"Firefox\"\n             }   \n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentTargeting}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentTargeting}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteTargetingCondition_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Started Experiment with expected values\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData.entity.targetingConditions.length).equal(2);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentTargeting}}/targetingConditions/{{conditionId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentTargeting}}",
						"targetingConditions",
						"{{conditionId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Stop Experiment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"pageId\": \"{{page_id}}\",\n    \"name\": \"Add/Remove content Experiment\",\n    \"description\": \"Expriment ro Add/Remove contentlet from a specific variant page\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentToAddVariant}}/_end",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentToAddVariant}}",
						"_end"
					]
				},
				"description": "Create a new Experiment named \"Add/Remove content Experiment\" with the page created in the previous request."
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "experimentId",
			"value": ""
		},
		{
			"key": "secondExperimentId",
			"value": ""
		},
		{
			"key": "draftExperimentId",
			"value": ""
		},
		{
			"key": "experimentToStartId",
			"value": ""
		},
		{
			"key": "experimentNoGoalsId",
			"value": ""
		},
		{
			"key": "experimentNoVariantsId",
			"value": ""
		},
		{
			"key": "experimentToAddVariant",
			"value": ""
		},
		{
			"key": "variantToDelete",
			"value": ""
		},
		{
			"key": "secondVariantId",
			"value": ""
		},
		{
			"key": "experimentTargeting",
			"value": ""
		},
		{
			"key": "conditionId",
			"value": ""
		},
		{
			"key": "experimentGet",
			"value": ""
		}
	]
}