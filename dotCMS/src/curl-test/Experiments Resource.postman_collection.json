{
	"info": {
		"_postman_id": "e5dcdca9-3383-4796-b294-c7e6a5846074",
		"name": "Experiments Resource",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4500400"
	},
	"item": [
		{
			"name": "pre_ImportBundleWithPage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Bundle uploaded sucessfully\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"",
							"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"page_experiment.tar.gz\");",
							"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/octet-stream"
					},
					{
						"key": "Content-Disposition",
						"type": "text",
						"value": "attachment"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "resources/Experiments/page_experiment.tar.gz"
						}
					]
				},
				"url": {
					"raw": "{{serverURL}}/api/bundle?sync=true",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"bundle"
					],
					"query": [
						{
							"key": "sync",
							"value": "true"
						},
						{
							"key": "AUTH_TOKEN",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Imports a Bundle that includes:\n* A piece of content with a tag field without any tags selected"
			},
			"response": []
		},
		{
			"name": "createExperiment_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity[0].description).equal(\"my experiment description\");",
							"    pm.expect(jsonData.entity[0].name).equal(\"my experiment\");",
							"    pm.expect(jsonData.entity[0].pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
							"    pm.expect(jsonData.entity[0].modDate).is.not.null;",
							"    pm.expect(jsonData.entity[0].status).equal(\"DRAFT\");",
							"    pm.expect(jsonData.entity[0].trafficAllocation).equal(100.0);",
							"    pm.expect(jsonData.entity[0].trafficProportion.type).equal(\"SPLIT_EVENLY\");",
							"});",
							"",
							"pm.collectionVariables.set(\"experimentId\", jsonData.entity[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"my experiment\",\n    \"description\": \"my experiment description\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "updateExperimentNameAndDesc_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity[0].description).equal(\"my patched experiment description\");",
							"    pm.expect(jsonData.entity[0].name).equal(\"my patched experiment\");",
							"    pm.expect(jsonData.entity[0].pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
							"    pm.expect(jsonData.entity[0].modDate).is.not.null;",
							"    pm.expect(jsonData.entity[0].status).equal(\"DRAFT\");",
							"    pm.expect(jsonData.entity[0].trafficAllocation).equal(100.0);",
							"    pm.expect(jsonData.entity[0].trafficProportion.type).equal(\"SPLIT_EVENLY\");",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"my patched experiment\",\n    \"description\": \"my patched experiment description\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateExperimentTrafficProportion_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity[0].description).equal(\"my patched experiment description\");",
							"    pm.expect(jsonData.entity[0].name).equal(\"my patched experiment\");",
							"    pm.expect(jsonData.entity[0].pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
							"    pm.expect(jsonData.entity[0].modDate).is.not.null;",
							"    pm.expect(jsonData.entity[0].status).equal(\"DRAFT\");",
							"    pm.expect(jsonData.entity[0].trafficAllocation).equal(100.0);",
							"    pm.expect(jsonData.entity[0].trafficProportion.type).equal(\"CUSTOM_PERCENTAGES\");",
							"    pm.expect(jsonData.entity[0].trafficProportion.percentages.variant1).equal(50.0);",
							"    pm.expect(jsonData.entity[0].trafficProportion.percentages.variant2).equal(50.0);",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"trafficProportion\": {\"type\": \"CUSTOM_PERCENTAGES\", \"percentages\": {\n        \"variant1\": \"50\",\n        \"variant2\": \"50\"\n    }}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateExperimentTrafficAllocation_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity[0].description).equal(\"my patched experiment description\");",
							"    pm.expect(jsonData.entity[0].name).equal(\"my patched experiment\");",
							"    pm.expect(jsonData.entity[0].pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
							"    pm.expect(jsonData.entity[0].modDate).is.not.null;",
							"    pm.expect(jsonData.entity[0].status).equal(\"DRAFT\");",
							"    pm.expect(jsonData.entity[0].trafficAllocation).equal(20.0);",
							"    pm.expect(jsonData.entity[0].trafficProportion.type).equal(\"CUSTOM_PERCENTAGES\");",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"trafficAllocation\": 20  \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "updateExperimentStartAndEndDate_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity[0].description).equal(\"my patched experiment description\");",
							"    pm.expect(jsonData.entity[0].name).equal(\"my patched experiment\");",
							"    pm.expect(jsonData.entity[0].pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
							"    pm.expect(jsonData.entity[0].modDate).is.not.null;",
							"    pm.expect(jsonData.entity[0].scheduling.startDate).to.include(\"2022-08-30T20:19:12Z\");",
							"    pm.expect(jsonData.entity[0].scheduling.endDate).to.include(\"2022-08-30T20:19:12Z\");",
							"    pm.expect(jsonData.entity[0].status).equal(\"DRAFT\");",
							"    pm.expect(jsonData.entity[0].trafficAllocation).equal(20.0);",
							"    pm.expect(jsonData.entity[0].trafficProportion.type).equal(\"CUSTOM_PERCENTAGES\");",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"scheduling\": {\n    \"startDate\": \"2022-08-30T20:19:12Z\",\n    \"endDate\": \"2022-08-30T20:19:12Z\"\n    \n}}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "createDraftExperiment_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity[0].description).equal(\"my experiment description\");",
							"    pm.expect(jsonData.entity[0].name).equal(\"my experiment\");",
							"    pm.expect(jsonData.entity[0].pageId).equal(\"e424abd7e2e7a9031c5a0a3c18182f1b\");",
							"    pm.expect(jsonData.entity[0].modDate).is.not.null;",
							"    pm.expect(jsonData.entity[0].status).equal(\"DRAFT\");",
							"    pm.expect(jsonData.entity[0].trafficAllocation).equal(100.0);",
							"    pm.expect(jsonData.entity[0].trafficProportion.type).equal(\"SPLIT_EVENLY\");",
							"});",
							"",
							"pm.collectionVariables.set(\"draftExperimentId\", jsonData.entity[0].id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"pageId\": \"e424abd7e2e7a9031c5a0a3c18182f1b\",\n    \"name\": \"my experiment\",\n    \"description\": \"my experiment description\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "deleteExperiment_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.expect(jsonData.entity).equal(\"Experiment deleted\");",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{draftExperimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{draftExperimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "listExperimentsByPageId_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Lists of experiments should not be empty\", function () {",
							"    pm.expect(jsonData.entity.length).to.be.greaterThan(0);",
							"});",
							"",
							"pm.test(\"All returned experiments should have the pageId in the filter\", function () {",
							"    pm.expect(jsonData.entity.length).to.be.eq(1);",
							"    for(let i in jsonData.entity) {",
							"        let experiment = jsonData.entity[i]",
							"        pm.expect(experiment.pageId).to.be.eq('e424abd7e2e7a9031c5a0a3c18182f1b');",
							"    }",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments?pageId=e424abd7e2e7a9031c5a0a3c18182f1b",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments"
					],
					"query": [
						{
							"key": "pageId",
							"value": "e424abd7e2e7a9031c5a0a3c18182f1b"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pre_ImportBundleWithSecondPage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Bundle uploaded sucessfully\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"",
							"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"second-experiment-page.tar.gz\");",
							"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/octet-stream"
					},
					{
						"key": "Content-Disposition",
						"type": "text",
						"value": "attachment"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "resources/Experiments/second-experiment-page.tar.gz"
						}
					]
				},
				"url": {
					"raw": "{{serverURL}}/api/bundle?sync=true",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"bundle"
					],
					"query": [
						{
							"key": "sync",
							"value": "true"
						},
						{
							"key": "AUTH_TOKEN",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Imports a Bundle that includes:\n* A piece of content with a tag field without any tags selected"
			},
			"response": []
		},
		{
			"name": "pre_createExperimentInSecondPage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.collectionVariables.set(\"secondExperimentId\", jsonData.entity[0].id);",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"pageId\": \"9044ec0fdb3788a814ccabf789f376d4\",\n    \"name\": \"second page experiment\",\n    \"description\": \"second page experiment description\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "listExperimentsNoFilter_shouldIncludeAll",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Lists of experiments should not be empty\", function () {",
							"    pm.expect(jsonData.entity.length).to.be.greaterThan(0);",
							"});",
							"",
							"pm.test(\"The two experiments with different pageId are included\", function () {",
							"    let experiment1ID = pm.collectionVariables.get(\"experimentId\")",
							"    let experiment2ID = pm.collectionVariables.get(\"secondExperimentId\");",
							"    pm.expect(isExperimentIncluded(experiment1ID)).to.be.true;",
							"    pm.expect(isExperimentIncluded(experiment2ID)).to.be.true;",
							"});",
							"",
							"function isExperimentIncluded(id) {",
							"    for(let i in jsonData.entity) {",
							"        let experiment = jsonData.entity[i]",
							"        if(experiment.id===id) return true;",
							"    }",
							"",
							"    return false;",
							"}",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments"
					]
				}
			},
			"response": []
		},
		{
			"name": "listExperimentsFilterBySingleStatus_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Lists of experiments should not be empty\", function () {",
							"    pm.expect(jsonData.entity.length).to.be.greaterThan(0);",
							"});",
							"",
							"pm.test(\"All returned experiments should have the status DRAFT\", function () {",
							"    for(let i in jsonData.entity) {",
							"        let experiment = jsonData.entity[i]",
							"        pm.expect(experiment.status).to.be.eq('DRAFT');",
							"    }",
							"});",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments?status=DRAFT",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments"
					],
					"query": [
						{
							"key": "status",
							"value": "DRAFT"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "pre_createExperimentUniqueName",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"pageId\": \"9044ec0fdb3788a814ccabf789f376d4\",\n    \"name\": \"20220901\",\n    \"description\": \"second page experiment description\" \n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "listExperimentsFilterByName_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Lists of experiments should not be empty\", function () {",
							"    pm.expect(jsonData.entity.length).to.be.greaterThan(0);",
							"});",
							"",
							"pm.test(\"Experiments with DRAFT and ENDED statuses returned\", function () {",
							"    pm.expect(jsonData.entity[0].name).to.be.eq('20220901')",
							"});",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments?name=20220901",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments"
					],
					"query": [
						{
							"key": "name",
							"value": "20220901"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "listExperimentsFilterByPartialName_shouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Lists of experiments should not be empty\", function () {",
							"    pm.expect(jsonData.entity.length).to.be.greaterThan(0);",
							"});",
							"",
							"pm.test(\"Experiments with DRAFT and ENDED statuses returned\", function () {",
							"    pm.expect(jsonData.entity[0].name).to.be.eq('20220901')",
							"});",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments?name=2022",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments"
					],
					"query": [
						{
							"key": "name",
							"value": "2022"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "setExperimentGoal_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity[0].goals.primary.type).equal(\"REACH_PAGE\");",
							"    pm.expect(jsonData.entity[0].goals.primary.name).equal(\"Reach thank-you page\");",
							"    pm.expect(jsonData.entity[0].goals.primary.conditions[0].operator).equal(\"EQUALS\");",
							"    pm.expect(jsonData.entity[0].goals.primary.conditions[0].parameter).equal(\"url\");",
							"    pm.expect(jsonData.entity[0].goals.primary.conditions[0].value).equal(\"thank-you\");",
							"    pm.expect(jsonData.entity[0].goals.primary.conditions[1].operator).equal(\"EQUALS\");",
							"    pm.expect(jsonData.entity[0].goals.primary.conditions[1].parameter).equal(\"referrer\");",
							"    pm.expect(jsonData.entity[0].goals.primary.conditions[1].value).equal(\"home\");",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referrer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "setExperimentGoal_InvalidCondition_ShouldFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Expected error message\", function () {",
							"    pm.expect(jsonData.message).equal(\"Invalid Parameters provided: [does-not-exist]\")",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"does-not-exist\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "setExperimentGoal_MissingRequiredParameter_ShouldFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Expected error message\", function () {",
							"    pm.expect(jsonData.message).equal(\"Missing required Parameters: [url]\")",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"referrer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "setExperimentGoal_MissingAllRequiredParameter_ShouldFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Expected error message\", function () {",
							"    pm.expect(jsonData.message).equal(\"At least one of these are required Parameters: [id, class, target]\")",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"CLICK_ON_ELEMENT\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"pageUrl\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "removeExperimentGoal_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have null goals\", function () {",
							"    pm.expect(jsonData.entity[0].goals).is.null;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}/goals/primary",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}",
						"goals",
						"primary"
					]
				}
			},
			"response": []
		},
		{
			"name": "setExperimentGoal_ProvideAtLeastOneRequiredParameter_ShouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Expected Goal with two Conditions created\", function () {",
							"    pm.expect(jsonData.entity[0].goals.primary.conditions.length).to.be.eq(2)",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"CLICK_ON_ELEMENT\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"pageUrl\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }, \n                {\n                    \"parameter\": \"id\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"my-button\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "setExperimentGoal_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have the expected values\", function () {",
							"    pm.expect(jsonData.entity[0].goals.primary.type).equal(\"REACH_PAGE\");",
							"    pm.expect(jsonData.entity[0].goals.primary.name).equal(\"Reach thank-you page\");",
							"    pm.expect(jsonData.entity[0].goals.primary.conditions[0].operator).equal(\"EQUALS\");",
							"    pm.expect(jsonData.entity[0].goals.primary.conditions[0].parameter).equal(\"url\");",
							"    pm.expect(jsonData.entity[0].goals.primary.conditions[0].value).equal(\"thank-you\");",
							"    pm.expect(jsonData.entity[0].goals.primary.conditions[1].operator).equal(\"EQUALS\");",
							"    pm.expect(jsonData.entity[0].goals.primary.conditions[1].parameter).equal(\"referrer\");",
							"    pm.expect(jsonData.entity[0].goals.primary.conditions[1].value).equal(\"home\");",
							"",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"referrer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "setExperimentGoal_InvalidCondition_ShouldFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Expected error message\", function () {",
							"    pm.expect(jsonData.message).equal(\"Invalid Parameters provided: [does-not-exist]\")",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"thank-you\"\n                },\n                {\n                    \"parameter\": \"does-not-exist\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "setExperimentGoal_MissingRequiredParameter_ShouldFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Expected error message\", function () {",
							"    pm.expect(jsonData.message).equal(\"Missing required Parameters: [url]\")",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"referrer\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "setExperimentGoal_MissingAllRequiredParameter_ShouldFail",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Expected error message\", function () {",
							"    pm.expect(jsonData.message).equal(\"At least one of these are required Parameters: [id, class, target]\")",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"CLICK_ON_ELEMENT\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"pageUrl\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "removeExperimentGoal_shoudSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Experiment should have null goals\", function () {",
							"    pm.expect(jsonData.entity[0].goals).is.null;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}/goals/primary",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}",
						"goals",
						"primary"
					]
				}
			},
			"response": []
		},
		{
			"name": "setExperimentGoal_ProvideAtLeastOneRequiredParameter_ShouldSucceed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"",
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Expected Goal with two Conditions created\", function () {",
							"    pm.expect(jsonData.entity[0].goals.primary.conditions.length).to.be.eq(2)",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"CLICK_ON_ELEMENT\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"pageUrl\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }, \n                {\n                    \"parameter\": \"id\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"my-button\"\n                }\n            ]\n        }\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"experiments",
						"{{experimentId}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "experimentId",
			"value": ""
		},
		{
			"key": "secondExperimentId",
			"value": ""
		},
		{
			"key": "draftExperimentId",
			"value": ""
		}
	]
}