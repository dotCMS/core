{
	"info": {
		"_postman_id": "41bd0de1-555f-4acd-8cfb-ad307d624d71",
		"name": "User Include Into Experiment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1549189"
	},
	"item": [
		{
			"name": "One Experiment - no rules - 100% traffic location",
			"item": [
				{
					"name": "Create page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.set(\"page_id\", jsonData.entity.identifier);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \n    \"contentlet\" : {\n        \"title\" : \"page_isUserIncluded_1\",\n        \"languageId\" : 1,\n        \"stInode\": \"c541abb1-69b3-4bc5-8430-5e09e5239cc8\",\n        \"url\": \"page_isUserIncluded_1\",\n        \"hostFolder\": \"8a7d5e23-da1e-420a-b4f0-471e7da8ea2d\",\n        \"template\": \"SYSTEM_TEMPLATE\",\n        \"cachettl\": 0,\n        \"friendlyName\": \"friendlyName\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							]
						}
					},
					"response": []
				},
				{
					"name": "createDraftExperiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.set(\"experimentId\", jsonData.entity.id);",
									"pm.collectionVariables.set(\"experimentShortId\", jsonData.entity.id.substring(0, 11).replace('-', ''));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"{{page_id}}\",\n    \"name\": \"Add/Remove content Experiment\",\n    \"description\": \"Expriment ro Add/Remove contentlet from a specific variant page\" ,\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								""
							]
						},
						"description": "Create a new Experiment named \"Add/Remove content Experiment\" with the page created in the previous request."
					},
					"response": []
				},
				{
					"name": "addVariantToExperiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Variants with correct weight\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Variant to Add/Remove contentlet test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}/variants",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentId}}",
								"variants"
							]
						},
						"description": "Create a new variant into the previous created experiment"
					},
					"response": []
				},
				{
					"name": "Starting Experiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"{{page_id}}\",\n    \"name\": \"Add/Remove content Experiment\",\n    \"description\": \"Expriment ro Add/Remove contentlet from a specific variant page\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}/_start",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentId}}",
								"_start"
							]
						},
						"description": "Create a new Experiment named \"Add/Remove content Experiment\" with the page created in the previous request."
					},
					"response": []
				},
				{
					"name": "isUserIncluded",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    pm.expect(jsonData.entity[0].id).to.be.eq(pm.variables.get(\"experimentId\"));",
									"",
									"    pm.expect(jsonData.entity[0].pageUrl).to.be.eq(\"page_isUserIncluded_1\");",
									"    var cookie = postman.getResponseCookie('runningExperiment');",
									"    pm.expect(cookie).to.not.eq(null);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/isUserIncluded",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"isUserIncluded"
							]
						}
					},
					"response": []
				},
				{
					"name": "Stop Experiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"{{page_id}}\",\n    \"name\": \"Add/Remove content Experiment\",\n    \"description\": \"Expriment ro Add/Remove contentlet from a specific variant page\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}/_end",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentId}}",
								"_end"
							]
						},
						"description": "Create a new Experiment named \"Add/Remove content Experiment\" with the page created in the previous request."
					},
					"response": []
				}
			],
			"description": "Steps in this Test:\n\n*   Create a new Page, it is going to be blank but it really no matter for this test\n*   Create a new Experiment.\n*   Create a new Variant for the Experiment created before.\n*   Start this Experiment.\n*   Call the isUserInclude it should:\n    *   Return the Experiment all the time\n    *   Return the url of the page\n    *   Create the cookie"
		},
		{
			"name": "One Experiment - with rules - 100% traffic location",
			"item": [
				{
					"name": "Create page",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.set(\"page_id\", jsonData.entity.identifier);",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \n    \"contentlet\" : {\n        \"title\" : \"page_isUserIncluded_2\",\n        \"languageId\" : 1,\n        \"stInode\": \"c541abb1-69b3-4bc5-8430-5e09e5239cc8\",\n        \"url\": \"page_isUserIncluded_2\",\n        \"hostFolder\": \"8a7d5e23-da1e-420a-b4f0-471e7da8ea2d\",\n        \"template\": \"SYSTEM_TEMPLATE\",\n        \"cachettl\": 0,\n        \"friendlyName\": \"friendlyName\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							]
						}
					},
					"response": []
				},
				{
					"name": "createDraftExperiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.set(\"experimentId\", jsonData.entity.id);",
									"pm.collectionVariables.set(\"experimentShortId\", jsonData.entity.id.substring(0, 11).replace('-', ''));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"{{page_id}}\",\n    \"name\": \"Add/Remove content Experiment\",\n    \"description\": \"Expriment ro Add/Remove contentlet from a specific variant page\" ,\n    \"goals\": {\n        \"primary\": {\n            \"name\": \"Reach thank-you page\",\n            \"type\": \"REACH_PAGE\",\n            \"conditions\": [\n                {\n                    \"parameter\": \"url\",\n                    \"operator\": \"EQUALS\",\n                    \"value\": \"home\"\n                }\n            ]\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								""
							]
						},
						"description": "Create a new Experiment named \"Add/Remove content Experiment\" with the page created in the previous request."
					},
					"response": []
				},
				{
					"name": "Add Rule into the experiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"targetingConditions\": [\n        {\n            \"conditionKey\": \"RequestParameterConditionlet\",\n             \"values\": {\n                 \"comparison\": \"is\", \n                 \"request-parameter\": \"Testing\",\n                 \"request-parameter-value\": \"Testing\"\n             }   \n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentId}}"
							]
						},
						"description": "Create a new Experiment named \"Add/Remove content Experiment\" with the page created in the previous request."
					},
					"response": []
				},
				{
					"name": "addVariantToExperiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"",
									"pm.test(\"Variants with correct weight\", function () {",
									"    pm.response.to.have.status(200);",
									"",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Variant to Add/Remove contentlet test\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}/variants",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentId}}",
								"variants"
							]
						},
						"description": "Create a new variant into the previous created experiment"
					},
					"response": []
				},
				{
					"name": "Starting Experiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"{{page_id}}\",\n    \"name\": \"Add/Remove content Experiment\",\n    \"description\": \"Expriment ro Add/Remove contentlet from a specific variant page\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}/_start",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentId}}",
								"_start"
							]
						},
						"description": "Create a new Experiment named \"Add/Remove content Experiment\" with the page created in the previous request."
					},
					"response": []
				},
				{
					"name": "isUserIncluded With parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    pm.expect(jsonData.entity[0].id).to.be.eq(pm.variables.get(\"experimentId\"));",
									"",
									"    pm.expect(jsonData.entity[0].pageUrl).to.be.eq(\"page_isUserIncluded_2\");",
									"    var cookie = postman.getResponseCookie('runningExperiment');",
									"    pm.expect(cookie).to.not.eq(null);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/isUserIncluded?Testing=Testing",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"isUserIncluded"
							],
							"query": [
								{
									"key": "Testing",
									"value": "Testing"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "isUserIncluded Without parameter",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"    ",
									"    pm.expect(jsonData.entity[0].id).to.be.eq(\"NONE\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/isUserIncluded",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"isUserIncluded"
							],
							"query": [
								{
									"key": "",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Stop Experiment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"pageId\": \"{{page_id}}\",\n    \"name\": \"Add/Remove content Experiment\",\n    \"description\": \"Expriment ro Add/Remove contentlet from a specific variant page\" \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/experiments/{{experimentId}}/_end",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"experiments",
								"{{experimentId}}",
								"_end"
							]
						},
						"description": "Create a new Experiment named \"Add/Remove content Experiment\" with the page created in the previous request."
					},
					"response": []
				}
			],
			"description": "Steps in this Test:\n\n*   Create a new Page, it is going to be blank but it really no matter for this test\n*   Create a new Experiment with a rules, the condition for this rule sis the should exists the 'Testing' parameter into the request.\n*   Create a new Variant for the Experiment created before.\n*   Start this Experiment.\n*   Call the isUserInclude with the query params, it should.\n    *   Return the Experiment.\n    *   Return the experiment page's url\n    *   Create the cookie.\n*   Call the isUserInclude without the query params, it should.\n    *   Return the NONE Experiment"
		}
	],
	"variable": [
		{
			"key": "page_id",
			"value": ""
		},
		{
			"key": "experimentId",
			"value": ""
		},
		{
			"key": "experimentShortId",
			"value": ""
		}
	]
}