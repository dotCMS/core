{
	"info": {
		"_postman_id": "b65639a1-cec6-4b6c-b8b6-ab483db33b5b",
		"name": "TempAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5403727"
	},
	"item": [
		{
			"name": "Temp File As Plain Text",
			"item": [
				{
					"name": "Create Temp File",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let randomNumber = Math.floor(Math.random() * 100);",
									"pm.collectionVariables.set(\"tempFileName\", randomNumber + \"-test-temp-file.txt\");"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test Temporary File creation HTTP Status must be successful\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.collectionVariables.set(\"tempFileId\", pm.response.json().tempFiles[0].id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Origin",
								"value": "localhost",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fileName\": \"{{tempFileName}}\",\n    \"fileContent\": \"This is the content of the Temporary File.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/temp/id/new",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"temp",
								"id",
								"new"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Existing Temp File Content",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test Temporary File update HTTP Status must be successful\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Temporary File ID must be the same\", function() {",
									"    let tempFileId = pm.collectionVariables.get(\"tempFileId\");",
									"    pm.expect(pm.response.json().tempFiles[0].id).to.eql(tempFileId, \"An error occurred when checking the temp file ID\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Origin",
								"value": "localhost",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fileName\": \"{{tempFileName}}\",\n    \"fileContent\": \"This is the new content of the Temporary File.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/temp/id/{{tempFileId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"temp",
								"id",
								"{{tempFileId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Non-Existent Temp File",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Non-Existing Test Temporary File creation HTTP Status must be successful\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"New Temporary File ID must NOT match the previous one\", function() {",
									"    let tempFileId = pm.collectionVariables.get(\"tempFileId\");",
									"    pm.expect(pm.response.json().tempFiles[0].id).to.not.eql(tempFileId, \"An error occurred when checking different temp file IDs\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let randomNumber = Math.floor(Math.random() * 100);",
									"pm.collectionVariables.set(\"tempFileName\", \"new-\" + randomNumber + \"-test-temp-file.txt\");"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Origin",
								"value": "localhost",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fileName\": \"{{tempFileName}}\",\n    \"fileContent\": \"Here is some test content.\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/temp/id/non-existent-id",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"temp",
								"id",
								"non-existent-id"
							]
						}
					},
					"response": []
				}
			],
			"description": "This request collection creates Temporary Files provided as plain text instead of binary files."
		},
		{
			"name": "Upload Multiple with one wrong file",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"File name check\", function () {",
							"    pm.expect(jsonData.tempFiles[0].fileName).to.eql('Landscape_2009_romantic_country_garden.jpeg');",
							"    pm.expect(jsonData.tempFiles[1].fileName).to.eql('16475687531_eac8a30914_b.jpeg');",
							"    pm.expect(jsonData.tempFiles[2].errorCode).to.eql('400');",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Origin",
						"value": "{{serverURL}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "resources/image/Landscape_2008_urban_park_and_plaza_Ankaran.jpeg"
						},
						{
							"key": "file",
							"type": "file",
							"src": "resources/image/Landscape_2009_romantic_country_garden.jpeg"
						},
						{
							"key": "file",
							"type": "file",
							"src": "resources/image/16475687531_eac8a30914_b.jpeg"
						}
					]
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/temp?maxFileLength=1MB",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"temp"
					],
					"query": [
						{
							"key": "maxFileLength",
							"value": "1MB"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Given_AnonUser_Unable_To_Upload",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableCookies": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Origin",
						"value": "{{serverURL}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "resources/image/Landscape_2009_romantic_country_garden.jpeg"
						},
						{
							"key": "file",
							"type": "file",
							"src": "resources/image/16475687531_eac8a30914_b.jpeg"
						}
					]
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/temp?maxFileLength=1MB",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"temp"
					],
					"query": [
						{
							"key": "maxFileLength",
							"value": "1MB"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "tempFileName",
			"value": ""
		},
		{
			"key": "tempFileId",
			"value": ""
		}
	]
}