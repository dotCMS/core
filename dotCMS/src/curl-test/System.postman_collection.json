{
	"info": {
		"_postman_id": "040258c6-4e99-4f42-a9f4-cdf4b6334562",
		"name": "System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "JVM",
			"item": [
				{
					"name": "JVM Info",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"JVM check\", function () {",
									"",
									"    //First lets make sure we have the 4 property holder objects.",
									"    pm.expect(jsonData).to.have.property(\"environment\");",
									"    pm.expect(jsonData).to.have.property(\"jvm\");",
									"    pm.expect(jsonData).to.have.property(\"host\");",
									"    pm.expect(jsonData).to.have.property(\"release\");",
									"",
									"    //Check some basic stuff we know we know is always there.",
									"    pm.expect(jsonData.environment.HOME).to.not.eql(\"\");",
									"    pm.expect(jsonData.environment.JAVA_HOME).to.not.eql(\"\");",
									"    pm.expect(jsonData.environment.CATALINA_PID).to.not.eql(\"\");",
									"    pm.expect(jsonData.environment.JAVA_OPTS).to.not.eql(\"\");",
									"",
									"    //Check all the properties listed in the resource.",
									"    pm.expect(jsonData.host.arch).to.not.eql(\"\");",
									"    pm.expect(jsonData.host.committedMemory).to.not.eql(\"\");",
									"    pm.expect(jsonData.host.cores).to.be.above(0);",
									"    pm.expect(jsonData.host.cpuLoadJava).to.not.eql(\"\");",
									"    pm.expect(jsonData.host.cpuLoadSystem).to.not.eql(\"\");",
									"    pm.expect(jsonData.host.freePhysicalMemory).to.not.eql(\"\");",
									"    pm.expect(jsonData.host.hostname).to.not.eql(\"\");",
									"    pm.expect(jsonData.host.os).to.not.eql(\"\");",
									"    pm.expect(jsonData.host.osVersion).to.not.eql(\"\");",
									"",
									"    pm.expect(jsonData.jvm.allocatedMemory).to.not.eql(\"\");",
									"    pm.expect(jsonData.jvm.freeMemory).to.not.eql(\"\");",
									"    pm.expect(jsonData.jvm.maxMemory).to.not.eql(\"\");",
									"    pm.expect(jsonData.jvm.startUpTime).to.not.eql(\"\");",
									"    pm.expect(jsonData.jvm.started).to.not.eql(\"\");",
									"    pm.expect(jsonData.jvm.vmName).to.not.eql(\"\");",
									"    pm.expect(jsonData.jvm.vmVendor).to.not.eql(\"\");",
									"    pm.expect(jsonData.jvm.vmVersion).to.not.eql(\"\");",
									"",
									"    pm.expect(jsonData.release.buildDate).to.not.eql(\"\");",
									"    pm.expect(jsonData.release.buildNumber).to.not.eql(\"\");",
									"    pm.expect(jsonData.release.codeName).to.not.eql(\"\");",
									"    pm.expect(jsonData.release.name).to.not.eql(\"\");",
									"    pm.expect(jsonData.release.releaseInfo).to.not.eql(\"\");",
									"    pm.expect(jsonData.release.serverInfo).to.not.eql(\"\");",
									"    pm.expect(jsonData.release.version).to.not.eql(\"\");",
									"",
									"    //There can be more here but we expect at minimum the standard list of system properties",
									"    pm.expect(jsonData.system[\"java.version\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.vendor\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.vendor.url\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.home\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.vm.specification.version\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.vm.specification.vendor\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.vm.specification.name\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.vm.version\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.vm.vendor\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.vm.name\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.specification.version\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.specification.vendor\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.specification.name\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.class.version\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.class.path\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.library.path\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.io.tmpdir\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.compiler\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"java.ext.dirs\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"os.name\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"os.arch\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"os.version\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"file.separator\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"path.separator\"]).to.not.eql(\"\");    ",
									"    pm.expect(jsonData.system[\"user.name\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"user.home\"]).to.not.eql(\"\");",
									"    pm.expect(jsonData.system[\"user.dir\"]).to.not.eql(\"\");",
									"",
									"    pm.expect(jsonData.system).to.have.property(\"line.separator\");",
									"",
									"    //Last but not least ",
									"    //Chcek the sensitive stuff is getting obfuscated",
									"    //This var is declared in docker/setup/build-src/forkDotcms.sh",
									"    pm.expect(jsonData.environment.JVM_ENDPOINT_TEST_PASS).to.be.eql(\"o*********e\");",
									"",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/jvm",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"jvm"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Monitor Resource",
			"item": [
				{
					"name": "System-Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/system-status",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"system-status"
							]
						}
					},
					"response": []
				},
				{
					"name": "System-Status Extended",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"System-Status check\", function () {",
									"",
									"    pm.expect(jsonData.backendHealthy).to.be.eql(true);    ",
									"    pm.expect(jsonData.frontendHealthy).to.be.eql(true);",
									"",
									"    pm.expect(jsonData.subsystems.assetFSHealthy).to.be.eql(true);",
									"    pm.expect(jsonData.subsystems.cacheHealthy).to.be.eql(true);",
									"    pm.expect(jsonData.subsystems.dbSelectHealthy).to.be.eql(true);",
									"    pm.expect(jsonData.subsystems.indexLiveHealthy).to.be.eql(true);",
									"    pm.expect(jsonData.subsystems.indexWorkingHealthy).to.be.eql(true);",
									"    pm.expect(jsonData.subsystems.localFSHealthy).to.be.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/system-status?extended=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"system-status"
							],
							"query": [
								{
									"key": "extended",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "System-Status Alive",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/system-status",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"system-status"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}