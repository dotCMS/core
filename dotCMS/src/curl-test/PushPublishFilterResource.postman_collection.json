{
	"info": {
		"_postman_id": "214ebbd5-cae7-4080-806c-e7cf3a9f7dc3",
		"name": "PushPublishFilterResource",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get All Filters",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"The 'ContentOnly.yml' Filter must be the first one in the list\", function () {",
							"    pm.expect(jsonData.entity[0].key).to.eql('ContentOnly.yml');",
							"    pm.expect(jsonData.entity[0].roles).to.eql('DOTCMS_BACK_END_USER');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/pushpublish/filters",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"pushpublish",
						"filters"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Specific Filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"The 'ForcePush.yml' Filter mut be the only result\", function () {",
							"    pm.expect(jsonData.entity.key).to.eql('ForcePush.yml');",
							"    pm.expect(jsonData.entity.roles).to.eql('DOTCMS_BACK_END_USER');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/pushpublish/filters/ForcePush.yml",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"pushpublish",
						"filters",
						"ForcePush.yml"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Filter by Form",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var text = pm.response.text();",
							"",
							"pm.test(\"The 'NoWorkflow.yml' Filter must be present in the filter list via Form\", function () {",
							"    pm.expect(text).contains('NoWorkflow.yml');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"key\":\"NoWorkflow.yml\",\n    \"title\":\"Push without Wofklows\",\n    \"defaultFilter\":\"false\",\n    \"roles\":\"DOTCMS_BACK_END_USER\",\n    \"filters\": {\n        \"excludeQuery\": \"\",\n        \"excludeClasses\": [\"Host\", \"Workflow\", \"OSGI\"],\n        \"dependencies\": true,\n        \"excludeDependencyQuery\": \"\",\n        \"excludeDependencyClasses\": [\"Host\", \"Workflow\"],\n        \"forcePush\": false,\n        \"relationships\": false\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/pushpublish/filters",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"pushpublish",
						"filters"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Filter by File",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var text = pm.response.text();",
							"",
							"pm.test(\"The 'TestPPFilter.yml' Filter must be present in the filter list via File\", function () {",
							"    pm.expect(text).contains('TestPPFilter.yml');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "resources/TestPPFilter.yml"
						}
					]
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/pushpublish/filters",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"pushpublish",
						"filters"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Filter by Form",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var text = pm.response.text();",
							"",
							"pm.test(\"The 'NoWorkflow.yml' must have been updated via Form\", function () {",
							"    pm.expect(text).contains('NoWorkflow.yml');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"key\":\"NoWorkflow.yml\",\n    \"title\":\"Push without Wofklows Updated.\",\n    \"defaultFilter\":\"false\",\n    \"roles\":\"DOTCMS_BACK_END_USER\",\n    \"filters\": {\n        \"excludeQuery\": \"\",\n        \"excludeClasses\": [\"Host\", \"Workflow\", \"OSGI\"],\n        \"dependencies\": true,\n        \"excludeDependencyQuery\": \"\",\n        \"excludeDependencyClasses\": [\"Host\", \"Workflow\"],\n        \"forcePush\": false,\n        \"relationships\": false\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/pushpublish/filters",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"pushpublish",
						"filters"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Filter by File",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var text = pm.response.text();",
							"",
							"pm.test(\"The 'TestPPFilter.yml' Filter must have been pudated via File\", function () {",
							"    pm.expect(text).contains('TestPPFilter.yml');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "resources/TestPPFilter.yml"
						}
					]
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/pushpublish/filters",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"pushpublish",
						"filters"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete No Workflow",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var text = pm.response.text();",
							"",
							"pm.test(\"The 'NoWorkflow.yml' must NOT be part of the list now\", function () {",
							"    pm.expect(text).not.contains('NoWorkflow.yml');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/pushpublish/filters/NoWorkflow.yml",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"pushpublish",
						"filters",
						"NoWorkflow.yml"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Test PP Filter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code must be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var text = pm.response.text();",
							"",
							"pm.test(\"The 'TestPPFilter.yml' must NOT be part of the list now\", function () {",
							"    pm.expect(text).not.contains('TestPPFilter.yml');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/pushpublish/filters/TestPPFilter.yml",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"pushpublish",
						"filters",
						"TestPPFilter.yml"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "templateIdToArchive",
			"value": ""
		}
	]
}