{
	"info": {
		"_postman_id": "5fcabadc-ae05-4432-944e-29622c28c226",
		"name": "Containers",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Deletes Container Test Folder",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(0);",
							"});",
							"",
							"",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    \"/application/containers/test\"\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/folder/default",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"folder",
						"default"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateApplicationContainerFolders",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(0);",
							"});",
							"",
							"pm.test(\"Information Saved Correctly\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.entity[0].path).to.eql(\"/application/containers/test/\");",
							"    pm.expect(jsonData.entity[0].type).to.eql(\"folder\");",
							"    pm.expect(jsonData.entity[0].title).to.eql(\"test\");",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"folderidentifier\", jsonData.entity[0].identifier);",
							"pm.collectionVariables.set(\"folderinode\", jsonData.entity[0].inode);",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[\n    \"/application/containers/test\"\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/folder/createfolders/default",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"folder",
						"createfolders",
						"default"
					]
				},
				"description": "Make a request without log in user"
			},
			"response": []
		},
		{
			"name": "CreateFileTestContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(0);",
							"});",
							"",
							"pm.test(\"Information Saved Correctly\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.entity.contentType).to.eql(\"FileAsset\");",
							"    pm.expect(jsonData.entity.fileName).to.eql(\"container.vtl\");",
							"});",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "json",
							"value": "{\n    \"contentlet\": {\n        \"contentType\": \"FileAsset\",\n        \"title\": \"container.vtl\",\n        \"fileName\": \"container.vtl\",\n        \"hostFolder\":\"{{folderidentifier}}\"\n    }\n}\n",
							"type": "text"
						},
						{
							"key": "file",
							"type": "file",
							"src": "resources/containertest/container.vtl"
						}
					]
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"workflow",
						"actions",
						"default",
						"fire",
						"PUBLISH"
					]
				},
				"description": "Make a request without log in user"
			},
			"response": []
		},
		{
			"name": "invalidateSession",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/logout",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "EditNewContainerNoUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"  pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifier\":\"{{identifier}}\",\n    \"title\":\"TestContainer\",\n    \"friendlyName\":\"TestContainer description\",\n    \"maxContentlets\":1,\n    \"notes\":\"Notes 1\",\n    \"preLoop\":\"preLoop xxxx\",\n    \"postLoop\":\"postLoop xxxx\",\n    \"containerStructures\":[\n        {\n            \"structureId\":\"webPageContent\",\n            \"code\":\" code xxxx\"\n        },\n        {\n            \"structureId\":\"DotAsset\",\n            \"code\":\" tags: $!{tags}\"\n        }\n    ]\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/containers",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers"
					]
				},
				"description": "Make a request without any log in user"
			},
			"response": []
		},
		{
			"name": "EditNewContainerNonFoundContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"  pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifier\":\"NOTFOUNDCONTAINER\",\n    \"title\":\"TestContainer\",\n    \"friendlyName\":\"TestContainer description\",\n    \"maxContentlets\":1,\n    \"notes\":\"Notes 1\",\n    \"preLoop\":\"preLoop xxxx\",\n    \"postLoop\":\"postLoop xxxx\",\n    \"containerStructures\":[\n        {\n            \"structureId\":\"webPageContent\",\n            \"code\":\" code xxxx\"\n        },\n        {\n            \"structureId\":\"DotAsset\",\n            \"code\":\" tags: $!{tags}\"\n        }\n    ]\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/containers",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers"
					]
				},
				"description": "Make a request using a non existing container"
			},
			"response": []
		},
		{
			"name": "GetWorkingInvalidContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"  pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/working?containerId=INVALIDCONTAINER",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"working"
					],
					"query": [
						{
							"key": "containerId",
							"value": "INVALIDCONTAINER"
						}
					]
				},
				"description": "Make a request to a non existing container"
			},
			"response": []
		},
		{
			"name": "GetLiveInvalidContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"  pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/live?containerId=/application/containers/blablablabla",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"live"
					],
					"query": [
						{
							"key": "containerId",
							"value": "/application/containers/blablablabla"
						}
					]
				},
				"description": "Make a request using a non existing file container"
			},
			"response": []
		},
		{
			"name": "GetLiveByuuidInvalirContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"  pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/live?containerId=invalidContainer",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"live"
					],
					"query": [
						{
							"key": "containerId",
							"value": "invalidContainer"
						}
					]
				},
				"description": "Make a request using a non existing container"
			},
			"response": []
		},
		{
			"name": "PublishInvalidContainerId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"  pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/_publish?containerId=",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"_publish"
					],
					"query": [
						{
							"key": "containerId",
							"value": ""
						}
					]
				},
				"description": "try to unpublish an invalid container"
			},
			"response": []
		},
		{
			"name": "PublishNotFoundContainerId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"  pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/_publish?containerId=NOTFOUNDCONTAINER",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"_publish"
					],
					"query": [
						{
							"key": "containerId",
							"value": "NOTFOUNDCONTAINER"
						}
					]
				},
				"description": "Try to unpublish a non existing container"
			},
			"response": []
		},
		{
			"name": "UnPublishContainerInvalidContainerId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"  pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/_unpublish?containerId=",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"_unpublish"
					],
					"query": [
						{
							"key": "containerId",
							"value": ""
						}
					]
				},
				"description": "Try to unpublish an invalid container"
			},
			"response": []
		},
		{
			"name": "UnPublishNotFoundContainerId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"  pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/_unpublish?containerId=NOTFOUNDCONTAINER",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"_unpublish"
					],
					"query": [
						{
							"key": "containerId",
							"value": "NOTFOUNDCONTAINER"
						}
					]
				},
				"description": "Unpublish an not existing container"
			},
			"response": []
		},
		{
			"name": "ArchiveContainerInvalidContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"  pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifier\":\"{{identifier}}\",\n    \"title\":\"TestContainer\",\n    \"friendlyName\":\"TestContainer description\",\n    \"maxContentlets\":1,\n    \"notes\":\"Notes 1\",\n    \"preLoop\":\"preLoop xxxx\",\n    \"postLoop\":\"postLoop xxxx\",\n    \"containerStructures\":[\n        {\n            \"structureId\":\"webPageContent\",\n            \"code\":\" code xxxx\"\n        },\n        {\n            \"structureId\":\"DotAsset\",\n            \"code\":\" tags: $!{tags}\"\n        }\n    ]\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/_archive?containerId=",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"_archive"
					],
					"query": [
						{
							"key": "containerId",
							"value": ""
						}
					]
				},
				"description": "Archive an invalid container"
			},
			"response": []
		},
		{
			"name": "ArchiveContainerNotFoundContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"  pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifier\":\"{{identifier}}\",\n    \"title\":\"TestContainer\",\n    \"friendlyName\":\"TestContainer description\",\n    \"maxContentlets\":1,\n    \"notes\":\"Notes 1\",\n    \"preLoop\":\"preLoop xxxx\",\n    \"postLoop\":\"postLoop xxxx\",\n    \"containerStructures\":[\n        {\n            \"structureId\":\"webPageContent\",\n            \"code\":\" code xxxx\"\n        },\n        {\n            \"structureId\":\"DotAsset\",\n            \"code\":\" tags: $!{tags}\"\n        }\n    ]\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/_archive?containerId=NOTFOUND",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"_archive"
					],
					"query": [
						{
							"key": "containerId",
							"value": "NOTFOUND"
						}
					]
				},
				"description": "Archive a non existing container"
			},
			"response": []
		},
		{
			"name": "UnarchiveContainerInvalidContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"  pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifier\":\"{{identifier}}\",\n    \"title\":\"TestContainer\",\n    \"friendlyName\":\"TestContainer description\",\n    \"maxContentlets\":1,\n    \"notes\":\"Notes 1\",\n    \"preLoop\":\"preLoop xxxx\",\n    \"postLoop\":\"postLoop xxxx\",\n    \"containerStructures\":[\n        {\n            \"structureId\":\"webPageContent\",\n            \"code\":\" code xxxx\"\n        },\n        {\n            \"structureId\":\"DotAsset\",\n            \"code\":\" tags: $!{tags}\"\n        }\n    ]\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/_unarchive?containerId=",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"_unarchive"
					],
					"query": [
						{
							"key": "containerId",
							"value": ""
						}
					]
				},
				"description": "UNArchive an invalid container"
			},
			"response": []
		},
		{
			"name": "UnarchiveContainerNotFoundContainer Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"  pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifier\":\"{{identifier}}\",\n    \"title\":\"TestContainer\",\n    \"friendlyName\":\"TestContainer description\",\n    \"maxContentlets\":1,\n    \"notes\":\"Notes 1\",\n    \"preLoop\":\"preLoop xxxx\",\n    \"postLoop\":\"postLoop xxxx\",\n    \"containerStructures\":[\n        {\n            \"structureId\":\"webPageContent\",\n            \"code\":\" code xxxx\"\n        },\n        {\n            \"structureId\":\"DotAsset\",\n            \"code\":\" tags: $!{tags}\"\n        }\n    ]\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/_unarchive?containerId=NOTFOUND",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"_unarchive"
					],
					"query": [
						{
							"key": "containerId",
							"value": "NOTFOUND"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteContainerInvalidContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"  pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers?containerId=",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers"
					],
					"query": [
						{
							"key": "containerId",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteContainerNotFoundContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"  pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers?containerId=NOTFOUND",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers"
					],
					"query": [
						{
							"key": "containerId",
							"value": "NOTFOUND"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateNewContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(0);",
							"});",
							"",
							"pm.test(\"Information Saved Correctly\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.entity.title).to.eql(\"TestContainer\");",
							"    pm.expect(jsonData.entity.notes).to.eql(\"Notes\");",
							"    ",
							"    ",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"pm.collectionVariables.set(\"identifier\", jsonData.entity.identifier);",
							"pm.collectionVariables.set(\"inode\", jsonData.entity.inode);",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\":\"TestContainer\",\n    \"friendlyName\":\"TestContainer description\",\n    \"maxContentlets\":1,\n    \"notes\":\"Notes\",\n    \"preLoop\":\"preLoop xxxx\",\n    \"postLoop\":\"postLoop xxxx\",\n    \"containerStructures\":[\n        {\n            \"structureId\":\"webPageContent\",\n            \"code\":\" code xxxx\"\n        },\n        {\n            \"structureId\":\"DotAsset\",\n            \"code\":\" tags: $!{tags}\"\n        }\n    ]\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/containers",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers"
					]
				},
				"description": "Create a container"
			},
			"response": []
		},
		{
			"name": "EditNewContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(0);",
							"});",
							"",
							"pm.test(\"Information Saved Correctly\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.entity.title).to.eql(\"TestContainer\");",
							"    pm.expect(jsonData.entity.notes).to.eql(\"Notes 1\");",
							"    ",
							"    ",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifier\":\"{{identifier}}\",\n    \"title\":\"TestContainer\",\n    \"friendlyName\":\"TestContainer description\",\n    \"maxContentlets\":1,\n    \"notes\":\"Notes 1\",\n    \"preLoop\":\"preLoop xxxx\",\n    \"postLoop\":\"postLoop xxxx\",\n    \"containerStructures\":[\n        {\n            \"structureId\":\"webPageContent\",\n            \"code\":\" code xxxx\"\n        },\n        {\n            \"structureId\":\"DotAsset\",\n            \"code\":\" tags: $!{tags}\"\n        }\n    ]\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/containers",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers"
					]
				},
				"description": "Edit the existing container"
			},
			"response": []
		},
		{
			"name": "SelectDefaultHostAsDefault",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"  pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/site/8a7d5e23-da1e-420a-b4f0-471e7da8ea2d/_makedefault",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"site",
						"8a7d5e23-da1e-420a-b4f0-471e7da8ea2d",
						"_makedefault"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetWorking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(0);",
							"});",
							"",
							"pm.test(\"Information Saved Correctly\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.entity.title).to.eql(\"TestContainer\");",
							"    pm.expect(jsonData.entity.notes).to.eql(\"Notes 1\");",
							"    ",
							"    ",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/working?containerId={{identifier}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"working"
					],
					"query": [
						{
							"key": "containerId",
							"value": "{{identifier}}"
						}
					]
				},
				"description": "Get the working version of a container"
			},
			"response": []
		},
		{
			"name": "GetLive",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(0);",
							"});",
							"",
							"pm.test(\"Information Saved Correctly\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.entity.name).to.eql(\"Test Container\");",
							"    pm.expect(jsonData.entity.notes).to.eql(\"Test Container\");",
							"    ",
							"    ",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/live?containerId=/application/containers/test",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"live"
					],
					"query": [
						{
							"key": "containerId",
							"value": "/application/containers/test"
						}
					]
				},
				"description": "Get the live version of a container"
			},
			"response": []
		},
		{
			"name": "Publish",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(0);",
							"});",
							"",
							"pm.test(\"Information Saved Correctly\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.entity.title).to.eql(\"TestContainer\");",
							"    pm.expect(jsonData.entity.notes).to.eql(\"Notes 1\");",
							"    ",
							"    ",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/_publish?containerId={{identifier}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"_publish"
					],
					"query": [
						{
							"key": "containerId",
							"value": "{{identifier}}"
						}
					]
				},
				"description": "Publish a container"
			},
			"response": []
		},
		{
			"name": "GetLiveByuuid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(0);",
							"});",
							"",
							"pm.test(\"Information Saved Correctly\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.entity.title).to.eql(\"TestContainer\");",
							"    pm.expect(jsonData.entity.notes).to.eql(\"Notes 1\");",
							"    ",
							"    ",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/live?containerId={{identifier}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"live"
					],
					"query": [
						{
							"key": "containerId",
							"value": "{{identifier}}"
						}
					]
				},
				"description": "Get live version of the container by uuid"
			},
			"response": []
		},
		{
			"name": "UnPublishFileContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(0);",
							"});",
							"",
							"pm.test(\"Information Saved Correctly\", function () { ",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.entity.title).to.eql(\"Test Container\");",
							"    pm.expect(jsonData.entity.live).to.eql(false); ",
							"    ",
							"    ",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifier\":\"{{identifier}}\",\n    \"title\":\"TestContainer\",\n    \"friendlyName\":\"TestContainer description\",\n    \"maxContentlets\":1,\n    \"notes\":\"Notes 1\",\n    \"preLoop\":\"preLoop xxxx\",\n    \"postLoop\":\"postLoop xxxx\",\n    \"containerStructures\":[\n        {\n            \"structureId\":\"webPageContent\",\n            \"code\":\" code xxxx\"\n        },\n        {\n            \"structureId\":\"DotAsset\",\n            \"code\":\" tags: $!{tags}\"\n        }\n    ]\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/_unpublish?containerId=/application/containers/test",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"_unpublish"
					],
					"query": [
						{
							"key": "containerId",
							"value": "/application/containers/test"
						}
					]
				},
				"description": "Unpublish a file container"
			},
			"response": []
		},
		{
			"name": "GetLiveByuuid_does_not_exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Bundle uploaded sucessfully\", function () {",
							"    pm.response.to.have.status(404);",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifier\":\"{{identifier}}\",\n    \"title\":\"TestContainer\",\n    \"friendlyName\":\"TestContainer description\",\n    \"maxContentlets\":1,\n    \"notes\":\"Notes 1\",\n    \"preLoop\":\"preLoop xxxx\",\n    \"postLoop\":\"postLoop xxxx\",\n    \"containerStructures\":[\n        {\n            \"structureId\":\"webPageContent\",\n            \"code\":\" code xxxx\"\n        },\n        {\n            \"structureId\":\"DotAsset\",\n            \"code\":\" tags: $!{tags}\"\n        }\n    ]\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/live?containerId=xxxxx",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"live"
					],
					"query": [
						{
							"key": "containerId",
							"value": "xxxxx"
						}
					]
				},
				"description": "Get the live version of the file container"
			},
			"response": []
		},
		{
			"name": "UnPublishContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json(); ",
							"    pm.expect(jsonData.errors.length).to.eql(0); ",
							"});",
							"",
							"pm.test(\"Information Saved Correctly\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.entity.title).to.eql(\"TestContainer\");",
							"    pm.expect(jsonData.entity.notes).to.eql(\"Notes 1\");",
							"    ",
							"    ",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/_unpublish?containerId={{identifier}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"_unpublish"
					],
					"query": [
						{
							"key": "containerId",
							"value": "{{identifier}}"
						}
					]
				},
				"description": "Unpublish a container"
			},
			"response": []
		},
		{
			"name": "ArchiveFileContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(0);",
							"});",
							"",
							"pm.test(\"Information Saved Correctly\", function () { ",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.entity.title).to.eql(\"Test Container\");",
							"    pm.expect(jsonData.entity.live).to.eql(false); ",
							"    pm.expect(jsonData.entity.archived).to.eql(true); ",
							"    ",
							"    ",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/_archive?containerId=/application/containers/test",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"_archive"
					],
					"query": [
						{
							"key": "containerId",
							"value": "/application/containers/test"
						}
					]
				},
				"description": "Archive a file container"
			},
			"response": []
		},
		{
			"name": "ArchiveContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(0);",
							"});",
							"",
							"pm.test(\"Information Saved Correctly\", function () { ",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.entity.title).to.eql(\"TestContainer\");",
							"    pm.expect(jsonData.entity.live).to.eql(false); ",
							"    pm.expect(jsonData.entity.archived).to.eql(true); ",
							"    ",
							"    ",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifier\":\"{{identifier}}\",\n    \"title\":\"TestContainer\",\n    \"friendlyName\":\"TestContainer description\",\n    \"maxContentlets\":1,\n    \"notes\":\"Notes 1\",\n    \"preLoop\":\"preLoop xxxx\",\n    \"postLoop\":\"postLoop xxxx\",\n    \"containerStructures\":[\n        {\n            \"structureId\":\"webPageContent\",\n            \"code\":\" code xxxx\"\n        },\n        {\n            \"structureId\":\"DotAsset\",\n            \"code\":\" tags: $!{tags}\"\n        }\n    ]\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/_archive?containerId={{identifier}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"_archive"
					],
					"query": [
						{
							"key": "containerId",
							"value": "{{identifier}}"
						}
					]
				},
				"description": "archive a container"
			},
			"response": []
		},
		{
			"name": "UnarchiveFileContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(0);",
							"});",
							"",
							"pm.test(\"Information Saved Correctly\", function () { ",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.entity.title).to.eql(\"Test Container\");",
							"    pm.expect(jsonData.entity.live).to.eql(false); ",
							"    pm.expect(jsonData.entity.archived).to.eql(false); ",
							"    ",
							"    ",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/_unarchive?containerId=/application/containers/test",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"_unarchive"
					],
					"query": [
						{
							"key": "containerId",
							"value": "/application/containers/test"
						}
					]
				},
				"description": "un archive a file container"
			},
			"response": []
		},
		{
			"name": "UnarchiveContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(0);",
							"});",
							"",
							"pm.test(\"Information Saved Correctly\", function () { ",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.entity.title).to.eql(\"TestContainer\");",
							"    pm.expect(jsonData.entity.live).to.eql(false);  ",
							"    pm.expect(jsonData.entity.archived).to.eql(false); ",
							"    ",
							"    ",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifier\":\"{{identifier}}\",\n    \"title\":\"TestContainer\",\n    \"friendlyName\":\"TestContainer description\",\n    \"maxContentlets\":1,\n    \"notes\":\"Notes 1\",\n    \"preLoop\":\"preLoop xxxx\",\n    \"postLoop\":\"postLoop xxxx\",\n    \"containerStructures\":[\n        {\n            \"structureId\":\"webPageContent\",\n            \"code\":\" code xxxx\"\n        },\n        {\n            \"structureId\":\"DotAsset\",\n            \"code\":\" tags: $!{tags}\"\n        }\n    ]\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/_unarchive?containerId={{identifier}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"_unarchive"
					],
					"query": [
						{
							"key": "containerId",
							"value": "{{identifier}}"
						}
					]
				},
				"description": "Unarchive container"
			},
			"response": []
		},
		{
			"name": "PublishFileContainerAgain",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(0);",
							"});",
							"",
							"pm.test(\"Information Saved Correctly\", function () { ",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.entity.title).to.eql(\"Test Container\");",
							"    ",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifier\":\"{{identifier}}\",\n    \"title\":\"TestContainer\",\n    \"friendlyName\":\"TestContainer description\",\n    \"maxContentlets\":1,\n    \"notes\":\"Notes 1\",\n    \"preLoop\":\"preLoop xxxx\",\n    \"postLoop\":\"postLoop xxxx\",\n    \"containerStructures\":[\n        {\n            \"structureId\":\"webPageContent\",\n            \"code\":\" code xxxx\"\n        },\n        {\n            \"structureId\":\"DotAsset\",\n            \"code\":\" tags: $!{tags}\"\n        }\n    ]\n\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/containers/_publish?containerId=/application/containers/test",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers",
						"_publish"
					],
					"query": [
						{
							"key": "containerId",
							"value": "/application/containers/test"
						}
					]
				},
				"description": "Publish the file container again"
			},
			"response": []
		},
		{
			"name": "DeleteContainer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"No errors\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.errors.length).to.eql(0);",
							"});",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{serverURL}}/api/v1/containers?containerId={{identifier}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"containers"
					],
					"query": [
						{
							"key": "containerId",
							"value": "{{identifier}}"
						}
					]
				},
				"description": "Deletes the container"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "identifier",
			"value": ""
		},
		{
			"key": "inode",
			"value": ""
		},
		{
			"key": "folderidentifier",
			"value": ""
		},
		{
			"key": "folderinode",
			"value": ""
		}
	]
}