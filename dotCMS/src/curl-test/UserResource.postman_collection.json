{
	"info": {
		"_postman_id": "958f7287-3a20-4591-94ae-525a6c9a7c38",
		"name": "UserResource",
		"description": "Verifies that commonly-used routines for interacting with User data are working as expected. Most of these are related to filtering operations and for back-end use only.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "781456"
	},
	"item": [
		{
			"name": "Get Users Include Anon and Default User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json().entity;",
							"",
							"pm.test(\"Contains anonymous\", function () {",
							"    containsAttrAndValue = eval(pm.collectionVariables.get(\"containsAttrAndValue\", containsAttrAndValue.toString()));",
							"    pm.expect(containsAttrAndValue(jsonData, \"userId\" ,\"anonymous\")).to.be.true;",
							"});",
							"",
							"pm.test(\"Contains default\", function () {",
							"    containsAttrAndValue = eval(pm.collectionVariables.get(\"containsAttrAndValue\", containsAttrAndValue.toString()));",
							"    pm.expect(containsAttrAndValue(jsonData, \"userId\" ,\"dotcms.org.default\")).to.be.true;",
							"});",
							"",
							"pm.test(\"Check pagination data\", function () {",
							"    var paginationData = pm.response.json().pagination;",
							"    pm.expect(paginationData.currentPage).to.equal(1);",
							"    pm.expect(paginationData.perPage).to.equal(100);",
							"    pm.expect(paginationData.totalEntries).to.gte(2);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/users/filter?per_page=100&includeanonymous=true&includedefault=true",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"filter"
					],
					"query": [
						{
							"key": "per_page",
							"value": "100"
						},
						{
							"key": "includeanonymous",
							"value": "true"
						},
						{
							"key": "includedefault",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get LoginAsData Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json().entity;",
							"",
							"pm.test('Must not contains Admin', () => {",
							"    _.any(jsonData, (item) => {",
							"        pm.expect(item.firstName).to.not.be.eql('Admin')",
							"    })",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/users/loginAsData?per_page=40",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"loginAsData"
					],
					"query": [
						{
							"key": "per_page",
							"value": "40"
						}
					]
				},
				"description": "Get all the users the user can login as, must exclude itself."
			},
			"response": []
		},
		{
			"name": "Get Users Include Anon and Exclude Default User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json().entity;",
							"",
							"pm.test(\"Contains anonymous\", function () {",
							"    containsAttrAndValue = eval(pm.collectionVariables.get(\"containsAttrAndValue\", containsAttrAndValue.toString()));",
							"    pm.expect(containsAttrAndValue(jsonData, \"userId\" ,\"anonymous\")).to.be.true;",
							"});",
							"",
							"pm.test(\"Does not contain default\", function () {",
							"    containsAttrAndValue = eval(pm.collectionVariables.get(\"containsAttrAndValue\", containsAttrAndValue.toString()));",
							"    pm.expect(containsAttrAndValue(jsonData, \"userId\" ,\"dotcms.org.default\")).to.be.false;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/users/filter?per_page=100&includeanonymous=true&includedefault=false",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"filter"
					],
					"query": [
						{
							"key": "per_page",
							"value": "100"
						},
						{
							"key": "includeanonymous",
							"value": "true"
						},
						{
							"key": "includedefault",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users Exclude Anon and Default User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json().entity;",
							"",
							"pm.test(\"Does not contain anonymous\", function () {",
							"    containsAttrAndValue = eval(pm.collectionVariables.get(\"containsAttrAndValue\", containsAttrAndValue.toString()));",
							"    pm.expect(containsAttrAndValue(jsonData, \"userId\" ,\"anonymous\")).to.be.false;",
							"});",
							"",
							"pm.test(\"Does not contain default\", function () {",
							"    containsAttrAndValue = eval(pm.collectionVariables.get(\"containsAttrAndValue\", containsAttrAndValue.toString()));",
							"    pm.expect(containsAttrAndValue(jsonData, \"userId\" ,\"dotcms.org.default\")).to.be.false;",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/users/filter?per_page=100&includeanonymous=false&includedefault=false",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"filter"
					],
					"query": [
						{
							"key": "per_page",
							"value": "100"
						},
						{
							"key": "includeanonymous",
							"value": "false"
						},
						{
							"key": "includedefault",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users Check Total Value",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json().entity;",
							"console.log(jsonData);",
							"console.log('Length = ' + jsonData.length);",
							"",
							"pm.test(\"Total User Count\", function () {",
							"    pm.expect(jsonData.length).to.be.greaterThan(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/users/filter",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"filter"
					]
				},
				"description": "* <b>Given scenario:</b> Get All the Users from the system.\n     * <b>Expected result:</b> The Total field should be greaterThan 0, so at least 1 user must be returned."
			},
			"response": []
		},
		{
			"name": "Get User Current",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 \", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Valid response\", function () {",
							"    pm.expect(jsonData.email).to.eq(\"admin@dotcms.com\");",
							"    pm.expect(jsonData.loginAs).to.eq(true);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/users/current",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"users",
						"current"
					]
				},
				"description": "Method to test: current <br/>\nGiven Scenario: request the current endpoint and expects to recovery the loginAs <br/>\nExpectedResult: The login as should be true"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"/**",
					" * Traverses the provided JSON data looking for a specific attribute and value. If it exists, returns 'true'.",
					" */",
					"containsAttrAndValue = (json, keyname, value) => {",
					"",
					"    var isUserPresent = false;",
					"    json.every((userData) => {",
					"        console.log('DATA = ' + userData[keyname]);",
					"        if (userData[keyname] === value) {",
					"            isUserPresent = true;",
					"            return false;",
					"        }",
					"        return true;",
					"    });",
					"    return isUserPresent;",
					"",
					"};",
					"",
					"pm.collectionVariables.set(\"containsAttrAndValue\", containsAttrAndValue.toString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "containsAttrAndValue",
			"value": ""
		}
	]
}