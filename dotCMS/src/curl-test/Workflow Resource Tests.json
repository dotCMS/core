{
	"info": {
		"_postman_id": "1c48c3c2-c1a5-404e-afba-922e7599ed41",
		"name": "Workflow Resource Tests",
		"description": "Test the necesary validations to every end point of the worlflow resource ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "findSchemas",
			"description": "Returns all schemes non-archived associated to a content type. 401 if the user does not have permission.\n\n@Path(\"/schemes\")",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c28fbd98-a6ea-4bd0-adc6-19fe6a533755",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Validate you can't get workflow data if you don't have credentials"
					},
					"response": []
				},
				{
					"name": "SuccessListOfSchemes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "05effc82-5941-4041-a4d1-6c86a7e6305a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"//Validate that returns the schemes included in the starter site ",
									"",
									"pm.test(\"Includes default scheme\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Default Scheme\");",
									"});",
									"",
									"pm.test(\"Includes system workflow\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"System Workflow\");",
									"});",
									"",
									"pm.test(\"Includes Document Management\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Document Management\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Validate you have the list of schemas "
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "666505de-2130-40ed-ad1c-1907422b3cb7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9c7da948-f689-4475-b003-fc5afc33516c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "findAllSchemesAndSchemesByContentType",
			"description": "Returns all schemes for the content type and include schemes non-archive . 401 if the user does not have permission\n\n@Path(\"/schemes/schemescontenttypes/{contentTypeId}\")",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fb7b9de4-abf3-420d-b248-dcaa4960aec5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/schemescontenttypes/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"schemescontenttypes",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Validate you can't get workflow data if you don't have credentials\n"
					},
					"response": []
				},
				{
					"name": "Validate read permissions to the content type",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2bc97919-0cad-4ab4-a9d4-f338236d1d96",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200, Content types permissions\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"System Workflow\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/schemescontenttypes/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"schemescontenttypes",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Validate we return a 401 error in case you try to get shemes info of an unautorized conte type\n\nTo test: \nDelete permissions to the content type (generic) and add just permissions to admin "
					},
					"response": []
				},
				{
					"name": "Invalid cotnet type ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ae46ec78-a3ec-448f-abc6-55179fc34a38",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, Content types not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"not found\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/schemescontenttypes/2a3e91e4-fbbf-4876-8c5b-2233c1739b0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"schemescontenttypes",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b0"
							]
						},
						"description": "Validate we return a 401 error in case you try to get shemes info of an unautorized conte type\n\nTo test: \nDelete permissions to the content type (generic) and add just permissions to admin "
					},
					"response": []
				},
				{
					"name": "SucessListOfSchemes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c6cd533-d802-413d-b753-1dd1baa48069",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"//Validate that returns the schemes included in the starter site ",
									"",
									"pm.test(\"Includes default scheme\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Default Scheme\");",
									"});",
									"",
									"pm.test(\"Includes system workflow\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"System Workflow\");",
									"});",
									"",
									"pm.test(\"Includes Document Management\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Document Management\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/schemescontenttypes/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"schemescontenttypes",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Validate you have the list of schemas "
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "168bacea-496e-4ae7-bc66-ab4c8b9499fc",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a11dba6e-27f3-4ede-af57-f9721be2d91b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "findStepsByScheme",
			"description": "Return Steps associated to the scheme, 404 if does not exists. 401 if the user does not have permission\n\n@Path(\"/schemes/{schemeId}/steps\")",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "984ddb4b-7b4e-411a-8c3d-336abdb49b2f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"steps"
							]
						},
						"description": "Return Steps associated to the scheme, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/schemes/{schemeId}/steps\")"
					},
					"response": []
				},
				{
					"name": "SuccessListOfSteps",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5def87a8-4ee7-4861-b67f-864848959dfc",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"//Validate that returns the schemes included in the starter site ",
									"",
									"pm.test(\"Includes default scheme\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"New\");",
									"});",
									"",
									"pm.test(\"Includes system workflow\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unpublished\");",
									"});",
									"",
									"pm.test(\"Includes Document Management\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Published\");",
									"});",
									"",
									"",
									"pm.test(\"Includes Document Management\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Archived\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"steps"
							]
						},
						"description": "Return Steps associated to the scheme, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/schemes/{schemeId}/steps\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "87ca6b57-383b-4e1f-8de0-88f54a1348d0",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"//Validate that returns the schemes included in the starter site ",
									"",
									"pm.test(\"Valid Response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The scheme does not exist\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/ad61a59e1-a49c-46f2-a929-db2b4bfa88b2/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"ad61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"steps"
							]
						},
						"description": "Return Steps associated to the scheme, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/schemes/{schemeId}/steps\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b1501812-f50f-4778-9dac-07a5251c7816",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"//Validate that returns the schemes included in the starter site ",
									"",
									"pm.test(\"Includes default scheme\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"New\");",
									"});",
									"",
									"pm.test(\"Includes system workflow\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unpublished\");",
									"});",
									"",
									"pm.test(\"Includes Document Management\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Published\");",
									"});",
									"",
									"",
									"pm.test(\"Includes Document Management\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Archived\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a49c/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a49c",
								"steps"
							]
						},
						"description": "Return Steps associated to the scheme, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/schemes/{schemeId}/steps\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "findAvailableActions",
			"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")\n",
			"item": [
				{
					"name": "UserCredentialValidations",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "581a024a-3d10-4cd1-b734-7f0da0b7bc8d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/contentlet/47327d24-c894-4433-aa4b-0977f458e574/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"contentlet",
								"47327d24-c894-4433-aa4b-0977f458e574",
								"actions"
							]
						},
						"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")"
					},
					"response": []
				},
				{
					"name": "Content type permissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "87cb1051-c389-4760-81e7-5d902cb6c9e8",
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"var body = JSON.parse(responseBody);",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/contentlet/c9d74fae-7e9c-4283-b0de-335f8105e5a8/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"contentlet",
								"c9d74fae-7e9c-4283-b0de-335f8105e5a8",
								"actions"
							]
						},
						"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")"
					},
					"response": []
				},
				{
					"name": "Valid Inode",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7fe7c3ea-02ab-4d6e-8633-d28a05b5d35e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, Not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"was Not found\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/contentlet/c9d74fae-7e9c-4283-b0de-335f8105e5a/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"contentlet",
								"c9d74fae-7e9c-4283-b0de-335f8105e5a",
								"actions"
							]
						},
						"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")"
					},
					"response": []
				},
				{
					"name": "Success request",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7fe7c3ea-02ab-4d6e-8633-d28a05b5d35e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, Not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"was Not found\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/contentlet/c9d74fae-7e9c-4283-b0de-335f8105e5a/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"contentlet",
								"c9d74fae-7e9c-4283-b0de-335f8105e5a",
								"actions"
							]
						},
						"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")"
					},
					"response": []
				},
				{
					"name": "ShortlyIdValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7fe7c3ea-02ab-4d6e-8633-d28a05b5d35e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, Not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"was Not found\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/contentlet/c9d74fae-7e9c-4283-b0de-335f8105e5a/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"contentlet",
								"c9d74fae-7e9c-4283-b0de-335f8105e5a",
								"actions"
							]
						},
						"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b96dd720-8213-478f-980e-d7699e830226",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "b7edf28b-52a1-4fb9-a6f2-1f459fccb71a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "findAction",
			"description": "",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a03e09b9-67a6-4d3c-88cf-6b413e14710c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436"
							]
						},
						"description": "Returns a single action, 404 if does not exists. 401 if the user does not have permission\n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ValidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f109408b-c52d-49a0-8096-baeea2cf6cc2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, The action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unable to find action using actionId\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c803",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c803"
							]
						},
						"description": "Returns a single action, 404 if does not exists. 401 if the user does not have permission\n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4fa7336c-1dd2-4b7c-a7be-41c3f9172773",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436"
							]
						},
						"description": "Returns a single action, 404 if does not exists. 401 if the user does not have permission\n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ShortlyIdValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4fa7336c-1dd2-4b7c-a7be-41c3f9172773",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c803d",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c803d"
							]
						},
						"description": "Returns a single action, 404 if does not exists. 401 if the user does not have permission\n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "findActionByStep",
			"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e83f0d2-fbae-4785-b388-483db1893d7f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-1710-4eed-8838-d3db60f78f19/actions/b9d89c80-3d88-4311-8365-187323c96436",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-1710-4eed-8838-d3db60f78f19",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436"
							]
						},
						"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ValidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "389561ba-7628-4909-bff1-6c0c8eabcac9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, The step does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"stepId=\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-17a/actions/b9d89c80-3d88-4311-8365-187323c96436",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-17a",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436"
							]
						},
						"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ValidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a29d2861-3cdf-42fa-bc80-8d1ccc3a9dc2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, The action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unable to find action using actionId\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-1710-4eed-8838-d3db60f78f19/actions/b9d89c80-3da",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-1710-4eed-8838-d3db60f78f19",
								"actions",
								"b9d89c80-3da"
							]
						},
						"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e83f6c7-94e2-40c1-b26d-8daa74f90aa5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-1710-4eed-8838-d3db60f78f19/actions/b9d89c80-3d88-4311-8365-187323c96436",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-1710-4eed-8838-d3db60f78f19",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436"
							]
						},
						"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ShortlyIdvalidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e83f6c7-94e2-40c1-b26d-8daa74f90aa5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd17/actions/b9d89c803d",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd17",
								"actions",
								"b9d89c803d"
							]
						},
						"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0c91d64a-66f4-478f-ad85-6f0501ffa0dd",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fabc77df-b127-4325-8a3a-5be6dd3667ba",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "findActionsByStep (all the actions)",
			"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")",
			"item": [
				{
					"name": "userCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f2fd689c-dcfa-4f13-b447-f6045ae03316",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-1710-4eed-8838-d3db60f78f19/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-1710-4eed-8838-d3db60f78f19",
								"actions"
							]
						},
						"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "ValidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb01f875-ab2e-4411-96f2-8fdc982d8eb6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, The step does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-1710-4eed-8838-d3db60f78f19a/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-1710-4eed-8838-d3db60f78f19a",
								"actions"
							]
						},
						"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "WhoCanUseValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7265a844-7722-4df1-a4b2-54036637c287",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Who can use validation\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Save / Publish\");",
									"});",
									"",
									"",
									"pm.test(\"Who can use validation\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Save\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-1710-4eed-8838-d3db60f78f19/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-1710-4eed-8838-d3db60f78f19",
								"actions"
							]
						},
						"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "719eba7c-f2ff-4d7e-8677-b0c4ef565d3f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Who can use validation\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});",
									"",
									"",
									"pm.test(\"Who can use validation\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-1710-4eed-8838-d3db60f78f19/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-1710-4eed-8838-d3db60f78f19",
								"actions"
							]
						},
						"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "ShortlyIdValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "719eba7c-f2ff-4d7e-8677-b0c4ef565d3f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Who can use validation\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});",
									"",
									"",
									"pm.test(\"Who can use validation\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd17/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd17",
								"actions"
							]
						},
						"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5e2d4427-cf15-4fd9-a0c6-1a128924763c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "e8872111-0af5-4fa3-b633-3694d7164af3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "SaveAction",
			"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n@Path(\"/actions\")",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "15fb2f0b-6593-4fd0-ae93-33092fe04cfe",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43aa2370-d43a-4519-ad29-e0835c9fe2a2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"FROM REST NEW\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e72e8943-3f85-4813-84b1-539e785512ac",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b2bf5610-bdef-495f-ae30-9c2c123181f3",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"FROM REST NEW\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "deb1b045-cbf1-4ec1-a0df-85281fa9a18e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"aaee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fcc94948-9ec2-461b-8cd1-6c1b3db4d22b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The scheme does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"ad61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "SupportShortlyId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43aa2370-d43a-4519-ad29-e0835c9fe2a2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"FROM REST NEW\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"dc3c9cd084\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"d61a59e1a4\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ae5292b1-3544-44aa-89e5-88db424df003",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "94285b86-f2e5-4dd3-a7a9-7089dfc5cd0c",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "57607697-fcff-45c2-94bf-c44339114c42",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "findActionByScheme",
			"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d5b047be-3b14-4ffd-8ae0-4d5c957b446c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"actions"
							]
						},
						"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c3784e9-2929-4e6e-8567-491915538075",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, The scheme does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The scheme does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2a/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2a",
								"actions"
							]
						},
						"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")"
					},
					"response": []
				},
				{
					"name": "WhoCanUseValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b67ffe9e-fba2-4b5c-a991-e258d346b5f2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200, Success request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"// Validate every return ",
									"",
									"pm.test(\"Valid response (Archive)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Archive\");",
									"});",
									"",
									"pm.test(\"Valid response (Copy)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Copy\");",
									"});",
									"",
									"pm.test(\"Valid response (Delete)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Delete\");",
									"});",
									"",
									"pm.test(\"Valid response (Publish)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Publish\");",
									"});",
									"",
									"pm.test(\"Valid response (Republish)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Republish\");",
									"});",
									"",
									"pm.test(\"Valid response (Save)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Save\");",
									"});",
									"",
									"pm.test(\"Valid response (Save / Publish)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Save / Publish\");",
									"});",
									"",
									"pm.test(\"Valid response (Unarchive)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Unarchive\");",
									"});",
									"",
									"pm.test(\"Valid response (Unpublish)\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Unpublish\");",
									"});",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"actions"
							]
						},
						"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fe032451-e5df-4e4c-960d-3d48c0b757ad",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200, Success request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"// Validate every return ",
									"",
									"pm.test(\"Valid response (Archive)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Archive\");",
									"});",
									"",
									"pm.test(\"Valid response (Copy)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Copy\");",
									"});",
									"",
									"pm.test(\"Valid response (Delete)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Delete\");",
									"});",
									"",
									"pm.test(\"Valid response (Publish)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Publish\");",
									"});",
									"",
									"pm.test(\"Valid response (Republish)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Republish\");",
									"});",
									"",
									"pm.test(\"Valid response (Save)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save\");",
									"});",
									"",
									"pm.test(\"Valid response (Save / Publish)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});",
									"",
									"pm.test(\"Valid response (Unarchive)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unarchive\");",
									"});",
									"",
									"pm.test(\"Valid response (Unpublish)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unpublish\");",
									"});",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"actions"
							]
						},
						"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")"
					},
					"response": []
				},
				{
					"name": "ShortlyIdValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fe032451-e5df-4e4c-960d-3d48c0b757ad",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200, Success request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"// Validate every return ",
									"",
									"pm.test(\"Valid response (Archive)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Archive\");",
									"});",
									"",
									"pm.test(\"Valid response (Copy)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Copy\");",
									"});",
									"",
									"pm.test(\"Valid response (Delete)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Delete\");",
									"});",
									"",
									"pm.test(\"Valid response (Publish)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Publish\");",
									"});",
									"",
									"pm.test(\"Valid response (Republish)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Republish\");",
									"});",
									"",
									"pm.test(\"Valid response (Save)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save\");",
									"});",
									"",
									"pm.test(\"Valid response (Save / Publish)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});",
									"",
									"pm.test(\"Valid response (Unarchive)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unarchive\");",
									"});",
									"",
									"pm.test(\"Valid response (Unpublish)\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unpublish\");",
									"});",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a4/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a4",
								"actions"
							]
						},
						"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "9bc97c3b-9ef9-4649-8df5-418ffa39ac45",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "948176bd-f3af-453e-8ac0-ad6d6a80777d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "findStepById",
			"description": "",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5234910b-b015-499f-b29e-7b1d98ab5a2b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/94178d17-96a0-4e08-b9aa-94214a7fb31e",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"94178d17-96a0-4e08-b9aa-94214a7fb31e"
							]
						},
						"description": "Get the step by id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ffebece4-0fef-49bd-9f03-15f5f0643e41",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Published\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293"
							]
						},
						"description": "Get the step by id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8310e517-f08f-4eea-8498-d20c703e4a04",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, The action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/adc3c9cd0-8467-404b-bf95-cb7df3fbc293",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"adc3c9cd0-8467-404b-bf95-cb7df3fbc293"
							]
						},
						"description": "Get the step by id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "SortlyValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fefacb19-2b0c-4b74-9b2d-06a0e5345b99",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Published\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-846740",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-846740"
							]
						},
						"description": "Get the step by id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "findAvailableDefaultActionsByContentType",
			"description": "Returns all the possible default actions associated to the content type workflow schemes. 401 if the user does not have permission.\n\n@Path(\"/defaultactions/contenttype/{contentTypeId}\")",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5f391a8-ae07-4ef1-b9d5-fb526c306fdb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {   ",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/contenttype/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"contenttype",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Returns all the possible default actions associated to the content type workflow schemes. 401 if the user does not have permission.\n\n@Path(\"/defaultactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "802f932d-f99c-4437-b2be-d496c60c9ef6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/contenttype/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"contenttype",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Returns all the possible default actions associated to the content type workflow schemes. 401 if the user does not have permission.\n\n@Path(\"/defaultactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidContentTypeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dad5d733-2154-4964-a095-67f0f2739dcd",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, The action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Content Type with id\");",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"not found\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/contenttype/a2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"contenttype",
								"a2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Returns all the possible default actions associated to the content type workflow schemes. 401 if the user does not have permission.\n\n@Path(\"/defaultactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "50e724c0-3e63-42c8-bdde-6f10b538b574",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "7aaa5ccc-f164-4e7b-85a3-1dfad3fe1f50",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "findAvailableDefaultActionsBySchemes",
			"description": "",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "34398c7b-99ab-4304-a19b-0e7b5291ffe6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"schemes"
							]
						},
						"description": "Returns all the possible default actions associated to the workflow schemes.\n401 if the user does not have permission.\n\n@Path(\"/defaultactions/schemes\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "802f932d-f99c-4437-b2be-d496c60c9ef6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/schemes?ids=d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"schemes"
							],
							"query": [
								{
									"key": "ids",
									"value": "d61a59e1-a49c-46f2-a929-db2b4bfa88b2"
								}
							]
						},
						"description": "Returns all the possible default actions associated to the workflow schemes.\n401 if the user does not have permission.\n\n@Path(\"/defaultactions/schemes\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43e2ec9a-2323-41b3-a4c9-d2757419d64a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, The action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The scheme does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/schemes?ids=e61a59e1-a49c-46f2-a929-db2b4bfa88b2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"schemes"
							],
							"query": [
								{
									"key": "ids",
									"value": "e61a59e1-a49c-46f2-a929-db2b4bfa88b2"
								}
							]
						},
						"description": "Returns all the possible default actions associated to the workflow schemes.\n401 if the user does not have permission.\n\n@Path(\"/defaultactions/schemes\")"
					},
					"response": []
				},
				{
					"name": "ShortlySupport",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a1bc6ba-b0c2-4585-a273-d7e35c7a6d1a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save / Publish\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/schemes?ids=d61a59e1a4",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"schemes"
							],
							"query": [
								{
									"key": "ids",
									"value": "d61a59e1a4"
								}
							]
						},
						"description": "Returns all the possible default actions associated to the workflow schemes.\n401 if the user does not have permission.\n\n@Path(\"/defaultactions/schemes\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "findInitialAvailableActionsByContentType",
			"description": "",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9741fb42-a259-4020-b1bb-a39ccf4ec60f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/initialactions/contenttype/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"initialactions",
								"contenttype",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Finds the available actions of the initial/first step(s) of the workflow scheme(s) associated with a content type Id.\n\n@Path(\"/initialactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a34101a2-6b0e-4817-89bf-eb8d3a8929c2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"System Workflow\");",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/initialactions/contenttype/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"initialactions",
								"contenttype",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Finds the available actions of the initial/first step(s) of the workflow scheme(s) associated with a content type Id.\n\n@Path(\"/initialactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e75f1804-6653-49b9-9747-8b95395ce7fb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"System Workflow\");",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.not.include(\"Save\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/initialactions/contenttype/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"initialactions",
								"contenttype",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Finds the available actions of the initial/first step(s) of the workflow scheme(s) associated with a content type Id.\n\n@Path(\"/initialactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidContentTypeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3961cb21-159b-4fd5-95cc-23e3c19df429",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404 \", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Content Type with id:\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/initialactions/contenttype/a2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"initialactions",
								"contenttype",
								"a2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Finds the available actions of the initial/first step(s) of the workflow scheme(s) associated with a content type Id.\n\n@Path(\"/initialactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "UpdateAction",
			"description": "This resource updates the workflow action 404 if the id does not exist\n@Path(\"/actions/{actionId}\")",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "166db478-d6d2-47df-be47-a098ac0aacbd",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"Republish\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4958588d-9c8e-40e4-bfcb-4ded",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4958588d-9c8e-40e4-bfcb-4ded"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7da2bcff-2ff2-4a17-b735-d0b80b9b0dce",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"Republish-test2\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4958588d-9c8e-40e4-bfcb-4ded",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4958588d-9c8e-40e4-bfcb-4ded"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7113e16f-47ba-4514-9b1a-b56cfdcdab40",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Republish\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"Republish\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4958588d-9c8e-40e4-bfcb-4ded",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4958588d-9c8e-40e4-bfcb-4ded"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d1cdcb57-0521-4b16-bcac-474110e56998",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, Action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"action does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"Republish-test2\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/123",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"123"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ValidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bb4b985f-fd24-4192-9051-c95ef46c21e8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The scheme does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"actionName\": \"Republish-123fa\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88ba\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4958588d-9c8e-40e4-bfcb-4ded40bd099f",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4958588d-9c8e-40e4-bfcb-4ded40bd099f"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ShortlyId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c1d543aa-0ed9-4d34-86f0-b042df18fdb1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Republish\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"actionName\": \"Republish-123fa\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4958588d9c",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4958588d9c"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a009555c-a908-424b-9789-e78a855a7404",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4958588d-9c8e-40e4-bfcb-4ded",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4958588d-9c8e-40e4-bfcb-4ded"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2c241713-2b30-426a-9b65-19394d0b93eb",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "fb02b47c-d892-40b5-b4a2-54a64df62be8",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "SaveActionToStep",
			"description": "",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "27644e07-a0a0-40b8-8d6a-3604dca61887",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"777f1c6b-c877-4a37-ba4b-10627316c2cc\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "14f300ce-fe07-4b74-85fc-9969ee86f14c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"777f1c6b-c877-4a37-ba4b-10627316c2cc\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ca04cc03-41e3-4bdf-93fe-9e8601d136da",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"777f1c6b-c877-4a37-ba4b-10627316c2cc\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1e35c21c-cfc6-493c-9df7-cbc6032acfaa",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"777f1c6b-c877-4a37-ba4b-10627316c2cc\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "89328f54-86cd-4ce2-896c-a258f5e91aa7",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"777f1c6b-c877-4a37-ba4b-10627316c2cc\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/adc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"adc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "InvalidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e45160d2-9b95-4a27-a8f9-883200a929e8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The action does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"a777f1c6b-c877-4a37-ba4b-10627316c2cc\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d4c2dab4-f6ae-40dc-a32a-ba5e575ba7de",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"777f1c6bc8\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd084/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd084",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a87e1c6-c449-466e-bbc0-64ddafcc9529",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "DeleteStep",
			"description": "",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a46a02cd-1517-4d44-834e-3167c6970ec7",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/c6035d07-8e8f-4a71-ad93-93adabf13906",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"c6035d07-8e8f-4a71-ad93-93adabf13906"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				},
				{
					"name": "SuccessDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f44caad8-681d-4def-a3e8-9a5c6314e87f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/f7dc56cd-aa81-4ca8-8174-1bb30756df82",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"f7dc56cd-aa81-4ca8-8174-1bb30756df82"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				},
				{
					"name": "PortletActionValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb81cb2f-edba-41b1-a485-f9bb48bc3ba0",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/ee24a4cb-2d15-4c98-b1bd-6327126451f3",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"ee24a4cb-2d15-4c98-b1bd-6327126451f3"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				},
				{
					"name": "ReferencedStepValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "20dfd835-ad88-4891-bda6-b33e43ef0c28",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is being referenced by\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/ee24a4cb-2d15-4c98-b1bd-6327126451f3",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"ee24a4cb-2d15-4c98-b1bd-6327126451f3"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				},
				{
					"name": "ValidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c83c1a4-9aa4-4379-872a-e8d0e82df578",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/zee24a4cb-2d15-4c98-b1bd-6327126451f3",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"zee24a4cb-2d15-4c98-b1bd-6327126451f3"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e65ee1b-fef2-45ce-8655-59330d531682",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Editing\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/c965f6a50a",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"c965f6a50a"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "DeleteAction (Permanently)",
			"description": "",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "54728cbd-dbaf-48c5-b4b1-084cb4cb1b53",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/9012b349-e8ce-446f-86df-50b4f82a82ff",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"9012b349-e8ce-446f-86df-50b4f82a82ff"
							]
						},
						"description": "Deletes an action associated to the scheme and all references into steps\n\n@Path(\"/actions/{actionId}\")\n"
					},
					"response": []
				},
				{
					"name": "SeccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e1dd63db-9cd4-4208-840f-658cd5fc6d2c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/62078964-3ed4-4729-91d3-75e841736905",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"62078964-3ed4-4729-91d3-75e841736905"
							]
						},
						"description": "Deletes an action associated to the scheme and all references into steps\n\n@Path(\"/actions/{actionId}\")\n"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3da97e5d-288c-4dcc-899f-ae45666ffb16",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4e1efa41-789e-4f63-8e7f-30f5697e53e3",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4e1efa41-789e-4f63-8e7f-30f5697e53e3"
							]
						},
						"description": "Deletes an action associated to the scheme and all references into steps\n\n@Path(\"/actions/{actionId}\")\n"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "47be892e-2573-4844-9383-fe346dbc2a05",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4e1efa41-789e-4f63-8e7f-30f5697e53e3",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4e1efa41-789e-4f63-8e7f-30f5697e53e3"
							]
						},
						"description": "Deletes an action associated to the scheme and all references into steps\n\n@Path(\"/actions/{actionId}\")\n"
					},
					"response": []
				},
				{
					"name": "InvalidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8b57d229-8226-44c3-a5fa-bc946fcbe96a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The action does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/a4e1efa41-789e-4f63-8e7f-30f5697e53e3",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"a4e1efa41-789e-4f63-8e7f-30f5697e53e3"
							]
						},
						"description": "Deletes an action associated to the scheme and all references into steps\n\n@Path(\"/actions/{actionId}\")\n"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dc929388-724a-4ae2-84a4-e8b0bcef0a89",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/f2bb86bcf5",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"f2bb86bcf5"
							]
						},
						"description": "Deletes an action associated to the scheme and all references into steps\n\n@Path(\"/actions/{actionId}\")\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "DeleteAction (from step)",
			"description": "",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4eac8869-e9e5-4062-b363-99a22e7c94bc",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/0c5018fc-4773-4524-9ba8-328ca4c3d0b2/actions/658278d3-aa3b-4ce4-a028-c9e1656e4f9e",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"0c5018fc-4773-4524-9ba8-328ca4c3d0b2",
								"actions",
								"658278d3-aa3b-4ce4-a028-c9e1656e4f9e"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SuceessDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3ea906d1-5aed-4b85-bbe0-df40d1111a20",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2/actions/777f1c6b-c877-4a37-ba4b-10627316c2cc",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
								"actions",
								"777f1c6b-c877-4a37-ba4b-10627316c2cc"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "84e71883-44fe-407c-b983-5b74afebd65d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2/actions/777f1c6b-c877-4a37-ba4b-10627316c2cc",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
								"actions",
								"777f1c6b-c877-4a37-ba4b-10627316c2cc"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2e346dfa-fb60-4609-b766-700d51976951",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2/actions/c92f9aa1-9503-4567-ac30-d3242b54d02d",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
								"actions",
								"c92f9aa1-9503-4567-ac30-d3242b54d02d"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95954c97-a098-439f-b8e5-fd98702993df",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/ad6b095b6-b65f-4bdb-bbfd-701d663dfee2/actions/c92f9aa1-9503-4567-ac30-d3242b54d02d",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"ad6b095b6-b65f-4bdb-bbfd-701d663dfee2",
								"actions",
								"c92f9aa1-9503-4567-ac30-d3242b54d02d"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1c048fe8-d15b-40e9-9e87-ee0027243e63",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The action does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2/actions/ac92f9aa1-9503-4567-ac30-d3242b54d02d",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
								"actions",
								"ac92f9aa1-9503-4567-ac30-d3242b54d02d"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SupportShortlyId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b4e7a8f9-f98b-4630-bdfd-bdcc90c4445a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd084/actions/ceca71a0de",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd084",
								"actions",
								"ceca71a0de"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "ReorderStep",
			"description": "",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7ec3c68b-ed82-4415-bd3e-b1bdabac9d06",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/step/94178d17-96a0-4e08-b9aa-94214a7fb31e/order/0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"step",
								"94178d17-96a0-4e08-b9aa-94214a7fb31e",
								"order",
								"0"
							]
						},
						"description": "Change the order of the steps in a scheme\n\n@Path(\"/reorder/step/{stepId}/order/{order}\")"
					},
					"response": []
				},
				{
					"name": "SuccessReorder",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ec81de65-48f8-4202-9682-1c0185043763",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/step/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/order/0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"step",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"order",
								"0"
							]
						},
						"description": "Change the order of the steps in a scheme\n\n@Path(\"/reorder/step/{stepId}/order/{order}\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "195a0e8e-1d32-47dd-8699-3844764def30",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/step/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/order/0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"step",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"order",
								"0"
							]
						},
						"description": "Change the order of the steps in a scheme\n\n@Path(\"/reorder/step/{stepId}/order/{order}\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3acdfb4-6e1e-4e7e-9775-d0283fcd4528",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/step/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/order/0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"step",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"order",
								"0"
							]
						},
						"description": "Change the order of the steps in a scheme\n\n@Path(\"/reorder/step/{stepId}/order/{order}\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bad9f7cd-560b-4a62-b8b4-f57c159d6038",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/step/adc3c9cd0-8467-404b-bf95-cb7df3fbc293/order/0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"step",
								"adc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"order",
								"0"
							]
						},
						"description": "Change the order of the steps in a scheme\n\n@Path(\"/reorder/step/{stepId}/order/{order}\")"
					},
					"response": []
				},
				{
					"name": "SupportShortlyId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e956369-5427-4809-a885-73d79142b538",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/step/dc3c9cd084/order/0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"step",
								"dc3c9cd084",
								"order",
								"0"
							]
						},
						"description": "Change the order of the steps in a scheme\n\n@Path(\"/reorder/step/{stepId}/order/{order}\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "UpdateStep",
			"description": "",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "990744bd-5c43-4c93-b8e6-3f624f862122",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/94178d17-96a0-4e08-b9aa-94214a7fb31e",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"94178d17-96a0-4e08-b9aa-94214a7fb31e"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "374eae5d-8950-40c7-9950-4c074c0afb1b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"stepOrder\":5, \"stepName\":\"REST\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7d0aa97b-3b4c-45da-a7c2-011a43739897",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"stepOrder\":5, \"stepName\":\"REST\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "844c0e8a-2d35-4471-92b2-5add1326a5ee",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"stepOrder\":5, \"stepName\":\"REST\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ee1e1a2-3b41-4365-9419-6e11b6bd72c9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"stepOrder\":5, \"stepName\":\"REST\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/ad6b095b6-b65f-4bdb-bbfd-701d663dfee2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"ad6b095b6-b65f-4bdb-bbfd-701d663dfee2"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "SupportShortlyId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "878674ef-9cdb-4d3b-adee-63ff79195e78",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"stepOrder\":5, \"stepName\":\"REST\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6b6",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6b6"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "071f8ca3-1837-4b08-a180-2c89cb3fc64e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "AddStep",
			"description": "",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ee998498-d294-46b6-bd7c-86c81d1f2d14",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\", \"stepName\":\"REST123\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5ff8bdcc-8f4e-446b-b05c-f42a8f000c43",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\", \"stepName\":\"REST123\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "61dca0cf-453a-459a-8099-ec5a1e617129",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\", \"stepName\":\"REST123\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da3eb9e9-74ac-4b05-98d2-d0bb25bcdc22",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\", \"stepName\":\"REST123\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "210aaffd-bbe1-43cc-be6c-7ba7524ceaef",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The scheme does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"ad61a59e1-a49c-46f2-a929-db2b4bfa88b2\", \"stepName\":\"REST123\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1c10de1-c9b2-4514-bba4-6896298c4c61",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"d61a59e1a49\", \"stepName\":\"REST123\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5c8d032a-0a04-411d-bd54-39f61bbf2a6e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "SaveScheme",
			"description": "",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f123defb-5557-4b87-8660-d07fce4074c1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"REST1\", \"schemeDescription\": \"rest1\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d0331f05-afd7-4d7b-8864-96b7a46ed9c3",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"REST1\", \"schemeDescription\": \"rest1\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				},
				{
					"name": "MultipleSchemesWithTheSameName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e769c92f-f5e8-4888-80b3-a3f4c5e7a34d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200, Scheme already exist\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"REST1\", \"schemeDescription\": \"rest1\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d65c3d71-2c83-4979-9b67-108b60b38001",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"REST1\", \"schemeDescription\": \"rest1\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a39731a-b4b7-480f-84cc-217ad72824ef",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"SaveScheme\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"SaveScheme\", \"schemeDescription\": \"LimitedUser\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "689000d4-891c-4ad1-8a82-58e69b2098d2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "UpdateScheme",
			"description": "",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8c2a2435-770a-4aa8-9757-6042ee67bcd4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"REST2\", \"schemeDescription\": \"rest1\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/211040db-5d79-4e3c-807a-1f2dec2ff16b",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"211040db-5d79-4e3c-807a-1f2dec2ff16b"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "da57636e-18ac-43b0-9a54-17721c41aaa0",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Default Scheme Updated from REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"Default Scheme Updated from REST\", \"schemeDescription\": \"AutomaticTest\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/85c1515c-c4f3-463c-bac2-860b8fcacc34",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"85c1515c-c4f3-463c-bac2-860b8fcacc34"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95715852-5231-456f-855b-298b49ecda1e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"Default Scheme Updated from REST\", \"schemeDescription\": \"AutomaticTest\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/85c1515c-c4f3-463c-bac2-860b8fcacc34",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"85c1515c-c4f3-463c-bac2-860b8fcacc34"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f1607896-c579-4058-bdc4-1e8ca63c777e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Default Scheme Updated from REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"Default Scheme Updated from REST\", \"schemeDescription\": \"AutomaticTest\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/85c1515c-c4f3-463c-bac2-860b8fcacc34",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"85c1515c-c4f3-463c-bac2-860b8fcacc34"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e9190d84-51d4-40e4-8547-dbce802dcd16",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404 \", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"scheme does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"Default Scheme Updated from REST\", \"schemeDescription\": \"AutomaticTest\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/a85c1515c-c4f3-463c-bac2-860b8fcacc34",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"a85c1515c-c4f3-463c-bac2-860b8fcacc34"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ecbae4f5-380c-4d90-8961-7cab0bd859e5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Default Scheme Updated from REST\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"Default Scheme Updated from REST\", \"schemeDescription\": \"AutomaticTest\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/85c1515cc4",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"85c1515cc4"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9863c51d-c9dd-46ba-a679-fce318aec6fe",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/85c1515c-c4f3-463c-bac2-860b8fcacc34",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"85c1515c-c4f3-463c-bac2-860b8fcacc34"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "CopyScheme",
			"description": "",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "48dabe4e-09eb-40e6-a8f9-d1e2d607031d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a4/copy",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a4",
								"copy"
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "SuccessCopy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7dd29f4c-4e44-4fef-b445-e4e2b254618d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Copy from REST (automatic)\");",
									"});",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"creationDate\");",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/copy?name=Copy from REST (automatic)",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"copy"
							],
							"query": [
								{
									"key": "name",
									"value": "Copy from REST (automatic)"
								}
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8f267e5-488f-4f30-9ea4-c4a94b6fc38c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/copy?name=Copy from REST (automatic)",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"copy"
							],
							"query": [
								{
									"key": "name",
									"value": "Copy from REST (automatic)"
								}
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "LimitedUserValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "75b8ecb9-efc1-45ce-8d16-1344cf2b878e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"_limited\");",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"creationDate\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/copy?name=Copy from REST (automatic)_limited",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"copy"
							],
							"query": [
								{
									"key": "name",
									"value": "Copy from REST (automatic)_limited"
								}
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "292bd676-067e-4b2b-9b65-859673cffefd",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"scheme does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/ad61a59e1-a49c-46f2-a929-db2b4bfa88b2/copy?name=Copy from REST (automatic)_limited",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"ad61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"copy"
							],
							"query": [
								{
									"key": "name",
									"value": "Copy from REST (automatic)_limited"
								}
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "CopyWithAlreadyExistingName",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aa93909a-d44c-43cc-99d1-08779aca984a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Copy from REST (automatic)_limited\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/copy?name=Copy from REST (automatic)_limited",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"copy"
							],
							"query": [
								{
									"key": "name",
									"value": "Copy from REST (automatic)_limited"
								}
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "CopyWithotNameParam",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a99482f8-539f-45df-893f-2391371187ca",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Copy from REST (automatic)_limited\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\":\"Copy from REST (automatic)_limited\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/copy",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"copy"
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "39c95b72-b378-4326-81ad-c4b5dfdd5d0c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Copy Using ShortlyID\");",
									"});",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"creationDate\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\":\"Copy from REST (automatic)_limited\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a49/copy?name=Copy Using ShortlyID",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a49",
								"copy"
							],
							"query": [
								{
									"key": "name",
									"value": "Copy Using ShortlyID"
								}
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "FireAction",
			"description": "",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0a74ea3d-4be6-4e6f-8628-fe3fdf914a70",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentletFormData\" : {\n  \"stInode\" : \"678d00bf-10b0-4080-99b4-9517ab9ea580\",\n  \"languageId\" : 1,\n  \"name\": \"postman1\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/936f14eef2/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"936f14eef2",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2f36d3c2-b3ef-408f-8e65-01f07fd62fad",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"postman\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentletFormData\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postman\",\n  \"value\": \"postman\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "ContentTypePermissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "25f4303d-48f5-42f0-b528-160d8cd8c768",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"permissions\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentletFormData\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postman\",\n  \"value\": \"postman\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "InvalidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "615793e1-864b-403f-a8ef-2463c4c0953e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The action does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentletFormData\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postman\",\n  \"value\": \"postman\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/ab9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"ab9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "InvalidContentTypeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c938ee4b-7ee1-4397-afe1-2cf78027922f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Content Type with id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentletFormData\" : {\n  \"stInode\" : \"af4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postman\",\n  \"value\": \"postman\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "SupportShorlty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5bd7cf95-8267-40cc-a89e-010f027ee69f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"postman5\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentletFormData\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postman5\",\n  \"value\": \"postman5\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d8843/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d8843",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "FireActionWithoutBody",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e02ceca-c3bb-41fa-9ea2-16f44978604b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"About Quest\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d8843/fire?inode=e79ab40f-0728-4995-ab3f-ee9f87340cad",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d8843",
								"fire"
							],
							"query": [
								{
									"key": "inode",
									"value": "e79ab40f-0728-4995-ab3f-ee9f87340cad"
								}
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "FormValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "5e1fa86c-14b2-47c4-b241-0f247e79afe8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400, BadRequest\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"unique\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentletFormData\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postman\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9ab7da98-ca14-4758-a19e-af46e3b53379",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "ReorderAction",
			"description": "",
			"item": [
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ab1ca2b-c9da-44eb-ae14-9fa5cd8ce6af",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 3}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/94178d17-96a0-4e08-b9aa-94214a7fb31e/actions/7075981c-eda2-4896-a65c-71749ee2877e",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"94178d17-96a0-4e08-b9aa-94214a7fb31e",
								"actions",
								"7075981c-eda2-4896-a65c-71749ee2877e"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a233e5bd-5d5d-4359-9088-8d59a57c59b1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 0}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/1f67a807-5094-4229-9dd7-7b0a4fb57a1e/actions/64fa7b51-bfc4-4686-8775-70a8cd44aee7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"1f67a807-5094-4229-9dd7-7b0a4fb57a1e",
								"actions",
								"64fa7b51-bfc4-4686-8775-70a8cd44aee7"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c759a63c-0ddf-4807-8077-954ee97fff28",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 0}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/1f67a807-5094-4229-9dd7-7b0a4fb57a1e/actions/64fa7b51-bfc4-4686-8775-70a8cd44aee7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"1f67a807-5094-4229-9dd7-7b0a4fb57a1e",
								"actions",
								"64fa7b51-bfc4-4686-8775-70a8cd44aee7"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidOrderValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c5648d41-f47c-4b31-aac3-d1b08ef3d60f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400, Bad request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Numeric value\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 123012301203102301230102301230123}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/1f67a807-5094-4229-9dd7-7b0a4fb57a1e/actions/64fa7b51-bfc4-4686-8775-70a8cd44aee7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"1f67a807-5094-4229-9dd7-7b0a4fb57a1e",
								"actions",
								"64fa7b51-bfc4-4686-8775-70a8cd44aee7"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ac0d6a24-f91c-4ff8-8cf0-660503a95e44",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The step does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 1}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/a1f67a807-5094-4229-9dd7-7b0a4fb57a1e/actions/64fa7b51-bfc4-4686-8775-70a8cd44aee7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"a1f67a807-5094-4229-9dd7-7b0a4fb57a1e",
								"actions",
								"64fa7b51-bfc4-4686-8775-70a8cd44aee7"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidActionId ",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "66778070-69bd-465c-a2bd-934140253140",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The action does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 1}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/1f67a807-5094-4229-9dd7-7b0a4fb57a1e/actions/a64fa7b51-bfc4-4686-8775-70a8cd44aee7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"1f67a807-5094-4229-9dd7-7b0a4fb57a1e",
								"actions",
								"a64fa7b51-bfc4-4686-8775-70a8cd44aee7"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b2e276c6-200b-4fda-9159-7f47f8a29b79",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 1}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/1f67a80750/actions/64fa7b51bf",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"1f67a80750",
								"actions",
								"64fa7b51bf"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2ec1c132-59cb-4e65-bab4-40d1213dcbc7",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/1f67a807-5094-4229-9dd7-7b0a4fb57a1e/actions/64fa7b51-bfc4-4686-8775-70a8cd44aee7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"1f67a807-5094-4229-9dd7-7b0a4fb57a1e",
								"actions",
								"64fa7b51-bfc4-4686-8775-70a8cd44aee7"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "ImportScheme",
			"description": "",
			"item": [
				{
					"name": "User Credentials Validations",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "95e5e3f4-b1c0-4c6a-9608-fe4e3df00baa",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, Invalid Credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"workflowObject\": {\n            \"schemes\": [\n                {\n                    \n                    \"creationDate\": 1523640559394,\n                    \"name\": \"Test1\",\n                    \"description\": \"\",\n                    \"archived\": false,\n                    \"mandatory\": false,\n                    \"defaultScheme\": false,\n                    \"modDate\": 1523640423771,\n                    \"entryActionId\": null,\n                    \"system\": false\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"01d5d41a-007e-463d-a5b5-c35ea27b1a30\",\n                    \"creationDate\": 1523643857447,\n                    \"name\": \"Step1\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"myOrder\": 0,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"2cbf9872-0ed3-407b-b803-70a9a161a7db\",\n                    \"creationDate\": 1523643857447,\n                    \"name\": \"step2\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"myOrder\": 1,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                }\n            ],\n            \"actions\": [\n                {\n                    \"id\": \"81522b66-221b-4496-aec6-0e4c484973f7\",\n                    \"name\": \"Save it\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"2cbf9872-0ed3-407b-b803-70a9a161a7db\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"LOCKED\",\n                        \"NEW\",\n                        \"UNLOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"687c0729-95fe-4e1d-b37c-e9f70615df23\",\n                    \"name\": \"TEst\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"LOCKED\",\n                        \"UNLOCKED\"\n                    ]\n                }\n            ],\n            \"actionSteps\": [\n                {\n                    \"stepId\": \"01d5d41a-007e-463d-a5b5-c35ea27b1a30\",\n                    \"actionId\": \"81522b66-221b-4496-aec6-0e4c484973f7\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"2cbf9872-0ed3-407b-b803-70a9a161a7db\",\n                    \"actionId\": \"687c0729-95fe-4e1d-b37c-e9f70615df23\",\n                    \"actionOrder\": \"0\"\n                }\n            ],\n            \"actionClasses\": [\n                {\n                    \"id\": \"2298b780-e1d3-4916-b981-e22fd5553086\",\n                    \"actionId\": \"81522b66-221b-4496-aec6-0e4c484973f7\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"nextStep\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                }\n            ],\n            \"actionClassParams\": []\n        },\n        \"permissions\": []\n}\n    \n"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can't import schemes without credentials"
					},
					"response": []
				},
				{
					"name": "User Permissions Validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1cd93b4a-f058-4db3-bd3d-9874fc74b51a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, The user don't have permissions to the workflow portlet\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"workflowObject\": {\n            \"schemes\": [\n                {\n                    \n                    \"creationDate\": 1523640559394,\n                    \"name\": \"Test2\",\n                    \"description\": \"\",\n                    \"archived\": false,\n                    \"mandatory\": false,\n                    \"defaultScheme\": false,\n                    \"modDate\": 1523640423771,\n                    \"entryActionId\": null,\n                    \"system\": false\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"01d5d41a-007e-463d-a5b5-c35ea27b1a30\",\n                    \"creationDate\": 1523643857447,\n                    \"name\": \"Step1\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"myOrder\": 0,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"2cbf9872-0ed3-407b-b803-70a9a161a7db\",\n                    \"creationDate\": 1523643857447,\n                    \"name\": \"step2\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"myOrder\": 1,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                }\n            ],\n            \"actions\": [\n                {\n                    \"id\": \"81522b66-221b-4496-aec6-0e4c484973f7\",\n                    \"name\": \"Save it\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"2cbf9872-0ed3-407b-b803-70a9a161a7db\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"LOCKED\",\n                        \"NEW\",\n                        \"UNLOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"687c0729-95fe-4e1d-b37c-e9f70615df23\",\n                    \"name\": \"TEst\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"LOCKED\",\n                        \"UNLOCKED\"\n                    ]\n                }\n            ],\n            \"actionSteps\": [\n                {\n                    \"stepId\": \"01d5d41a-007e-463d-a5b5-c35ea27b1a30\",\n                    \"actionId\": \"81522b66-221b-4496-aec6-0e4c484973f7\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"2cbf9872-0ed3-407b-b803-70a9a161a7db\",\n                    \"actionId\": \"687c0729-95fe-4e1d-b37c-e9f70615df23\",\n                    \"actionOrder\": \"0\"\n                }\n            ],\n            \"actionClasses\": [\n                {\n                    \"id\": \"2298b780-e1d3-4916-b981-e22fd5553086\",\n                    \"actionId\": \"81522b66-221b-4496-aec6-0e4c484973f7\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"nextStep\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                }\n            ],\n            \"actionClassParams\": []\n        },\n        \"permissions\": []\n}\n    \n"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can't import if the user don't have access to the workflow portlet "
					},
					"response": []
				},
				{
					"name": "Sucess Import As Limited",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0b677d52-ae07-49a7-a6d7-d0f0ba464734",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200, The user don't have permissions to the workflow portlet\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"workflowObject\": {\n            \"version\": \"1.0\",\n            \"schemes\": [\n                {\n                    \"id\": \"95b27420-2087-43a8-ab2c-d35a00db47dc\",\n                    \"creationDate\": 1525829580512,\n                    \"name\": \"Workflow_Import_1\",\n                    \"description\": \"Rest testing \",\n                    \"archived\": false,\n                    \"mandatory\": false,\n                    \"defaultScheme\": false,\n                    \"modDate\": 1525829572977,\n                    \"entryActionId\": null,\n                    \"system\": false\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"096b23a8-c21e-4f16-a8f0-1de047b2f8fb\",\n                    \"creationDate\": 1525829604748,\n                    \"name\": \"Step1\",\n                    \"schemeId\": \"95b27420-2087-43a8-ab2c-d35a00db47dc\",\n                    \"myOrder\": 0,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"7a037cef-0730-410f-b6db-66a630947b81\",\n                    \"creationDate\": 1525829604748,\n                    \"name\": \"Step2\",\n                    \"schemeId\": \"95b27420-2087-43a8-ab2c-d35a00db47dc\",\n                    \"myOrder\": 1,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"6c3ed83f-8951-4cd4-ad0b-c5e094fec89b\",\n                    \"creationDate\": 1525829604749,\n                    \"name\": \"Step3\",\n                    \"schemeId\": \"95b27420-2087-43a8-ab2c-d35a00db47dc\",\n                    \"myOrder\": 2,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                }\n            ],\n            \"actions\": [\n                {\n                    \"id\": \"2c3030a5-877e-4371-ab42-01fa0e6ff8ab\",\n                    \"name\": \"Comment\",\n                    \"schemeId\": \"95b27420-2087-43a8-ab2c-d35a00db47dc\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"NEW\",\n                        \"PUBLISHED\",\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"ARCHIVED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"1e8abd19-82ca-49cd-a2cb-032fb1d5df05\",\n                    \"name\": \"Publish\",\n                    \"schemeId\": \"95b27420-2087-43a8-ab2c-d35a00db47dc\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"6c3ed83f-8951-4cd4-ad0b-c5e094fec89b\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"NEW\",\n                        \"PUBLISHED\",\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"ARCHIVED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"684f3a5f-68ae-472e-a26d-be7ec01a41ff\",\n                    \"name\": \"Save\",\n                    \"schemeId\": \"95b27420-2087-43a8-ab2c-d35a00db47dc\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"7a037cef-0730-410f-b6db-66a630947b81\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"NEW\",\n                        \"PUBLISHED\",\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"ARCHIVED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"dbf38bd8-0c9e-482c-a71a-66314b034fc5\",\n                    \"name\": \"Unpublish\",\n                    \"schemeId\": \"95b27420-2087-43a8-ab2c-d35a00db47dc\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"PUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                }\n            ],\n            \"actionSteps\": [\n                {\n                    \"stepId\": \"096b23a8-c21e-4f16-a8f0-1de047b2f8fb\",\n                    \"actionId\": \"684f3a5f-68ae-472e-a26d-be7ec01a41ff\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"7a037cef-0730-410f-b6db-66a630947b81\",\n                    \"actionId\": \"1e8abd19-82ca-49cd-a2cb-032fb1d5df05\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"7a037cef-0730-410f-b6db-66a630947b81\",\n                    \"actionId\": \"2c3030a5-877e-4371-ab42-01fa0e6ff8ab\",\n                    \"actionOrder\": \"1\"\n                },\n                {\n                    \"stepId\": \"6c3ed83f-8951-4cd4-ad0b-c5e094fec89b\",\n                    \"actionId\": \"dbf38bd8-0c9e-482c-a71a-66314b034fc5\",\n                    \"actionOrder\": \"0\"\n                }\n            ],\n            \"actionClasses\": [\n                {\n                    \"id\": \"d6f8c1fa-91e2-44d9-86cf-823ff6acd82c\",\n                    \"actionId\": \"2c3030a5-877e-4371-ab42-01fa0e6ff8ab\",\n                    \"name\": \"Comment on Workflow\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CommentOnWorkflowActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Comment on Workflow\",\n                        \"parameters\": [\n                            {\n                                \"displayName\": \"Workflow Comment\",\n                                \"key\": \"comment\",\n                                \"defaultValue\": null,\n                                \"required\": true\n                            }\n                        ],\n                        \"howTo\": \"This actionlet allows you to add a comment on the workflow task.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Comment on Workflow\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CommentOnWorkflowActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"94253d21-2bf7-4f47-80f1-f312121c9264\",\n                    \"actionId\": \"1e8abd19-82ca-49cd-a2cb-032fb1d5df05\",\n                    \"name\": \"Publish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"498d26ec-c22d-43e0-9549-44552cd2a457\",\n                    \"actionId\": \"684f3a5f-68ae-472e-a26d-be7ec01a41ff\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"97dd8a67-2251-4665-be2e-dc5c82a443c7\",\n                    \"actionId\": \"dbf38bd8-0c9e-482c-a71a-66314b034fc5\",\n                    \"name\": \"Unpublish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Unpublish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will unpublish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Unpublish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet.howTo\"\n                    }\n                }\n            ],\n            \"actionClassParams\": []\n        },\n        \"permissions\": [\n            {\n                \"id\": 0,\n                \"inode\": \"1e8abd19-82ca-49cd-a2cb-032fb1d5df05\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"1e8abd19-82ca-49cd-a2cb-032fb1d5df05\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"1cad5929-b42d-4049-b76e-3ce39e042574\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"684f3a5f-68ae-472e-a26d-be7ec01a41ff\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"684f3a5f-68ae-472e-a26d-be7ec01a41ff\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"1cad5929-b42d-4049-b76e-3ce39e042574\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"dbf38bd8-0c9e-482c-a71a-66314b034fc5\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"dbf38bd8-0c9e-482c-a71a-66314b034fc5\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"1cad5929-b42d-4049-b76e-3ce39e042574\"\n            }\n        ]\n    }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can import schemes as limited user if you have permissions to the workflow portlet "
					},
					"response": []
				},
				{
					"name": "SucessImportAsAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79aeda0d-a1e0-4f4f-87e8-6a4e2f56e7f8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200, The user don't have permissions to the workflow portlet\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"workflowObject\": {\n            \"version\": \"1.0\",\n            \"schemes\": [\n                {\n                    \"id\": \"05d2a4e0-293d-463f-bf1c-ae2570dfa28c\",\n                    \"creationDate\": 1525829943686,\n                    \"name\": \"WF_Import_Rest_2\",\n                    \"description\": \"Rest testing \",\n                    \"archived\": false,\n                    \"mandatory\": false,\n                    \"defaultScheme\": false,\n                    \"modDate\": 1525829933758,\n                    \"entryActionId\": null,\n                    \"system\": false\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"f280caef-93a8-41e3-a361-7399cffc6ceb\",\n                    \"creationDate\": 1525830197207,\n                    \"name\": \"Step1\",\n                    \"schemeId\": \"05d2a4e0-293d-463f-bf1c-ae2570dfa28c\",\n                    \"myOrder\": 0,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"51c76ef1-604d-4b5f-9f82-8795b3c2e18b\",\n                    \"creationDate\": 1525830197207,\n                    \"name\": \"Step2\",\n                    \"schemeId\": \"05d2a4e0-293d-463f-bf1c-ae2570dfa28c\",\n                    \"myOrder\": 1,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"57b9c2d3-ce6e-4723-8d13-5317236e4651\",\n                    \"creationDate\": 1525830197208,\n                    \"name\": \"Step3\",\n                    \"schemeId\": \"05d2a4e0-293d-463f-bf1c-ae2570dfa28c\",\n                    \"myOrder\": 2,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                }\n            ],\n            \"actions\": [\n                {\n                    \"id\": \"45548a4f-c268-4193-9574-aedbe7796cff\",\n                    \"name\": \"Comment\",\n                    \"schemeId\": \"05d2a4e0-293d-463f-bf1c-ae2570dfa28c\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"NEW\",\n                        \"PUBLISHED\",\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"ARCHIVED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"77ad1ee4-3e69-40f4-8702-b83a70877318\",\n                    \"name\": \"Publish\",\n                    \"schemeId\": \"05d2a4e0-293d-463f-bf1c-ae2570dfa28c\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"6c3ed83f-8951-4cd4-ad0b-c5e094fec89b\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"NEW\",\n                        \"PUBLISHED\",\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"ARCHIVED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"b1d404dc-8730-4f5c-b18f-4ad610666018\",\n                    \"name\": \"Save\",\n                    \"schemeId\": \"05d2a4e0-293d-463f-bf1c-ae2570dfa28c\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"7a037cef-0730-410f-b6db-66a630947b81\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"NEW\",\n                        \"PUBLISHED\",\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"ARCHIVED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"e28b7022-8ec3-4cb5-9056-776bb1b35290\",\n                    \"name\": \"Unpublish\",\n                    \"schemeId\": \"05d2a4e0-293d-463f-bf1c-ae2570dfa28c\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"PUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                }\n            ],\n            \"actionSteps\": [\n                {\n                    \"stepId\": \"f280caef-93a8-41e3-a361-7399cffc6ceb\",\n                    \"actionId\": \"b1d404dc-8730-4f5c-b18f-4ad610666018\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"51c76ef1-604d-4b5f-9f82-8795b3c2e18b\",\n                    \"actionId\": \"77ad1ee4-3e69-40f4-8702-b83a70877318\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"51c76ef1-604d-4b5f-9f82-8795b3c2e18b\",\n                    \"actionId\": \"45548a4f-c268-4193-9574-aedbe7796cff\",\n                    \"actionOrder\": \"1\"\n                },\n                {\n                    \"stepId\": \"57b9c2d3-ce6e-4723-8d13-5317236e4651\",\n                    \"actionId\": \"e28b7022-8ec3-4cb5-9056-776bb1b35290\",\n                    \"actionOrder\": \"0\"\n                }\n            ],\n            \"actionClasses\": [\n                {\n                    \"id\": \"2f8e1edb-1a86-4931-856d-83f2a2b4449b\",\n                    \"actionId\": \"45548a4f-c268-4193-9574-aedbe7796cff\",\n                    \"name\": \"Comment on Workflow\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CommentOnWorkflowActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Comment on Workflow\",\n                        \"parameters\": [\n                            {\n                                \"displayName\": \"Workflow Comment\",\n                                \"key\": \"comment\",\n                                \"defaultValue\": null,\n                                \"required\": true\n                            }\n                        ],\n                        \"howTo\": \"This actionlet allows you to add a comment on the workflow task.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Comment on Workflow\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CommentOnWorkflowActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"383564f2-858f-4258-98a4-8a3217ed4a02\",\n                    \"actionId\": \"77ad1ee4-3e69-40f4-8702-b83a70877318\",\n                    \"name\": \"Publish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"32c95482-24fd-4171-9b9f-ddefa9e38f2e\",\n                    \"actionId\": \"b1d404dc-8730-4f5c-b18f-4ad610666018\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"60a0719a-6c78-4fde-bb70-9bcf041c531f\",\n                    \"actionId\": \"e28b7022-8ec3-4cb5-9056-776bb1b35290\",\n                    \"name\": \"Unpublish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Unpublish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will unpublish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Unpublish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet.howTo\"\n                    }\n                }\n            ],\n            \"actionClassParams\": []\n        },\n        \"permissions\": [\n            {\n                \"id\": 0,\n                \"inode\": \"77ad1ee4-3e69-40f4-8702-b83a70877318\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"77ad1ee4-3e69-40f4-8702-b83a70877318\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"1cad5929-b42d-4049-b76e-3ce39e042574\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"b1d404dc-8730-4f5c-b18f-4ad610666018\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"b1d404dc-8730-4f5c-b18f-4ad610666018\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"1cad5929-b42d-4049-b76e-3ce39e042574\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"e28b7022-8ec3-4cb5-9056-776bb1b35290\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"e28b7022-8ec3-4cb5-9056-776bb1b35290\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"1cad5929-b42d-4049-b76e-3ce39e042574\"\n            }\n        ]\n    }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can import schemes as admin\n"
					},
					"response": []
				},
				{
					"name": "Unable to UpdateSchemeViaImport",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "556af800-cf5c-4767-ad04-3ae76caf8c5d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400, Scheme has been updated\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Already exist a scheme with the same id\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"workflowObject\": {\n            \"version\": \"1.0\",\n            \"schemes\": [\n                {\n                    \"id\": \"05d2a4e0-293d-463f-bf1c-ae2570dfa28c\",\n                    \"creationDate\": 1525829943686,\n                    \"name\": \"WF_Import_Rest_2\",\n                    \"description\": \"Rest testing \",\n                    \"archived\": false,\n                    \"mandatory\": false,\n                    \"defaultScheme\": false,\n                    \"modDate\": 1525829933758,\n                    \"entryActionId\": null,\n                    \"system\": false\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"f280caef-93a8-41e3-a361-7399cffc6ceb\",\n                    \"creationDate\": 1525830197207,\n                    \"name\": \"Step1\",\n                    \"schemeId\": \"05d2a4e0-293d-463f-bf1c-ae2570dfa28c\",\n                    \"myOrder\": 0,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"51c76ef1-604d-4b5f-9f82-8795b3c2e18b\",\n                    \"creationDate\": 1525830197207,\n                    \"name\": \"Step2\",\n                    \"schemeId\": \"05d2a4e0-293d-463f-bf1c-ae2570dfa28c\",\n                    \"myOrder\": 1,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"57b9c2d3-ce6e-4723-8d13-5317236e4651\",\n                    \"creationDate\": 1525830197208,\n                    \"name\": \"Step3\",\n                    \"schemeId\": \"05d2a4e0-293d-463f-bf1c-ae2570dfa28c\",\n                    \"myOrder\": 2,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                }\n            ],\n            \"actions\": [\n                {\n                    \"id\": \"45548a4f-c268-4193-9574-aedbe7796cff\",\n                    \"name\": \"Comment\",\n                    \"schemeId\": \"05d2a4e0-293d-463f-bf1c-ae2570dfa28c\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"NEW\",\n                        \"PUBLISHED\",\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"ARCHIVED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"77ad1ee4-3e69-40f4-8702-b83a70877318\",\n                    \"name\": \"Publish\",\n                    \"schemeId\": \"05d2a4e0-293d-463f-bf1c-ae2570dfa28c\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"6c3ed83f-8951-4cd4-ad0b-c5e094fec89b\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"NEW\",\n                        \"PUBLISHED\",\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"ARCHIVED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"b1d404dc-8730-4f5c-b18f-4ad610666018\",\n                    \"name\": \"Save\",\n                    \"schemeId\": \"05d2a4e0-293d-463f-bf1c-ae2570dfa28c\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"7a037cef-0730-410f-b6db-66a630947b81\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"NEW\",\n                        \"PUBLISHED\",\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"ARCHIVED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"e28b7022-8ec3-4cb5-9056-776bb1b35290\",\n                    \"name\": \"Unpublish\",\n                    \"schemeId\": \"05d2a4e0-293d-463f-bf1c-ae2570dfa28c\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"PUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                }\n            ],\n            \"actionSteps\": [\n                {\n                    \"stepId\": \"f280caef-93a8-41e3-a361-7399cffc6ceb\",\n                    \"actionId\": \"b1d404dc-8730-4f5c-b18f-4ad610666018\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"51c76ef1-604d-4b5f-9f82-8795b3c2e18b\",\n                    \"actionId\": \"77ad1ee4-3e69-40f4-8702-b83a70877318\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"51c76ef1-604d-4b5f-9f82-8795b3c2e18b\",\n                    \"actionId\": \"45548a4f-c268-4193-9574-aedbe7796cff\",\n                    \"actionOrder\": \"1\"\n                },\n                {\n                    \"stepId\": \"57b9c2d3-ce6e-4723-8d13-5317236e4651\",\n                    \"actionId\": \"e28b7022-8ec3-4cb5-9056-776bb1b35290\",\n                    \"actionOrder\": \"0\"\n                }\n            ],\n            \"actionClasses\": [\n                {\n                    \"id\": \"2f8e1edb-1a86-4931-856d-83f2a2b4449b\",\n                    \"actionId\": \"45548a4f-c268-4193-9574-aedbe7796cff\",\n                    \"name\": \"Comment on Workflow\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CommentOnWorkflowActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Comment on Workflow\",\n                        \"parameters\": [\n                            {\n                                \"displayName\": \"Workflow Comment\",\n                                \"key\": \"comment\",\n                                \"defaultValue\": null,\n                                \"required\": true\n                            }\n                        ],\n                        \"howTo\": \"This actionlet allows you to add a comment on the workflow task.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Comment on Workflow\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CommentOnWorkflowActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"383564f2-858f-4258-98a4-8a3217ed4a02\",\n                    \"actionId\": \"77ad1ee4-3e69-40f4-8702-b83a70877318\",\n                    \"name\": \"Publish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"32c95482-24fd-4171-9b9f-ddefa9e38f2e\",\n                    \"actionId\": \"b1d404dc-8730-4f5c-b18f-4ad610666018\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"60a0719a-6c78-4fde-bb70-9bcf041c531f\",\n                    \"actionId\": \"e28b7022-8ec3-4cb5-9056-776bb1b35290\",\n                    \"name\": \"Unpublish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Unpublish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will unpublish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Unpublish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet.howTo\"\n                    }\n                }\n            ],\n            \"actionClassParams\": []\n        },\n        \"permissions\": [\n            {\n                \"id\": 0,\n                \"inode\": \"77ad1ee4-3e69-40f4-8702-b83a70877318\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"77ad1ee4-3e69-40f4-8702-b83a70877318\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"1cad5929-b42d-4049-b76e-3ce39e042574\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"b1d404dc-8730-4f5c-b18f-4ad610666018\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"b1d404dc-8730-4f5c-b18f-4ad610666018\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"1cad5929-b42d-4049-b76e-3ce39e042574\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"e28b7022-8ec3-4cb5-9056-776bb1b35290\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"e28b7022-8ec3-4cb5-9056-776bb1b35290\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"1cad5929-b42d-4049-b76e-3ce39e042574\"\n            }\n        ]\n    }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can import schemes as admin\n"
					},
					"response": []
				},
				{
					"name": "Schemes with the same name validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d584adb1-318b-4e37-8609-8642281969cf",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200, Already exist schemes with the same name\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Correct response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"workflowObject\": {\n            \"version\": \"1.0\",\n            \"schemes\": [\n                {\n                    \"id\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"creationDate\": 1525904476150,\n                    \"name\": \"WF_Import_Rest_2\",\n                    \"description\": \"\",\n                    \"archived\": false,\n                    \"mandatory\": false,\n                    \"defaultScheme\": false,\n                    \"modDate\": 1525903826723,\n                    \"entryActionId\": null,\n                    \"system\": false\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"122138b0-819b-4030-8915-50540ff0910e\",\n                    \"creationDate\": 1525904559373,\n                    \"name\": \"Published\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"myOrder\": 0,\n                    \"resolved\": true,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"96bf1c19-7aa4-4948-9c0a-0910bd58a4bd\",\n                    \"creationDate\": 1525904559374,\n                    \"name\": \"New\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"myOrder\": 1,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"939d0cb9-ca3a-4bbd-974e-8994b9625218\",\n                    \"creationDate\": 1525904559375,\n                    \"name\": \"Unpublished\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"myOrder\": 2,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"a917c2a1-b95b-4e57-91d7-6926cedc81e7\",\n                    \"creationDate\": 1525904559376,\n                    \"name\": \"REST\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"myOrder\": 3,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"5f60536c-88c5-4341-8a7a-037b6fcf6126\",\n                    \"creationDate\": 1525904559377,\n                    \"name\": \"REST123\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"myOrder\": 4,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"1dd663b7-a160-450c-a7ec-9e4d877f95ee\",\n                    \"creationDate\": 1525904559378,\n                    \"name\": \"REST123\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"myOrder\": 5,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"b5ab9f6f-07e9-4c19-a4fe-890e57ca9c09\",\n                    \"creationDate\": 1525904559379,\n                    \"name\": \"REST123\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"myOrder\": 6,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                }\n            ],\n            \"actions\": [\n                {\n                    \"id\": \"8b7608ca-4eeb-4521-a640-a0760d8cbcd4\",\n                    \"name\": \"Archive\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"d6b095b6-b65f-4bdb-bbfd-701d663dfee2\",\n                    \"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"1a0a1a5e-030d-4c8d-948e-e8a800dcc579\",\n                    \"name\": \"Copy\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"PUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"f29d60b4-02fa-4383-adfd-99186bb4790d\",\n                    \"name\": \"Delete\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"d6b095b6-b65f-4bdb-bbfd-701d663dfee2\",\n                    \"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNLOCKED\",\n                        \"LOCKED\",\n                        \"ARCHIVED\"\n                    ]\n                },\n                {\n                    \"id\": \"28c62033-a9ff-47f4-b8af-4ab04681d682\",\n                    \"name\": \"Publish\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"dc3c9cd0-8467-404b-bf95-cb7df3fbc293\",\n                    \"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"d260a5a9-bb45-4d29-a919-d721349a7409\",\n                    \"name\": \"Republish-123fa\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": true,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"NEW\",\n                        \"PUBLISHED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"7bafc32f-69ed-418c-adc3-f02b1b3e786b\",\n                    \"name\": \"Save\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n                    \"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"NEW\",\n                        \"PUBLISHED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"1742e12e-74d7-4ac8-9c78-df62005f3f2d\",\n                    \"name\": \"Save / Publish\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"dc3c9cd0-8467-404b-bf95-cb7df3fbc293\",\n                    \"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"NEW\",\n                        \"PUBLISHED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"eff11572-dc43-47c9-963d-8359e1cdeac0\",\n                    \"name\": \"Unarchive\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n                    \"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNLOCKED\",\n                        \"LOCKED\",\n                        \"ARCHIVED\"\n                    ]\n                },\n                {\n                    \"id\": \"075eecdd-8aa0-4e54-a8a1-1fe288d17457\",\n                    \"name\": \"Unpublish\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n                    \"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"PUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"950b541c-2a6a-4f1a-85bb-3d4fef69991a\",\n                    \"name\": \"saveContent FROM REST NEW\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": true,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"NEW\",\n                        \"PUBLISHED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"3ac5b635-d834-40b7-b397-540f1879fbb5\",\n                    \"name\": \"saveContent FROM REST NEW\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": true,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"NEW\",\n                        \"PUBLISHED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"f924951e-7231-4d34-8a44-64b9eb09a923\",\n                    \"name\": \"saveContent FROM REST NEW\",\n                    \"schemeId\": \"2cf96dff-1ed3-4d1f-af34-4de6eb2cbf14\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": true,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"NEW\",\n                        \"PUBLISHED\",\n                        \"LOCKED\"\n                    ]\n                }\n            ],\n            \"actionSteps\": [\n                {\n                    \"stepId\": \"122138b0-819b-4030-8915-50540ff0910e\",\n                    \"actionId\": \"f29d60b4-02fa-4383-adfd-99186bb4790d\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"122138b0-819b-4030-8915-50540ff0910e\",\n                    \"actionId\": \"d260a5a9-bb45-4d29-a919-d721349a7409\",\n                    \"actionOrder\": \"1\"\n                },\n                {\n                    \"stepId\": \"122138b0-819b-4030-8915-50540ff0910e\",\n                    \"actionId\": \"f924951e-7231-4d34-8a44-64b9eb09a923\",\n                    \"actionOrder\": \"2\"\n                },\n                {\n                    \"stepId\": \"122138b0-819b-4030-8915-50540ff0910e\",\n                    \"actionId\": \"075eecdd-8aa0-4e54-a8a1-1fe288d17457\",\n                    \"actionOrder\": \"3\"\n                },\n                {\n                    \"stepId\": \"122138b0-819b-4030-8915-50540ff0910e\",\n                    \"actionId\": \"1a0a1a5e-030d-4c8d-948e-e8a800dcc579\",\n                    \"actionOrder\": \"4\"\n                },\n                {\n                    \"stepId\": \"122138b0-819b-4030-8915-50540ff0910e\",\n                    \"actionId\": \"1742e12e-74d7-4ac8-9c78-df62005f3f2d\",\n                    \"actionOrder\": \"5\"\n                },\n                {\n                    \"stepId\": \"96bf1c19-7aa4-4948-9c0a-0910bd58a4bd\",\n                    \"actionId\": \"7bafc32f-69ed-418c-adc3-f02b1b3e786b\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"96bf1c19-7aa4-4948-9c0a-0910bd58a4bd\",\n                    \"actionId\": \"1742e12e-74d7-4ac8-9c78-df62005f3f2d\",\n                    \"actionOrder\": \"1\"\n                },\n                {\n                    \"stepId\": \"939d0cb9-ca3a-4bbd-974e-8994b9625218\",\n                    \"actionId\": \"8b7608ca-4eeb-4521-a640-a0760d8cbcd4\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"939d0cb9-ca3a-4bbd-974e-8994b9625218\",\n                    \"actionId\": \"950b541c-2a6a-4f1a-85bb-3d4fef69991a\",\n                    \"actionOrder\": \"1\"\n                },\n                {\n                    \"stepId\": \"939d0cb9-ca3a-4bbd-974e-8994b9625218\",\n                    \"actionId\": \"3ac5b635-d834-40b7-b397-540f1879fbb5\",\n                    \"actionOrder\": \"2\"\n                },\n                {\n                    \"stepId\": \"939d0cb9-ca3a-4bbd-974e-8994b9625218\",\n                    \"actionId\": \"28c62033-a9ff-47f4-b8af-4ab04681d682\",\n                    \"actionOrder\": \"3\"\n                },\n                {\n                    \"stepId\": \"939d0cb9-ca3a-4bbd-974e-8994b9625218\",\n                    \"actionId\": \"1a0a1a5e-030d-4c8d-948e-e8a800dcc579\",\n                    \"actionOrder\": \"4\"\n                },\n                {\n                    \"stepId\": \"939d0cb9-ca3a-4bbd-974e-8994b9625218\",\n                    \"actionId\": \"7bafc32f-69ed-418c-adc3-f02b1b3e786b\",\n                    \"actionOrder\": \"5\"\n                },\n                {\n                    \"stepId\": \"939d0cb9-ca3a-4bbd-974e-8994b9625218\",\n                    \"actionId\": \"1742e12e-74d7-4ac8-9c78-df62005f3f2d\",\n                    \"actionOrder\": \"6\"\n                },\n                {\n                    \"stepId\": \"939d0cb9-ca3a-4bbd-974e-8994b9625218\",\n                    \"actionId\": \"075eecdd-8aa0-4e54-a8a1-1fe288d17457\",\n                    \"actionOrder\": \"7\"\n                }\n            ],\n            \"actionClasses\": [\n                {\n                    \"id\": \"3917fe55-8a88-47ba-9e69-736d54f1619f\",\n                    \"actionId\": \"8b7608ca-4eeb-4521-a640-a0760d8cbcd4\",\n                    \"name\": \"Archive content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Archive content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will archive the content.\",\n                        \"localizedName\": \"Archive Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"efe2b590-f278-4493-9924-e35602d04e82\",\n                    \"actionId\": \"8b7608ca-4eeb-4521-a640-a0760d8cbcd4\",\n                    \"name\": \"Unlock content\",\n                    \"order\": 1,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Unlock content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will checkin and unlock the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Unlock Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"fdaa624a-6a04-45fb-a292-77955abd1a4c\",\n                    \"actionId\": \"1a0a1a5e-030d-4c8d-948e-e8a800dcc579\",\n                    \"name\": \"Copy Contentlet\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CopyActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Copy Contentlet\",\n                        \"parameters\": [],\n                        \"howTo\": \"This workflow actionlet copies the edited contentlet \",\n                        \"localizedName\": \"Copy Contentlet\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CopyActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"6a079405-037f-46a5-8bc4-a4261773e370\",\n                    \"actionId\": \"f29d60b4-02fa-4383-adfd-99186bb4790d\",\n                    \"name\": \"Delete content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.DeleteContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Delete content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This action will delete the content. Warning: this can't be undone!\",\n                        \"localizedName\": \"Delete content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.DeleteContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"bc2fcf15-8fd6-4501-b7b6-b10a4b94b94a\",\n                    \"actionId\": \"28c62033-a9ff-47f4-b8af-4ab04681d682\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"9feaa4d0-d4b8-4953-9120-fba760d95332\",\n                    \"actionId\": \"28c62033-a9ff-47f4-b8af-4ab04681d682\",\n                    \"name\": \"Publish content\",\n                    \"order\": 1,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"18c6db08-fce5-481e-9e90-c2b626d3f0d1\",\n                    \"actionId\": \"28c62033-a9ff-47f4-b8af-4ab04681d682\",\n                    \"name\": \"Unlock content\",\n                    \"order\": 2,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Unlock content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will checkin and unlock the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Unlock Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"b778e415-d06a-42c3-8621-c92d4c0f6af4\",\n                    \"actionId\": \"d260a5a9-bb45-4d29-a919-d721349a7409\",\n                    \"name\": \"Publish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"dc7209c1-fff2-4132-8ed8-ca07ebcac290\",\n                    \"actionId\": \"7bafc32f-69ed-418c-adc3-f02b1b3e786b\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"416aebe9-1122-441a-848b-7aa27bcd9535\",\n                    \"actionId\": \"1742e12e-74d7-4ac8-9c78-df62005f3f2d\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"8636ceff-f78e-4285-b574-b95e8bf94e35\",\n                    \"actionId\": \"1742e12e-74d7-4ac8-9c78-df62005f3f2d\",\n                    \"name\": \"Publish content\",\n                    \"order\": 1,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"7c41d3c4-9728-4caa-a7bd-d9761a0e4dc3\",\n                    \"actionId\": \"eff11572-dc43-47c9-963d-8359e1cdeac0\",\n                    \"name\": \"Unarchive content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.UnarchiveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Unarchive content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will un archive the content and return it to a working state\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Unarchive Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.UnarchiveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"c0b28ffa-b6a7-42f3-88df-92a2fcb9e8df\",\n                    \"actionId\": \"075eecdd-8aa0-4e54-a8a1-1fe288d17457\",\n                    \"name\": \"Unpublish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Unpublish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will unpublish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Unpublish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"b37dbb77-c8bf-464f-b327-5336eed06219\",\n                    \"actionId\": \"950b541c-2a6a-4f1a-85bb-3d4fef69991a\",\n                    \"name\": \"Notify Assignee\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Notify Assignee\",\n                        \"parameters\": [\n                            {\n                                \"displayName\": \"Email Subject\",\n                                \"key\": \"emailSubject\",\n                                \"defaultValue\": \"\",\n                                \"required\": false\n                            },\n                            {\n                                \"displayName\": \"Email Message\",\n                                \"key\": \"emailBody\",\n                                \"defaultValue\": null,\n                                \"required\": false\n                            },\n                            {\n                                \"displayName\": \"Is Html?\",\n                                \"key\": \"isHtml\",\n                                \"defaultValue\": \"true\",\n                                \"required\": false\n                            }\n                        ],\n                        \"howTo\": \"This actionlet will send an email to the assignee (or assignees if the next assign is a role).  It uses a default email subject and message, but can be overridden.  Both the subject and message are parsed Velocity, and have access to a $workflow object that gives them $workflow.task, $workflow.nextAssign, $workflow.action, $workflow.step, etc.. \",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Notify Assignee\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"9e9ba574-2d16-4178-92d8-6cd49703b666\",\n                    \"actionId\": \"3ac5b635-d834-40b7-b397-540f1879fbb5\",\n                    \"name\": \"Notify Assignee\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Notify Assignee\",\n                        \"parameters\": [\n                            {\n                                \"displayName\": \"Email Subject\",\n                                \"key\": \"emailSubject\",\n                                \"defaultValue\": \"\",\n                                \"required\": false\n                            },\n                            {\n                                \"displayName\": \"Email Message\",\n                                \"key\": \"emailBody\",\n                                \"defaultValue\": null,\n                                \"required\": false\n                            },\n                            {\n                                \"displayName\": \"Is Html?\",\n                                \"key\": \"isHtml\",\n                                \"defaultValue\": \"true\",\n                                \"required\": false\n                            }\n                        ],\n                        \"howTo\": \"This actionlet will send an email to the assignee (or assignees if the next assign is a role).  It uses a default email subject and message, but can be overridden.  Both the subject and message are parsed Velocity, and have access to a $workflow object that gives them $workflow.task, $workflow.nextAssign, $workflow.action, $workflow.step, etc.. \",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Notify Assignee\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"efb42f70-b2e9-4b28-8e0c-e0fc624114d6\",\n                    \"actionId\": \"f924951e-7231-4d34-8a44-64b9eb09a923\",\n                    \"name\": \"Notify Assignee\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Notify Assignee\",\n                        \"parameters\": [\n                            {\n                                \"displayName\": \"Email Subject\",\n                                \"key\": \"emailSubject\",\n                                \"defaultValue\": \"\",\n                                \"required\": false\n                            },\n                            {\n                                \"displayName\": \"Email Message\",\n                                \"key\": \"emailBody\",\n                                \"defaultValue\": null,\n                                \"required\": false\n                            },\n                            {\n                                \"displayName\": \"Is Html?\",\n                                \"key\": \"isHtml\",\n                                \"defaultValue\": \"true\",\n                                \"required\": false\n                            }\n                        ],\n                        \"howTo\": \"This actionlet will send an email to the assignee (or assignees if the next assign is a role).  It uses a default email subject and message, but can be overridden.  Both the subject and message are parsed Velocity, and have access to a $workflow object that gives them $workflow.task, $workflow.nextAssign, $workflow.action, $workflow.step, etc.. \",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Notify Assignee\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet.howTo\"\n                    }\n                }\n            ],\n            \"actionClassParams\": []\n        },\n        \"permissions\": [\n            {\n                \"id\": 0,\n                \"inode\": \"8b7608ca-4eeb-4521-a640-a0760d8cbcd4\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"617f7300-5c7b-463f-9554-380b918520bc\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"1a0a1a5e-030d-4c8d-948e-e8a800dcc579\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"617f7300-5c7b-463f-9554-380b918520bc\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"f29d60b4-02fa-4383-adfd-99186bb4790d\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"c3eb4526-6d96-48d8-9540-e5fa560cfc0f\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"28c62033-a9ff-47f4-b8af-4ab04681d682\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"c3eb4526-6d96-48d8-9540-e5fa560cfc0f\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"7bafc32f-69ed-418c-adc3-f02b1b3e786b\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"617f7300-5c7b-463f-9554-380b918520bc\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"1742e12e-74d7-4ac8-9c78-df62005f3f2d\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"c3eb4526-6d96-48d8-9540-e5fa560cfc0f\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"eff11572-dc43-47c9-963d-8359e1cdeac0\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"617f7300-5c7b-463f-9554-380b918520bc\"\n            },\n            {\n                \"id\": 0,\n                \"inode\": \"075eecdd-8aa0-4e54-a8a1-1fe288d17457\",\n                \"permission\": 1,\n                \"type\": \"individual\",\n                \"bitPermission\": false,\n                \"individualPermission\": true,\n                \"roleId\": \"c3eb4526-6d96-48d8-9540-e5fa560cfc0f\"\n            }\n        ]\n    }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can import schemes as admin\n"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "86b04136-c1a0-4e3f-8b55-dfd1b4dd5afe",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can import schemes as limited user if you have permissions to the workflow portlet "
					},
					"response": []
				}
			]
		},
		{
			"name": "ExportScheme",
			"description": null,
			"item": [
				{
					"name": "User Credentials Validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4dd7d13a-0784-4b48-a555-24ebced29724",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, Invalid credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Correct response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a4/export",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a4",
								"export"
							]
						},
						"description": "Validate you can't export without credentials"
					},
					"response": []
				},
				{
					"name": "User Permissions Validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "b46378e2-d11a-44af-ac4c-518492f941ff",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403 because the user don't have permissions to the workflow portlet\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a4/export",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a4",
								"export"
							]
						},
						"description": "Validate you can't export schemes with an unautorized user "
					},
					"response": []
				},
				{
					"name": "Sucess Export As Limited",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3210c484-d1d0-4859-93e1-62918bf66be4",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Validate returs the system workflow\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"System Workflow\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a4/export",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a4",
								"export"
							]
						},
						"description": "Validate you can export schemes as limeted user with access to the workflow portlet \n"
					},
					"response": []
				},
				{
					"name": "Sucess Export As Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c631a0f2-82d7-4ea2-9254-cda294082477",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate returs the system workflow\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"System Workflow\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/export",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"export"
							]
						},
						"description": "Validate you can export schemes as admin user"
					},
					"response": []
				},
				{
					"name": "ShortlyIdValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c631a0f2-82d7-4ea2-9254-cda294082477",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Validate returs the system workflow\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"System Workflow\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a4/export",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a4",
								"export"
							]
						},
						"description": "Validate you can export schemes as admin user"
					},
					"response": []
				}
			]
		},
		{
			"name": "DeleteScheme",
			"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")",
			"item": [
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8564d0a5-63dd-463b-b6e8-d820a1f2e5db",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/85c1515c-c4f3-463c-bac2-860b8fcacc34",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"85c1515c-c4f3-463c-bac2-860b8fcacc34"
							]
						},
						"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e3f759d1-3fa1-4cc3-9361-cbafc55b6c35",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/60d40a6b-a677-45d6-8f5b-e16431b1eb1c",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"60d40a6b-a677-45d6-8f5b-e16431b1eb1c"
							]
						},
						"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "PortletAccessValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "109b18cc-dce9-4194-94bc-a373aebe7478",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Access to the Workflows Portlet is not allowed\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/60d40a6b-a677-45d6-8f5b-e16431b1eb1c",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"60d40a6b-a677-45d6-8f5b-e16431b1eb1c"
							]
						},
						"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "ValidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a45a222-f517-45ef-804c-0e39842c3b65",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The scheme does not exist\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/a60d40a6b-a677-45d6-8f5b-e16431b1eb1c",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"a60d40a6b-a677-45d6-8f5b-e16431b1eb1c"
							]
						},
						"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "SupportShorlty",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38358b74-ea75-4f6e-9b8a-f7daa9a2d975",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 403, You need credentials\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Can not delete workflow Id:d61a59e1-a49c-46f2-a929-db2b4bfa88b2, name:System Workflo\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a4",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a4"
							]
						},
						"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8202edbd-a63c-480a-9b26-bca9e164f083",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "c71751b3-33f4-4070-a6f3-bc2dbb2d3ef1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e9cf66d2-c5b7-42d2-a522-8e8c7e8c7217",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "5d46c8f4-1072-4719-87cc-85e97f030ba1",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "ea253372-1591-4e5a-81b5-567affd7cfd2",
			"key": "serverURL",
			"value": "http://localhost:8080",
			"type": "string",
			"description": ""
		}
	]
}