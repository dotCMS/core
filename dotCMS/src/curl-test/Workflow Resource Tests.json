{
	"info": {
		"_postman_id": "6136eb32-11b6-4b32-90eb-1a0cf106912e",
		"name": "Workflow Resource Tests [/api/v1/workflows]",
		"description": "Test the necesary validations to every end point of the worlflow resource ",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Save Scheme [POST /api/v1/workflow/schemes]",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"REST1\", \"schemeDescription\": \"rest1\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				},
				{
					"name": "GivenValidScheme_ShouldSave",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"REST Schema\\\"\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"schemeId\", jsonData.entity.id);",
									"pm.collectionVariables.set(\"schemeIdShorty\", jsonData.entity.id.replace(\"-\",\"\").substring(0,10));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"REST Schema\", \"schemeDescription\": \"rest1\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				},
				{
					"name": "GivenNewSchemeWithExistingName_ShouldSave",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, Scheme already exist\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"REST\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"REST1\", \"schemeDescription\": \"rest1\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				},
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "GivenEmptyBody_ShouldRespondBadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Save Step [POST /api/v1/workflow/steps]",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\", \"stepName\":\"REST123\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "GivenValidStep_shouldSave",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"My REST step\\\"\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"stepId\", jsonData.entity.id);",
									"pm.collectionVariables.set(\"stepIdShorty\", jsonData.entity.id.replace(\"-\",\"\").substring(0,10));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"{{schemeId}}\", \"stepName\":\"My REST step\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "GivenInvalidSchemeId_ShouldRespond404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Scheme does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"ad61a59e1-a49c-46f2-a929-db2b4bfa88b2\", \"stepName\":\"REST123\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"Step shorty schema id\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"{{schemeIdShorty}}\", \"stepName\":\"Step shorty schema id\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "GivenEmptyBody_ShouldRespondBadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "SaveAction [POST /api/v1/workflow/actions]",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "ValidAction_shouldSave",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\"\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"actionId\", jsonData.entity.id);",
									"pm.collectionVariables.set(\"actionIdShorty\", jsonData.entity.id.replace(\"-\",\"\").substring(0,10));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"{{stepId}}\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"{{schemeId}}\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId_ShouldRespond404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Step does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"aaee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId_ShouldRespond404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Scheme does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"ad61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "ValidActionWithShortyStepIdAndShortySchemeId_ShouldSave",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"{{stepIdShorty}}\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"{{schemeIdShorty}}\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "EmptyBody_ShouldRespondBadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				}
			],
			"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n@Path(\"/actions\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "findSchemas [GET /api/v1/workflow/schemes]",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Validate you can't get workflow data if you don't have credentials"
					},
					"response": []
				},
				{
					"name": "SuccessListOfSchemes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"//Validate that returns the schemes included in the empty starter site ",
									"",
									"pm.test(\"Includes exiting Scheme\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"REST Schema\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Validate you have the list of schemas "
					},
					"response": []
				}
			],
			"description": "Returns all schemes non-archived associated to a content type. 401 if the user does not have permission.\n\n@Path(\"/schemes\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "findAllSchemesAndSchemesByContentType",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/schemescontenttypes/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"schemescontenttypes",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Validate you can't get workflow data if you don't have credentials\n"
					},
					"response": []
				},
				{
					"name": "Validate read permissions to the content type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, Content types permissions\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"System Workflow\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/schemescontenttypes/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"schemescontenttypes",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Validate we return a 401 error in case you try to get shemes info of an unautorized conte type\n\nTo test: \nDelete permissions to the content type (generic) and add just permissions to admin "
					},
					"response": []
				},
				{
					"name": "Invalid cotnet type ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404, Content types not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"not found\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/schemescontenttypes/2a3e91e4-fbbf-4876-8c5b-2233c1739b0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"schemescontenttypes",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b0"
							]
						},
						"description": "Validate we return a 401 error in case you try to get shemes info of an unautorized conte type\n\nTo test: \nDelete permissions to the content type (generic) and add just permissions to admin "
					},
					"response": []
				},
				{
					"name": "SucessListOfSchemes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"//Validate that returns the schemes included in the starter site ",
									"",
									"pm.test(\"Includes system workflow\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity.contentTypeSchemes[0].name).to.equal(\"System Workflow\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/schemescontenttypes/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"schemescontenttypes",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Validate you have the list of schemas "
					},
					"response": []
				}
			],
			"description": "Returns all schemes for the content type and include schemes non-archive . 401 if the user does not have permission\n\n@Path(\"/schemes/schemescontenttypes/{contentTypeId}\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "findStepsByScheme [GET /api/v1/workflow/schemes/{schemeId}/steps]",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1-a49c-46f2-a929-db2b4bfa88b2/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"steps"
							]
						},
						"description": "Return Steps associated to the scheme, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/schemes/{schemeId}/steps\")"
					},
					"response": []
				},
				{
					"name": "SuccessListOfSteps",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"//Validate that returns the schemes included in the starter site ",
									"",
									"pm.test(\"Includes existing step\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"My REST step\\\"\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/{{schemeId}}/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"{{schemeId}}",
								"steps"
							]
						},
						"description": "Return Steps associated to the scheme, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/schemes/{schemeId}/steps\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"//Validate that returns the schemes included in the starter site ",
									"",
									"pm.test(\"Valid Response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Scheme does not exist\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/ad61a59e1-a49c-46f2-a929-db2b4bfa88b2/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"ad61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"steps"
							]
						},
						"description": "Return Steps associated to the scheme, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/schemes/{schemeId}/steps\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"//Validate that returns the schemes included in the starter site ",
									"",
									"pm.test(\"Includes `New` step\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"New\");",
									"});",
									"",
									"pm.test(\"Includes Draft step\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Draft\");",
									"});",
									"",
									"pm.test(\"Includes Published step\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Published\");",
									"});",
									"",
									"",
									"pm.test(\"Includes Archived step\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Archived\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a49c/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a49c",
								"steps"
							]
						},
						"description": "Return Steps associated to the scheme, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/schemes/{schemeId}/steps\")"
					},
					"response": []
				}
			],
			"description": "Return Steps associated to the scheme, 404 if does not exists. 401 if the user does not have permission\n\n@Path(\"/schemes/{schemeId}/steps\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "findAvailableActions [GET }/api/v1/workflow/contentlet/{contentId}/actions]",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialValidations",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/contentlet/47327d24-c894-4433-aa4b-0977f458e574/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"contentlet",
								"47327d24-c894-4433-aa4b-0977f458e574",
								"actions"
							]
						},
						"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")"
					},
					"response": []
				},
				{
					"name": "NonExistingInode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"var body = JSON.parse(responseBody);",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Contentlet identified by inode\");",
									"    pm.expect(pm.response.text()).to.include(\"was Not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/contentlet/123/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"contentlet",
								"123",
								"actions"
							]
						},
						"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"postman\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"contentletIdentifier\", jsonData.entity.identifier);",
									"pm.collectionVariables.set(\"contentletInode\", jsonData.entity.inode);",
									"pm.collectionVariables.set(\"contentletIdShorty\", jsonData.entity.inode.replace(\"-\",\"\").substring(0,10));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentlet\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postmanXXY\",\n  \"value\": \"postmanXXY\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "Valid Inode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Publish\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/contentlet/{{contentletInode}}/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"contentlet",
								"{{contentletInode}}",
								"actions"
							]
						},
						"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")"
					},
					"response": []
				},
				{
					"name": "ShortlyIdValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Publish\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/contentlet/{{contentletIdShorty}}/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"contentlet",
								"{{contentletIdShorty}}",
								"actions"
							]
						},
						"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")"
					},
					"response": []
				}
			],
			"description": "This method return all the available actions for an inode\n\n@Path(\"/contentlet/{inode}/actions\")\n",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "findAction [GET /api/v1/workflow/actions/{actionId}]",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436"
							]
						},
						"description": "Returns a single action, 404 if does not exists. 401 if the user does not have permission\n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "NonExistingActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, The action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unable to find Workflow Action (using actionId=b9d89c803)\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c803",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c803"
							]
						},
						"description": "Returns a single action, 404 if does not exists. 401 if the user does not have permission\n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "findAction_GivenExistingActionId_ShouldReturnAction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var actionId = pm.collectionVariables.get(\"actionId\");",
									"",
									"pm.test(\"Includes Action Id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"id\\\":\\\"\"+actionId+\"\\\"\");",
									"});",
									"",
									"pm.test(\"Includes Action name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\"\");",
									"});",
									"",
									"pm.test(\"Includes Scheme Id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"schemeId\\\":\\\"\"+pm.collectionVariables.get(\"schemeId\")+\"\\\"\");",
									";",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/{{actionId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"{{actionId}}"
							]
						},
						"description": "Returns a single action, 404 if does not exists. 401 if the user does not have permission\n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ShortlyIdValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\",\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/{{actionIdShorty}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"{{actionIdShorty}}"
							]
						},
						"description": "Returns a single action, 404 if does not exists. 401 if the user does not have permission\n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "findActionByStep [GET /api/v1/workflow/steps/{{stepId}}/actions/{{actionId}}]",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-1710-4eed-8838-d3db60f78f19/actions/b9d89c80-3d88-4311-8365-187323c96436",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-1710-4eed-8838-d3db60f78f19",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436"
							]
						},
						"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId_ShouldReturn404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, The step does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"stepId=\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/123/actions/{{actionId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"123",
								"actions",
								"{{actionId}}"
							]
						},
						"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ValidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, The action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Unable to find Workflow Action\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/{{stepId}}/actions/123",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"{{stepId}}",
								"actions",
								"123"
							]
						},
						"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ValidStepIdAndActionId_ShouldReturnAction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/{{stepId}}/actions/{{actionId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"{{stepId}}",
								"actions",
								"{{actionId}}"
							]
						},
						"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ShortlyIdvalidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/{{stepIdShorty}}/actions/{{actionIdShorty}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"{{stepIdShorty}}",
								"actions",
								"{{actionIdShorty}}"
							]
						},
						"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				}
			],
			"description": "Returns a single action associated to the step, 404 if does not exists. 401 if the user does not have permission.\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "findActionsByStep (all the actions)",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "userCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/6cb7e3bd-1710-4eed-8838-d3db60f78f19/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"6cb7e3bd-1710-4eed-8838-d3db60f78f19",
								"actions"
							]
						},
						"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "InvalidStep_ShouldRespond404",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, The step does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Step does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/123/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"123",
								"actions"
							]
						},
						"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "GivenExistingStepWithActions_ShouldReturnActions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Step returned\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\"\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/{{stepId}}/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"{{stepId}}",
								"actions"
							]
						},
						"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "ShortlyIdValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Step returned\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\"\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/{{stepId}}/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"{{stepId}}",
								"actions"
							]
						},
						"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				}
			],
			"description": "Returns a collection of actions associated to the step, if step does not have any will returns 200 and an empty list.\n\n@Path(\"/steps/{stepId}/actions\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "findActionByScheme [GET /api/v1/workflow/schemes/{{schemeIdShorty}}/actions]",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/{{schemeId}}/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"{{schemeId}}",
								"actions"
							]
						},
						"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, The scheme does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Scheme does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d123/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d123",
								"actions"
							]
						},
						"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")"
					},
					"response": []
				},
				{
					"name": "GivenExistingSchemeWithActions_ShouldReturnActions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, Success request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"// Validate every return ",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\"\");",
									"});",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/{{schemeId}}/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"{{schemeId}}",
								"actions"
							]
						},
						"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")"
					},
					"response": []
				},
				{
					"name": "ShortlyIdValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, Success request\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"// Validate every return ",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\"\");",
									"});",
									"",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/{{schemeIdShorty}}/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"{{schemeIdShorty}}",
								"actions"
							]
						},
						"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")"
					},
					"response": []
				}
			],
			"description": "Returns a set of actions associated to the schemeId\n\n@Path(\"/schemes/{schemeId}/actions\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "findStepById [GET /api/v1/workflow/steps/{stepId}]",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/94178d17-96a0-4e08-b9aa-94214a7fb31e",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"94178d17-96a0-4e08-b9aa-94214a7fb31e"
							]
						},
						"description": "Get the step by id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"My REST step\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/{{stepId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"{{stepId}}"
							]
						},
						"description": "Get the step by id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, The action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Step does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/adc3c9cd0-8467-404b-bf95-cb7df3fbc293",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"adc3c9cd0-8467-404b-bf95-cb7df3fbc293"
							]
						},
						"description": "Get the step by id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "ShortyValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"My REST step\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/{{stepIdShorty}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"{{stepIdShorty}}"
							]
						},
						"description": "Get the step by id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "findAvailableDefaultActionsByContentType",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {   ",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/contenttype/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"contenttype",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Returns all the possible default actions associated to the content type workflow schemes. 401 if the user does not have permission.\n\n@Path(\"/defaultactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/contenttype/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"contenttype",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Returns all the possible default actions associated to the content type workflow schemes. 401 if the user does not have permission.\n\n@Path(\"/defaultactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidContentTypeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, The action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Content Type with id\");",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"not found\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/contenttype/a2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"contenttype",
								"a2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Returns all the possible default actions associated to the content type workflow schemes. 401 if the user does not have permission.\n\n@Path(\"/defaultactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				}
			],
			"description": "Returns all the possible default actions associated to the content type workflow schemes. 401 if the user does not have permission.\n\n@Path(\"/defaultactions/contenttype/{contentTypeId}\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "findAvailableDefaultActionsBySchemes",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"schemes"
							]
						},
						"description": "Returns all the possible default actions associated to the workflow schemes.\n401 if the user does not have permission.\n\n@Path(\"/defaultactions/schemes\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/schemes?ids={{schemeId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"schemes"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{schemeId}}"
								}
							]
						},
						"description": "Returns all the possible default actions associated to the workflow schemes.\n401 if the user does not have permission.\n\n@Path(\"/defaultactions/schemes\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, The action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Scheme does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/schemes?ids=e61a59e1-a49c-46f2-a929-db2b4bfa88b2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"schemes"
							],
							"query": [
								{
									"key": "ids",
									"value": "e61a59e1-a49c-46f2-a929-db2b4bfa88b2"
								}
							]
						},
						"description": "Returns all the possible default actions associated to the workflow schemes.\n401 if the user does not have permission.\n\n@Path(\"/defaultactions/schemes\")"
					},
					"response": []
				},
				{
					"name": "ShortlySupport",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/defaultactions/schemes?ids={{schemeIdShorty}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"defaultactions",
								"schemes"
							],
							"query": [
								{
									"key": "ids",
									"value": "{{schemeIdShorty}}"
								}
							]
						},
						"description": "Returns all the possible default actions associated to the workflow schemes.\n401 if the user does not have permission.\n\n@Path(\"/defaultactions/schemes\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "findInitialAvailableActionsByContentType",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/initialactions/contenttype/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"initialactions",
								"contenttype",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Finds the available actions of the initial/first step(s) of the workflow scheme(s) associated with a content type Id.\n\n@Path(\"/initialactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"System Workflow\");",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Save\");",
									"});",
									""
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/initialactions/contenttype/2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"initialactions",
								"contenttype",
								"2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Finds the available actions of the initial/first step(s) of the workflow scheme(s) associated with a content type Id.\n\n@Path(\"/initialactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidContentTypeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 \", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Content Type with id:\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/initialactions/contenttype/a2a3e91e4-fbbf-4876-8c5b-2233c1739b05",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"initialactions",
								"contenttype",
								"a2a3e91e4-fbbf-4876-8c5b-2233c1739b05"
							]
						},
						"description": "Finds the available actions of the initial/first step(s) of the workflow scheme(s) associated with a content type Id.\n\n@Path(\"/initialactions/contenttype/{contentTypeId}\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "UpdateAction [PUT /api/v1/workflow/actions/{actionId}]",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"Republish\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4958588d-9c8e-40e4-bfcb-4ded",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4958588d-9c8e-40e4-bfcb-4ded"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Republish\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"Republish\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/{{actionId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"{{actionId}}"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, Action does not exist\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Action does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"ee24a4cb-2d15-4c98-b1bd-6327126451f3\",\n      \"actionName\": \"Republish-test2\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/123",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"123"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "ShortlyId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Republish\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"actionName\": \"Republish-123fa\",\n      \"schemeId\": \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/{{actionIdShorty}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"{{actionIdShorty}}"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "EmptyBody_ShouldRespond400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/4958588d-9c8e-40e4-bfcb-4ded",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"4958588d-9c8e-40e4-bfcb-4ded"
							]
						},
						"description": "This resource updates the workflow action \n404 if the id does not exist \n\n@Path(\"/actions/{actionId}\")"
					},
					"response": []
				}
			],
			"description": "This resource updates the workflow action 404 if the id does not exist\n@Path(\"/actions/{actionId}\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "SaveActionToStep",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"777f1c6b-c877-4a37-ba4b-10627316c2cc\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"{{actionId}}\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/{{stepId}}/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"{{stepId}}",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Step does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"777f1c6b-c877-4a37-ba4b-10627316c2cc\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/adc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"adc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "InvalidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Action does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"a777f1c6b-c877-4a37-ba4b-10627316c2cc\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"actionId\": \"{{actionIdShorty}}\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/{{stepIdShorty}}/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"{{stepIdShorty}}",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				},
				{
					"name": "EmptyBody_ShouldRespond400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/dc3c9cd0-8467-404b-bf95-cb7df3fbc293/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"dc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"actions"
							]
						},
						"description": "This method saves the actions and associate to a specific step\n\n@Path(\"/steps/{stepId}/actions\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "ImportScheme",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Credentials Validations",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, Invalid Credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "    {\n        \"workflowObject\": {\n            \"schemes\": [\n                {\n                    \n                    \"creationDate\": 1523640559394,\n                    \"name\": \"Test1\",\n                    \"description\": \"\",\n                    \"archived\": false,\n                    \"mandatory\": false,\n                    \"defaultScheme\": false,\n                    \"modDate\": 1523640423771,\n                    \"entryActionId\": null,\n                    \"system\": false\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"01d5d41a-007e-463d-a5b5-c35ea27b1a30\",\n                    \"creationDate\": 1523643857447,\n                    \"name\": \"Step1\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"myOrder\": 0,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"2cbf9872-0ed3-407b-b803-70a9a161a7db\",\n                    \"creationDate\": 1523643857447,\n                    \"name\": \"step2\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"myOrder\": 1,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                }\n            ],\n            \"actions\": [\n                {\n                    \"id\": \"81522b66-221b-4496-aec6-0e4c484973f7\",\n                    \"name\": \"Save it\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"2cbf9872-0ed3-407b-b803-70a9a161a7db\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"LOCKED\",\n                        \"NEW\",\n                        \"UNLOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"687c0729-95fe-4e1d-b37c-e9f70615df23\",\n                    \"name\": \"TEst\",\n                    \"schemeId\": \"766d9cef-e138-4fe0-9acc-b8e7e40bbed3\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"LOCKED\",\n                        \"UNLOCKED\"\n                    ]\n                }\n            ],\n            \"actionSteps\": [\n                {\n                    \"stepId\": \"01d5d41a-007e-463d-a5b5-c35ea27b1a30\",\n                    \"actionId\": \"81522b66-221b-4496-aec6-0e4c484973f7\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"2cbf9872-0ed3-407b-b803-70a9a161a7db\",\n                    \"actionId\": \"687c0729-95fe-4e1d-b37c-e9f70615df23\",\n                    \"actionOrder\": \"0\"\n                }\n            ],\n            \"actionClasses\": [\n                {\n                    \"id\": \"2298b780-e1d3-4916-b981-e22fd5553086\",\n                    \"actionId\": \"81522b66-221b-4496-aec6-0e4c484973f7\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"nextStep\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                }\n            ],\n            \"actionClassParams\": []\n        },\n        \"permissions\": []\n}\n    \n"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can't import schemes without credentials"
					},
					"response": []
				},
				{
					"name": "SucessImportAsAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"workflowObject\": {\n            \"version\": \"1.0\",\n            \"schemes\": [\n                {\n                    \"id\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"creationDate\": 1527632337579,\n                    \"name\": \"WF_Import_AsAdmin\",\n                    \"description\": \"REST_1\",\n                    \"archived\": false,\n                    \"mandatory\": false,\n                    \"defaultScheme\": false,\n                    \"modDate\": 1527632329252,\n                    \"entryActionId\": null,\n                    \"system\": false\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"4ec41c51-4006-4713-a28d-d42a719934ac\",\n                    \"creationDate\": 1527632495697,\n                    \"name\": \"Step1\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"myOrder\": 0,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"creationDate\": 1527632495698,\n                    \"name\": \"Step2\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"myOrder\": 1,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"a0f9a62c-182a-4571-b136-6a807550e597\",\n                    \"creationDate\": 1527632495699,\n                    \"name\": \"Step3\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"myOrder\": 2,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"09d794cb-c13a-4379-9553-cdef3842d98c\",\n                    \"creationDate\": 1527632495700,\n                    \"name\": \"Step4\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"myOrder\": 3,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                }\n            ],\n            \"actions\": [\n                {\n                    \"id\": \"1e916358-b9bf-4331-b28b-7af41eefc970\",\n                    \"name\": \"Archive\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"09d794cb-c13a-4379-9553-cdef3842d98c\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"e93c8802-2033-4c3b-88f9-8125301d9816\",\n                    \"name\": \"Publish\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"a0f9a62c-182a-4571-b136-6a807550e597\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"b588eae6-fa32-4eeb-b30e-fa9f7a80da7f\",\n                    \"name\": \"Save\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"NEW\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"334a0f26-76b9-4be7-803b-ab6dc5461023\",\n                    \"name\": \"Un-Archive\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"UNLOCKED\",\n                        \"LOCKED\",\n                        \"ARCHIVED\"\n                    ]\n                },\n                {\n                    \"id\": \"0e807408-701d-4e02-b7a0-8279f3668fdd\",\n                    \"name\": \"Unpublish\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNLOCKED\",\n                        \"LOCKED\",\n                        \"PUBLISHED\"\n                    ]\n                }\n            ],\n            \"actionSteps\": [\n                {\n                    \"stepId\": \"4ec41c51-4006-4713-a28d-d42a719934ac\",\n                    \"actionId\": \"b588eae6-fa32-4eeb-b30e-fa9f7a80da7f\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"actionId\": \"1e916358-b9bf-4331-b28b-7af41eefc970\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"actionId\": \"e93c8802-2033-4c3b-88f9-8125301d9816\",\n                    \"actionOrder\": \"1\"\n                },\n                {\n                    \"stepId\": \"a0f9a62c-182a-4571-b136-6a807550e597\",\n                    \"actionId\": \"0e807408-701d-4e02-b7a0-8279f3668fdd\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"09d794cb-c13a-4379-9553-cdef3842d98c\",\n                    \"actionId\": \"334a0f26-76b9-4be7-803b-ab6dc5461023\",\n                    \"actionOrder\": \"0\"\n                }\n            ],\n            \"actionClasses\": [\n                {\n                    \"id\": \"889a58e3-2c22-4164-b3c1-62fbf93b5949\",\n                    \"actionId\": \"1e916358-b9bf-4331-b28b-7af41eefc970\",\n                    \"name\": \"Archive content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Archive content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will archive the content.\",\n                        \"localizedName\": \"Archive Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"51610a9a-9be6-489b-ba75-336bf632fc13\",\n                    \"actionId\": \"e93c8802-2033-4c3b-88f9-8125301d9816\",\n                    \"name\": \"Publish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"f52163e8-c4a1-4862-be40-0c530cd8f154\",\n                    \"actionId\": \"b588eae6-fa32-4eeb-b30e-fa9f7a80da7f\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"789b3b43-0b19-40df-b5e0-e7e161dd1f39\",\n                    \"actionId\": \"334a0f26-76b9-4be7-803b-ab6dc5461023\",\n                    \"name\": \"Unarchive content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.UnarchiveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Unarchive content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will un archive the content and return it to a working state\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Unarchive Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.UnarchiveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"700330ab-8974-40d5-9131-67aa05731b48\",\n                    \"actionId\": \"0e807408-701d-4e02-b7a0-8279f3668fdd\",\n                    \"name\": \"Publish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                }\n            ],\n            \"actionClassParams\": []\n        },\n        \"permissions\": []\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can import schemes as admin\n"
					},
					"response": []
				},
				{
					"name": "ImportSchemaExistingId_ShouldRespond400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Already existing id\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Already exist a scheme with the same id\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"workflowObject\": {\n            \"version\": \"1.0\",\n            \"schemes\": [\n                {\n                    \"id\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"creationDate\": 1527632337579,\n                    \"name\": \"WF_Import_AsAdmin\",\n                    \"description\": \"REST_1\",\n                    \"archived\": false,\n                    \"mandatory\": false,\n                    \"defaultScheme\": false,\n                    \"modDate\": 1527632329252,\n                    \"entryActionId\": null,\n                    \"system\": false\n                }\n            ],\n            \"steps\": [\n                {\n                    \"id\": \"4ec41c51-4006-4713-a28d-d42a719934ac\",\n                    \"creationDate\": 1527632495697,\n                    \"name\": \"Step1\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"myOrder\": 0,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"creationDate\": 1527632495698,\n                    \"name\": \"Step2\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"myOrder\": 1,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"a0f9a62c-182a-4571-b136-6a807550e597\",\n                    \"creationDate\": 1527632495699,\n                    \"name\": \"Step3\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"myOrder\": 2,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                },\n                {\n                    \"id\": \"09d794cb-c13a-4379-9553-cdef3842d98c\",\n                    \"creationDate\": 1527632495700,\n                    \"name\": \"Step4\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"myOrder\": 3,\n                    \"resolved\": false,\n                    \"enableEscalation\": false,\n                    \"escalationAction\": null,\n                    \"escalationTime\": 0\n                }\n            ],\n            \"actions\": [\n                {\n                    \"id\": \"1e916358-b9bf-4331-b28b-7af41eefc970\",\n                    \"name\": \"Archive\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"09d794cb-c13a-4379-9553-cdef3842d98c\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"e93c8802-2033-4c3b-88f9-8125301d9816\",\n                    \"name\": \"Publish\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"a0f9a62c-182a-4571-b136-6a807550e597\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNPUBLISHED\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"b588eae6-fa32-4eeb-b30e-fa9f7a80da7f\",\n                    \"name\": \"Save\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"NEW\",\n                        \"UNLOCKED\",\n                        \"LOCKED\"\n                    ]\n                },\n                {\n                    \"id\": \"334a0f26-76b9-4be7-803b-ab6dc5461023\",\n                    \"name\": \"Un-Archive\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"currentstep\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": true,\n                    \"showOn\": [\n                        \"UNLOCKED\",\n                        \"LOCKED\",\n                        \"ARCHIVED\"\n                    ]\n                },\n                {\n                    \"id\": \"0e807408-701d-4e02-b7a0-8279f3668fdd\",\n                    \"name\": \"Unpublish\",\n                    \"schemeId\": \"42771904-b7d9-42b7-b038-8e077fabcf3f\",\n                    \"condition\": \"\",\n                    \"nextStep\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"nextAssign\": \"e7d4e34e-5127-45fc-8123-d48b62d510e3\",\n                    \"icon\": \"workflowIcon\",\n                    \"roleHierarchyForAssign\": false,\n                    \"assignable\": false,\n                    \"commentable\": false,\n                    \"order\": 0,\n                    \"owner\": null,\n                    \"nextStepCurrentStep\": false,\n                    \"showOn\": [\n                        \"UNLOCKED\",\n                        \"LOCKED\",\n                        \"PUBLISHED\"\n                    ]\n                }\n            ],\n            \"actionSteps\": [\n                {\n                    \"stepId\": \"4ec41c51-4006-4713-a28d-d42a719934ac\",\n                    \"actionId\": \"b588eae6-fa32-4eeb-b30e-fa9f7a80da7f\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"actionId\": \"1e916358-b9bf-4331-b28b-7af41eefc970\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"5fa5a384-53c0-4c47-8ba1-5751e003b7b4\",\n                    \"actionId\": \"e93c8802-2033-4c3b-88f9-8125301d9816\",\n                    \"actionOrder\": \"1\"\n                },\n                {\n                    \"stepId\": \"a0f9a62c-182a-4571-b136-6a807550e597\",\n                    \"actionId\": \"0e807408-701d-4e02-b7a0-8279f3668fdd\",\n                    \"actionOrder\": \"0\"\n                },\n                {\n                    \"stepId\": \"09d794cb-c13a-4379-9553-cdef3842d98c\",\n                    \"actionId\": \"334a0f26-76b9-4be7-803b-ab6dc5461023\",\n                    \"actionOrder\": \"0\"\n                }\n            ],\n            \"actionClasses\": [\n                {\n                    \"id\": \"889a58e3-2c22-4164-b3c1-62fbf93b5949\",\n                    \"actionId\": \"1e916358-b9bf-4331-b28b-7af41eefc970\",\n                    \"name\": \"Archive content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Archive content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will archive the content.\",\n                        \"localizedName\": \"Archive Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"51610a9a-9be6-489b-ba75-336bf632fc13\",\n                    \"actionId\": \"e93c8802-2033-4c3b-88f9-8125301d9816\",\n                    \"name\": \"Publish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"f52163e8-c4a1-4862-be40-0c530cd8f154\",\n                    \"actionId\": \"b588eae6-fa32-4eeb-b30e-fa9f7a80da7f\",\n                    \"name\": \"Save content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Save content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will checkin the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Save content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"789b3b43-0b19-40df-b5e0-e7e161dd1f39\",\n                    \"actionId\": \"334a0f26-76b9-4be7-803b-ab6dc5461023\",\n                    \"name\": \"Unarchive content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.UnarchiveContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Unarchive content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will un archive the content and return it to a working state\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Unarchive Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.UnarchiveContentActionlet.howTo\"\n                    }\n                },\n                {\n                    \"id\": \"700330ab-8974-40d5-9131-67aa05731b48\",\n                    \"actionId\": \"0e807408-701d-4e02-b7a0-8279f3668fdd\",\n                    \"name\": \"Publish content\",\n                    \"order\": 0,\n                    \"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n                    \"actionlet\": {\n                        \"name\": \"Publish content\",\n                        \"parameters\": null,\n                        \"howTo\": \"This actionlet will publish the content.\",\n                        \"nextStep\": null,\n                        \"localizedName\": \"Publish Content\",\n                        \"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\"\n                    }\n                }\n            ],\n            \"actionClassParams\": []\n        },\n        \"permissions\": []\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can import schemes as admin\n"
					},
					"response": []
				},
				{
					"name": "EmptyBody_ShouldRespond400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						},
						"description": "Validate you can import schemes as limited user if you have permissions to the workflow portlet "
					},
					"response": []
				},
				{
					"name": "Import scheme with invalid next assign and permissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"OK\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"permissions\": [\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"7e1efac1-f59d-4f6e-a720-7aab1c18a32d\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"86a2c2c7-0f8b-434e-a5dd-3eef3157dec6\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"504bd1f6-1373-4897-a000-1149d7f454fd\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"86a2c2c7-0f8b-434e-a5dd-3eef3157dec6\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"a5f85a15-cc64-4a3f-8ea0-302af7eb5bf2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"aa1cc36f-53b1-4600-9f79-14dec97e83b8\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"a5f85a15-cc64-4a3f-8ea0-302af7eb5bf2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"1b2b1ebe-8a3c-43c5-a7e9-698ca033e0be\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"a5f85a15-cc64-4a3f-8ea0-302af7eb5bf2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"f9e75a0b-2972-4264-be13-77865c4b6b3c\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"a5f85a15-cc64-4a3f-8ea0-302af7eb5bf2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6a638b3a-31fc-4e71-af0b-cb2302d1f19a\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"504bd1f6-1373-4897-a000-1149d7f454fd\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6a638b3a-31fc-4e71-af0b-cb2302d1f19a\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"e4e924b5-3880-41c7-8dd9-528ee9f8e26e\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"504bd1f6-1373-4897-a000-1149d7f454fd\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"e4e924b5-3880-41c7-8dd9-528ee9f8e26e\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cacabf0d-7c08-42a4-ab5f-63c30815dcf2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"1e653c4b-5fd3-4ec3-9ddf-75df49201791\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"49b0e0c3-991a-4cc2-aced-88dd5ee3f9a6\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"5c7f115c-8b68-4e54-b50b-83ceca253529\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"68bffa2c-18fb-4187-949d-fee94b1110b0\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"58f06887-3a82-4cea-8bd9-1a77ece171b7\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"fbe6becc-91c1-4917-9a6e-2655f64efb1f\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"3d30baa3-fe01-4c07-aee6-d52fd98ec974\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"d69f1346-d52b-4f53-a1fe-3ceeb8dfcc75\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"5183b2ad-0277-409a-baf1-9d7626c9149d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"a54ec9f6-9a11-468d-9d87-2b2c6d4295cb\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"7599eb76-25a4-4ae1-a4c6-d477d91f2ee9\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"c27518da-7080-413b-b25e-6db8cec71b00\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"d092870f-9c3f-4683-83ea-92ae35f2280d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"c31b4a83-8d95-4753-8d7c-8bf11b8dc8fb\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"2cc3f53e-b794-49ed-ac4a-69a415827e6d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"250f4e88-c416-459d-adb4-01e054f68107\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"504bd1f6-1373-4897-a000-1149d7f454fd\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"83726b35-7b39-44d2-bcad-3ce43efdfc4e\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"182d2e69-55b7-424d-aba7-77b0c0a758f2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"1e90885a-a116-464b-bff0-8997ef6b5eba\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"aa1cc36f-53b1-4600-9f79-14dec97e83b8\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"49b0e0c3-991a-4cc2-aced-88dd5ee3f9a6\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"1b2b1ebe-8a3c-43c5-a7e9-698ca033e0be\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"5c7f115c-8b68-4e54-b50b-83ceca253529\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"68bffa2c-18fb-4187-949d-fee94b1110b0\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"fbe6becc-91c1-4917-9a6e-2655f64efb1f\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"3d30baa3-fe01-4c07-aee6-d52fd98ec974\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"d69f1346-d52b-4f53-a1fe-3ceeb8dfcc75\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"5183b2ad-0277-409a-baf1-9d7626c9149d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"a54ec9f6-9a11-468d-9d87-2b2c6d4295cb\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"7599eb76-25a4-4ae1-a4c6-d477d91f2ee9\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"f9e75a0b-2972-4264-be13-77865c4b6b3c\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"7a4aa468-c303-4906-877e-5f63c0fbe249\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"c27518da-7080-413b-b25e-6db8cec71b00\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"d092870f-9c3f-4683-83ea-92ae35f2280d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"c31b4a83-8d95-4753-8d7c-8bf11b8dc8fb\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"2cc3f53e-b794-49ed-ac4a-69a415827e6d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"250f4e88-c416-459d-adb4-01e054f68107\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"cc7a3ad1-3847-48c0-a23b-d5f73cf0853d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"83726b35-7b39-44d2-bcad-3ce43efdfc4e\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"1e90885a-a116-464b-bff0-8997ef6b5eba\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"182d2e69-55b7-424d-aba7-77b0c0a758f2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"2ef9bbc1-ba4d-43a1-8e2d-bcec01960dd2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"01e3c327-6111-4233-bc87-2c9b163157da\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"0581b78f-d857-449b-b22d-a3883f26ca2a\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"aa1cc36f-53b1-4600-9f79-14dec97e83b8\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"1b2b1ebe-8a3c-43c5-a7e9-698ca033e0be\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"fbe6becc-91c1-4917-9a6e-2655f64efb1f\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"3d30baa3-fe01-4c07-aee6-d52fd98ec974\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"d69f1346-d52b-4f53-a1fe-3ceeb8dfcc75\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"5183b2ad-0277-409a-baf1-9d7626c9149d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"a54ec9f6-9a11-468d-9d87-2b2c6d4295cb\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"7599eb76-25a4-4ae1-a4c6-d477d91f2ee9\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"f9e75a0b-2972-4264-be13-77865c4b6b3c\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"7a4aa468-c303-4906-877e-5f63c0fbe249\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"c27518da-7080-413b-b25e-6db8cec71b00\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"d092870f-9c3f-4683-83ea-92ae35f2280d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"c31b4a83-8d95-4753-8d7c-8bf11b8dc8fb\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"2cc3f53e-b794-49ed-ac4a-69a415827e6d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"cc7a3ad1-3847-48c0-a23b-d5f73cf0853d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"83726b35-7b39-44d2-bcad-3ce43efdfc4e\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"2ef9bbc1-ba4d-43a1-8e2d-bcec01960dd2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"1e90885a-a116-464b-bff0-8997ef6b5eba\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"762416fe-3e1e-49ff-b815-5b0562ed823c\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"d5336da9-051e-4708-8c45-200533bb2da8\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"aa1cc36f-53b1-4600-9f79-14dec97e83b8\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"1b2b1ebe-8a3c-43c5-a7e9-698ca033e0be\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"5c7f115c-8b68-4e54-b50b-83ceca253529\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"68bffa2c-18fb-4187-949d-fee94b1110b0\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"fbe6becc-91c1-4917-9a6e-2655f64efb1f\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"3d30baa3-fe01-4c07-aee6-d52fd98ec974\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"d69f1346-d52b-4f53-a1fe-3ceeb8dfcc75\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"5183b2ad-0277-409a-baf1-9d7626c9149d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"a54ec9f6-9a11-468d-9d87-2b2c6d4295cb\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"7599eb76-25a4-4ae1-a4c6-d477d91f2ee9\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"f9e75a0b-2972-4264-be13-77865c4b6b3c\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"7a4aa468-c303-4906-877e-5f63c0fbe249\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"c27518da-7080-413b-b25e-6db8cec71b00\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"d092870f-9c3f-4683-83ea-92ae35f2280d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"c31b4a83-8d95-4753-8d7c-8bf11b8dc8fb\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"2cc3f53e-b794-49ed-ac4a-69a415827e6d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"250f4e88-c416-459d-adb4-01e054f68107\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"cc7a3ad1-3847-48c0-a23b-d5f73cf0853d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"83726b35-7b39-44d2-bcad-3ce43efdfc4e\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"2ef9bbc1-ba4d-43a1-8e2d-bcec01960dd2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"182d2e69-55b7-424d-aba7-77b0c0a758f2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"1e90885a-a116-464b-bff0-8997ef6b5eba\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"9f220a4b-bcf2-4799-9158-96b33b8a6ceb\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"504bd1f6-1373-4897-a000-1149d7f454fd\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"9f220a4b-bcf2-4799-9158-96b33b8a6ceb\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6a2fbe0f-1cd1-4036-bf19-3b518340daaf\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"504bd1f6-1373-4897-a000-1149d7f454fd\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"6a2fbe0f-1cd1-4036-bf19-3b518340daaf\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"bfecd006-4698-4faa-8ed9-66ec04b317d7\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"504bd1f6-1373-4897-a000-1149d7f454fd\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"bfecd006-4698-4faa-8ed9-66ec04b317d7\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"712c1040-6e38-4633-829b-90e9dca2b5bb\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"8f011040-0023-4549-aa77-afbb8e2ed415\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"951ef396-aa41-4d90-b487-94e906cbd7bf\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"8f011040-0023-4549-aa77-afbb8e2ed415\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"aa1cc36f-53b1-4600-9f79-14dec97e83b8\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"1b2b1ebe-8a3c-43c5-a7e9-698ca033e0be\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"fbe6becc-91c1-4917-9a6e-2655f64efb1f\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"3d30baa3-fe01-4c07-aee6-d52fd98ec974\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"d69f1346-d52b-4f53-a1fe-3ceeb8dfcc75\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"5183b2ad-0277-409a-baf1-9d7626c9149d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"a54ec9f6-9a11-468d-9d87-2b2c6d4295cb\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"7599eb76-25a4-4ae1-a4c6-d477d91f2ee9\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"f9e75a0b-2972-4264-be13-77865c4b6b3c\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"7a4aa468-c303-4906-877e-5f63c0fbe249\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"c27518da-7080-413b-b25e-6db8cec71b00\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"d092870f-9c3f-4683-83ea-92ae35f2280d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"c31b4a83-8d95-4753-8d7c-8bf11b8dc8fb\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"2cc3f53e-b794-49ed-ac4a-69a415827e6d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"cc7a3ad1-3847-48c0-a23b-d5f73cf0853d\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"83726b35-7b39-44d2-bcad-3ce43efdfc4e\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"2ef9bbc1-ba4d-43a1-8e2d-bcec01960dd2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"1e90885a-a116-464b-bff0-8997ef6b5eba\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"1be49df8-c5dd-420b-a02d-45b6045fc650\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"47c0befa-52ef-4100-885d-5d018e03ee48\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"8609834c-1b9d-4c39-a424-1db950faed5f\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t},\n\t\t{\n\t\t\t\"bitPermission\": false,\n\t\t\t\"id\": 0,\n\t\t\t\"individualPermission\": true,\n\t\t\t\"inode\": \"613c3dea-3911-4963-bfc8-c68ff82ff028\",\n\t\t\t\"permission\": 1,\n\t\t\t\"roleId\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\"type\": \"individual\"\n\t\t}\n\t],\n\t\"workflowObject\": {\n\t\t\"actionClassParams\": [\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"871f8dc9-50cc-44a9-a8b7-118838f4f226\",\n\t\t\t\t\"id\": \"c1a4ae65-8595-42fe-951f-73edb34fce70\",\n\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"871f8dc9-50cc-44a9-a8b7-118838f4f226\",\n\t\t\t\t\"id\": \"6d18dcfb-12d8-47c4-9816-222c689a571c\",\n\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"871f8dc9-50cc-44a9-a8b7-118838f4f226\",\n\t\t\t\t\"id\": \"69bfc1a0-6f72-4dcb-bd44-75503b6e5542\",\n\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\"value\": \"true\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"2fd3c32c-3f81-4ac6-95ac-a5493e97d35a\",\n\t\t\t\t\"id\": \"2ff6e76c-6d19-4535-b087-ef2f55715cc6\",\n\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"2fd3c32c-3f81-4ac6-95ac-a5493e97d35a\",\n\t\t\t\t\"id\": \"37db8903-4db2-48a9-a276-5ebd4b93a8bf\",\n\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"2fd3c32c-3f81-4ac6-95ac-a5493e97d35a\",\n\t\t\t\t\"id\": \"d1f2df09-dcbb-44cd-aac2-2c7e8ff466bc\",\n\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\"value\": \"true\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"45f57fb1-eaa0-4f0e-9f32-8dd4418de3d9\",\n\t\t\t\t\"id\": \"517bcc43-f261-4fca-9ec8-252f84ae6caf\",\n\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"45f57fb1-eaa0-4f0e-9f32-8dd4418de3d9\",\n\t\t\t\t\"id\": \"61d92370-bb94-4a84-8f9c-bcf6381254f0\",\n\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"45f57fb1-eaa0-4f0e-9f32-8dd4418de3d9\",\n\t\t\t\t\"id\": \"b0243a60-a50e-4f51-b4b0-71e05c9b821d\",\n\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\"value\": \"true\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"2b66b301-9db4-42c7-a626-28a43f45b17f\",\n\t\t\t\t\"id\": \"171ebcaf-e5c2-47d7-9dd1-a06525353d23\",\n\t\t\t\t\"key\": \"script\",\n\t\t\t\t\"value\": \"#set($headers = {})\\n\\n$headers.put(\\\"Cookie\\\", $request.getHeader(\\\"Cookie\\\"))\\n$headers.put(\\\"Referer\\\", $request.getHeader(\\\"Referer\\\"))\\n\\n$json.fetch( \\\"$request.getScheme()://$request.getServerName():$request.getServerPort()/ingesta/?identifier=$content.identifier&action=unpublish\\\", $headers)\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"2b66b301-9db4-42c7-a626-28a43f45b17f\",\n\t\t\t\t\"id\": \"cfb30263-e88a-4338-adc1-96c3253dc460\",\n\t\t\t\t\"key\": \"resultKey\",\n\t\t\t\t\"value\": \"result\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"e98e1a81-9a1f-468f-9110-e18180a7a195\",\n\t\t\t\t\"id\": \"a0548558-293f-4808-9976-1de1ceccae87\",\n\t\t\t\t\"key\": \"script\",\n\t\t\t\t\"value\": \"#set($headers = {})\\n\\n$headers.put(\\\"Cookie\\\", $request.getHeader(\\\"Cookie\\\"))\\n$headers.put(\\\"Referer\\\", $request.getHeader(\\\"Referer\\\"))\\n\\n$json.fetch( \\\"$request.getScheme()://$request.getServerName():$request.getServerPort()/ingesta/?identifier=$content.identifier&action=unpublish\\\", $headers)\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"e98e1a81-9a1f-468f-9110-e18180a7a195\",\n\t\t\t\t\"id\": \"142137ab-d056-4373-ab87-1c11d984058c\",\n\t\t\t\t\"key\": \"resultKey\",\n\t\t\t\t\"value\": \"result\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"dafbd007-d33a-43dd-9869-2a817a010205\",\n\t\t\t\t\"id\": \"1f518d50-3968-4ebd-aea9-0e86a403acd0\",\n\t\t\t\t\"key\": \"script\",\n\t\t\t\t\"value\": \"#set($headers = {})\\n\\n$headers.put(\\\"Cookie\\\", $request.getHeader(\\\"Cookie\\\"))\\n$headers.put(\\\"Referer\\\", $request.getHeader(\\\"Referer\\\"))\\n\\n$json.fetch( \\\"$request.getScheme()://$request.getServerName():$request.getServerPort()/ingesta/?identifier=$content.identifier&action=unpublish\\\", $headers)\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"dafbd007-d33a-43dd-9869-2a817a010205\",\n\t\t\t\t\"id\": \"3e91ec8e-6e7c-4be4-b171-5f7c5a327f0a\",\n\t\t\t\t\"key\": \"resultKey\",\n\t\t\t\t\"value\": \"result\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"11655fe2-14ac-4f12-bf2b-18515a67a6d6\",\n\t\t\t\t\"id\": \"c714970d-85c5-4534-8031-a4d1a5ae1977\",\n\t\t\t\t\"key\": \"script\",\n\t\t\t\t\"value\": \"#set($headers = {})\\n\\n$headers.put(\\\"Cookie\\\", $request.getHeader(\\\"Cookie\\\"))\\n$headers.put(\\\"Referer\\\", $request.getHeader(\\\"Referer\\\"))\\n\\n$json.fetch( \\\"$request.getScheme()://$request.getServerName():$request.getServerPort()/ingesta/?identifier=$content.identifier&action=unpublish\\\", $headers)\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"11655fe2-14ac-4f12-bf2b-18515a67a6d6\",\n\t\t\t\t\"id\": \"ed45ef20-9922-4419-a366-4ee5eb520fba\",\n\t\t\t\t\"key\": \"resultKey\",\n\t\t\t\t\"value\": \"result\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"3d5c7dd9-19ff-422e-a50a-2cb606420ab7\",\n\t\t\t\t\"id\": \"ba2e89a7-3995-46c9-b3b7-736c5856638e\",\n\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"3d5c7dd9-19ff-422e-a50a-2cb606420ab7\",\n\t\t\t\t\"id\": \"05bff3cd-a0ce-478a-ad2c-df1e16ed29dd\",\n\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"3d5c7dd9-19ff-422e-a50a-2cb606420ab7\",\n\t\t\t\t\"id\": \"2dd1b268-0aa7-41c5-a648-c3d5dc4f1f0f\",\n\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\"value\": \"true\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"b8df7dcc-ceb2-4fad-927f-283b6a05961a\",\n\t\t\t\t\"id\": \"4fd5b393-7e0d-48c5-b5dd-b12d8da6d4ef\",\n\t\t\t\t\"key\": \"script\",\n\t\t\t\t\"value\": \"#set($headers = {})\\n\\n$headers.put(\\\"Cookie\\\", $request.getHeader(\\\"Cookie\\\"))\\n$headers.put(\\\"Referer\\\", $request.getHeader(\\\"Referer\\\"))\\n\\n$json.fetch( \\\"$request.getScheme()://$request.getServerName():$request.getServerPort()/ingesta/?identifier=$content.identifier&action=publish\\\", $headers)\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"b8df7dcc-ceb2-4fad-927f-283b6a05961a\",\n\t\t\t\t\"id\": \"511905b6-5d5f-45da-b914-76d8b9ce86ef\",\n\t\t\t\t\"key\": \"resultKey\",\n\t\t\t\t\"value\": \"result\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"ca2a0536-ee58-4f9e-9d11-0e9a59aab0ce\",\n\t\t\t\t\"id\": \"608b1eda-16c6-4dcf-8b91-d7ac69e1e61f\",\n\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"ca2a0536-ee58-4f9e-9d11-0e9a59aab0ce\",\n\t\t\t\t\"id\": \"e22a5930-7cb9-4fdc-b57f-f8e0068d46e8\",\n\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"ca2a0536-ee58-4f9e-9d11-0e9a59aab0ce\",\n\t\t\t\t\"id\": \"7fb4aac3-8352-42cf-98f9-facf7bc7795a\",\n\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\"value\": \"true\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"012edb08-3a6b-4df7-bb40-f5357d4efe3c\",\n\t\t\t\t\"id\": \"5737cd58-a6f3-4481-9db0-a7b5074f6148\",\n\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"012edb08-3a6b-4df7-bb40-f5357d4efe3c\",\n\t\t\t\t\"id\": \"d5594521-9518-4050-bda9-26454b057892\",\n\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"012edb08-3a6b-4df7-bb40-f5357d4efe3c\",\n\t\t\t\t\"id\": \"ec6d049b-5906-4cf2-97a1-441e13fc46c9\",\n\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\"value\": \"true\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"07ff6a4b-346c-4b72-a761-cc53a945094c\",\n\t\t\t\t\"id\": \"5ec3ccb4-63e4-405e-a424-6e74592b9db7\",\n\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"07ff6a4b-346c-4b72-a761-cc53a945094c\",\n\t\t\t\t\"id\": \"50f5cfc6-f110-443d-a346-94129ac50ae5\",\n\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"07ff6a4b-346c-4b72-a761-cc53a945094c\",\n\t\t\t\t\"id\": \"6c4031ab-64ee-4d48-a87b-574f79b63934\",\n\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\"value\": \"true\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"a1366f5c-604d-4f17-8c70-331e4577d990\",\n\t\t\t\t\"id\": \"64905d7e-2bb3-4bcd-b50d-9bd005244804\",\n\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"a1366f5c-604d-4f17-8c70-331e4577d990\",\n\t\t\t\t\"id\": \"80189d70-287c-45da-b677-ba1059a9af5d\",\n\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"a1366f5c-604d-4f17-8c70-331e4577d990\",\n\t\t\t\t\"id\": \"93afb031-1b13-4a31-a4b5-8344a915aa1b\",\n\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\"value\": \"true\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"4def3e55-7ca3-441c-b5f5-3440dc8d4389\",\n\t\t\t\t\"id\": \"93e9ab1f-5d56-448e-bc42-78eb860070d6\",\n\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"4def3e55-7ca3-441c-b5f5-3440dc8d4389\",\n\t\t\t\t\"id\": \"93f426c6-2cf8-402a-87cb-e6fd9a9f7669\",\n\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\"value\": null\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionClassId\": \"4def3e55-7ca3-441c-b5f5-3440dc8d4389\",\n\t\t\t\t\"id\": \"920bee2b-1cd0-467a-8c8c-cdee93a45929\",\n\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\"value\": \"true\"\n\t\t\t}\n\t\t],\n\t\t\"actionClasses\": [\n\t\t\t{\n\t\t\t\t\"actionId\": \"7e1efac1-f59d-4f6e-a720-7aab1c18a32d\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone\",\n\t\t\t\t\t\"howTo\": \"\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone.howTo\",\n\t\t\t\t\t\"localizedName\": \"Mark as a DONE\",\n\t\t\t\t\t\"name\": \"Mark as Done\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone\",\n\t\t\t\t\"id\": \"cddf7181-9805-486e-9436-ac14349a6357\",\n\t\t\t\t\"name\": \"Mark as a DONE\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"7e1efac1-f59d-4f6e-a720-7aab1c18a32d\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Unlock content\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"0d5dd0a5-3695-4994-9d01-e83d7c2ebd9a\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"7e1efac1-f59d-4f6e-a720-7aab1c18a32d\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.ResetTaskActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will reset workflow task state, but keeping the comments and history.  It will also STOP all further subaction processing\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.ResetTaskActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Reset Workflow\",\n\t\t\t\t\t\"name\": \"Reset Workflow\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.ResetTaskActionlet\",\n\t\t\t\t\"id\": \"71155725-5166-4ab0-a4c9-2b7b90eab3ad\",\n\t\t\t\t\"name\": \"Reset Workflow\",\n\t\t\t\t\"order\": 2\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"86a2c2c7-0f8b-434e-a5dd-3eef3157dec6\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone\",\n\t\t\t\t\t\"howTo\": \"\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone.howTo\",\n\t\t\t\t\t\"localizedName\": \"Mark as DONE\",\n\t\t\t\t\t\"name\": \"Mark as DONE\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDOne\",\n\t\t\t\t\"id\": \"214b2181-944d-41ee-8a49-a2ee270c842d\",\n\t\t\t\t\"name\": \"Mark as DONE\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"86a2c2c7-0f8b-434e-a5dd-3eef3157dec6\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Lock content\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"6c63ef9a-8f70-458e-a7cc-2ec4ac7b1a38\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"86a2c2c7-0f8b-434e-a5dd-3eef3157dec6\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will send an email to the assignee (or assignees if the next assign is a role).  It uses a default email subject and message, but can be overridden.  Both the subject and message are parsed Velocity, and have access to a $workflow object that gives them $workflow.task, $workflow.nextAssign, $workflow.action, $workflow.step, etc.. \",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Notify\",\n\t\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"\",\n\t\t\t\t\t\t\t\"displayName\": \"Email Subject\",\n\t\t\t\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": null,\n\t\t\t\t\t\t\t\"displayName\": \"Email Message\",\n\t\t\t\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"true\",\n\t\t\t\t\t\t\t\"displayName\": \"Is Html?\",\n\t\t\t\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\"id\": \"871f8dc9-50cc-44a9-a8b7-118838f4f226\",\n\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\"order\": 2\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"86a2c2c7-0f8b-434e-a5dd-3eef3157dec6\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.ResetTaskActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will reset workflow task state, but keeping the comments and history.  It will also STOP all further subaction processing\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.ResetTaskActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Reset Workflow\",\n\t\t\t\t\t\"name\": \"Reset Workflow\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.ResetTaskActionlet\",\n\t\t\t\t\"id\": \"ea5fd817-4aab-4227-8410-bb9d24c8861c\",\n\t\t\t\t\"name\": \"Reset Workflow\",\n\t\t\t\t\"order\": 3\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"a5f85a15-cc64-4a3f-8ea0-302af7eb5bf2\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will send an email to the assignee (or assignees if the next assign is a role).  It uses a default email subject and message, but can be overridden.  Both the subject and message are parsed Velocity, and have access to a $workflow object that gives them $workflow.task, $workflow.nextAssign, $workflow.action, $workflow.step, etc.. \",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Notificar beneficiario\",\n\t\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"\",\n\t\t\t\t\t\t\t\"displayName\": \"Email Subject\",\n\t\t\t\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": null,\n\t\t\t\t\t\t\t\"displayName\": \"Email Message\",\n\t\t\t\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"true\",\n\t\t\t\t\t\t\t\"displayName\": \"Is Html?\",\n\t\t\t\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\"id\": \"2fd3c32c-3f81-4ac6-95ac-a5493e97d35a\",\n\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"a5f85a15-cc64-4a3f-8ea0-302af7eb5bf2\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone\",\n\t\t\t\t\t\"howTo\": \"\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.MarcarFinalizado.howTo\",\n\t\t\t\t\t\"localizedName\": \"Mark As DONE\",\n\t\t\t\t\t\"name\": \"Mark As DONE\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone\",\n\t\t\t\t\"id\": \"0db3396a-7de5-4690-9782-ee2d305467a0\",\n\t\t\t\t\"name\": \"Mark As DONE\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"a5f85a15-cc64-4a3f-8ea0-302af7eb5bf2\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Lock content\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"f8a3d752-81cd-4c2b-b25d-84cd4ddabe95\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 2\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"6a638b3a-31fc-4e71-af0b-cb2302d1f19a\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDOne\",\n\t\t\t\t\t\"howTo\": \".\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDOne.howTo\",\n\t\t\t\t\t\"localizedName\": \"Mark as DONE\",\n\t\t\t\t\t\"name\": \"Mark as DONE\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDOne\",\n\t\t\t\t\"id\": \"684fd3dd-6de3-4637-b0b3-882d95b2cc39\",\n\t\t\t\t\"name\": \"Mark as DONE\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"6a638b3a-31fc-4e71-af0b-cb2302d1f19a\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Lock content\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"04df9748-63b3-4303-b237-4bc8e68f6480\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"e4e924b5-3880-41c7-8dd9-528ee9f8e26e\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone\",\n\t\t\t\t\t\"howTo\": \"Esta acción deja constancia de que el workflow ha pasado por un estado/paso virtual bajo el nombre de \\\"Finalizado\\\".\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone.howTo\",\n\t\t\t\t\t\"localizedName\": \"Mark as Done\",\n\t\t\t\t\t\"name\": \"Mark as Done\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone\",\n\t\t\t\t\"id\": \"5fd19657-a38f-4d31-a233-b65589aa9bbe\",\n\t\t\t\t\"name\": \"MarkAsDone as Done\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"e4e924b5-3880-41c7-8dd9-528ee9f8e26e\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will send an email to the assignee (or assignees if the next assign is a role).  It uses a default email subject and message, but can be overridden.  Both the subject and message are parsed Velocity, and have access to a $workflow object that gives them $workflow.task, $workflow.nextAssign, $workflow.action, $workflow.step, etc.. \",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Notificar beneficiario\",\n\t\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"\",\n\t\t\t\t\t\t\t\"displayName\": \"Email Subject\",\n\t\t\t\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": null,\n\t\t\t\t\t\t\t\"displayName\": \"Email Message\",\n\t\t\t\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"true\",\n\t\t\t\t\t\t\t\"displayName\": \"Is Html?\",\n\t\t\t\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\"id\": \"45f57fb1-eaa0-4f0e-9f32-8dd4418de3d9\",\n\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"e4e924b5-3880-41c7-8dd9-528ee9f8e26e\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"MarkAsDone\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"61645617-044f-49d0-b5a9-83faaa1e9425\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 2\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"e4e924b5-3880-41c7-8dd9-528ee9f8e26e\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.ResetTaskActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will reset workflow task state, but keeping the comments and history.  It will also STOP all further subaction processing\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.ResetTaskActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Reset Workflow\",\n\t\t\t\t\t\"name\": \"Reset Workflow\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.ResetTaskActionlet\",\n\t\t\t\t\"id\": \"0ed72f5c-75e0-4905-924e-074bca0af7d3\",\n\t\t\t\t\"name\": \"Reset Workflow\",\n\t\t\t\t\"order\": 3\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"cacabf0d-7c08-42a4-ab5f-63c30815dcf2\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Desbloquear contenido\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"14eaa573-5e7a-4b3d-b93c-af246c42c441\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"cacabf0d-7c08-42a4-ab5f-63c30815dcf2\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will unpublish the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Unpublish content\",\n\t\t\t\t\t\"name\": \"Unpublish content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet\",\n\t\t\t\t\"id\": \"4116ded0-4605-4b07-9b16-d8818dc4c49e\",\n\t\t\t\t\"name\": \"Unpublish content\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"cacabf0d-7c08-42a4-ab5f-63c30815dcf2\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.VelocityScriptActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet give the ability to run a velocity script as part of the workflow action. The Script Code allows to add the velocity, can include a vtl by #dotParse directive. The Result Property Name is the name to store the result of the velocity execution in the contentlet, will store the dotJson and the output (if empty won't add any result to the contentlet).\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.VelocityScriptActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Velocity Script Actionlet\",\n\t\t\t\t\t\"name\": \"Velocity Script Actionlet\",\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": null,\n\t\t\t\t\t\t\t\"displayName\": \"Script Code\",\n\t\t\t\t\t\t\t\"key\": \"script\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"result\",\n\t\t\t\t\t\t\t\"displayName\": \"Contentlet Result Property Name\",\n\t\t\t\t\t\t\t\"key\": \"resultKey\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.VelocityScriptActionlet\",\n\t\t\t\t\"id\": \"2b66b301-9db4-42c7-a626-28a43f45b17f\",\n\t\t\t\t\"name\": \"Velocity Script Actionlet\",\n\t\t\t\t\"order\": 2\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"1e653c4b-5fd3-4ec3-9ddf-75df49201791\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Unlock content\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"9ce95a43-183a-448c-8593-696c7b246645\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"1e653c4b-5fd3-4ec3-9ddf-75df49201791\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will unpublish the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Unpublish content\",\n\t\t\t\t\t\"name\": \"Unpublish content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet\",\n\t\t\t\t\"id\": \"3a7df12f-ed72-4aea-88fa-c1da7e8154e5\",\n\t\t\t\t\"name\": \"Unpublish content\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"1e653c4b-5fd3-4ec3-9ddf-75df49201791\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.VelocityScriptActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet give the ability to run a velocity script as part of the workflow action. The Script Code allows to add the velocity, can include a vtl by #dotParse directive. The Result Property Name is the name to store the result of the velocity execution in the contentlet, will store the dotJson and the output (if empty won't add any result to the contentlet).\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.VelocityScriptActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Velocity Script Actionlet\",\n\t\t\t\t\t\"name\": \"Velocity Script Actionlet\",\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": null,\n\t\t\t\t\t\t\t\"displayName\": \"Script Code\",\n\t\t\t\t\t\t\t\"key\": \"script\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"result\",\n\t\t\t\t\t\t\t\"displayName\": \"Contentlet Result Property Name\",\n\t\t\t\t\t\t\t\"key\": \"resultKey\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.VelocityScriptActionlet\",\n\t\t\t\t\"id\": \"e98e1a81-9a1f-468f-9110-e18180a7a195\",\n\t\t\t\t\"name\": \"Velocity Script Actionlet\",\n\t\t\t\t\"order\": 2\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Unlock content\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"b1bcc61a-e5ed-4cbc-b664-b8146a19c91d\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Save content\",\n\t\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\"id\": \"56e6e87d-7d7f-4349-b108-676d5a5547c0\",\n\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Lock content\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"717c172a-32a5-48c6-b50a-3f444b84e04a\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"01e3c327-6111-4233-bc87-2c9b163157da\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will unpublish the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"No publicar contenido\",\n\t\t\t\t\t\"name\": \"Unpublish content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet\",\n\t\t\t\t\"id\": \"e4276b6b-98d1-4594-89d9-2f50292bf668\",\n\t\t\t\t\"name\": \"Unpublish content\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"01e3c327-6111-4233-bc87-2c9b163157da\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.VelocityScriptActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet give the ability to run a velocity script as part of the workflow action. The Script Code allows to add the velocity, can include a vtl by #dotParse directive. The Result Property Name is the name to store the result of the velocity execution in the contentlet, will store the dotJson and the output (if empty won't add any result to the contentlet).\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.VelocityScriptActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Velocity Script Actionlet\",\n\t\t\t\t\t\"name\": \"Velocity Script Actionlet\",\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": null,\n\t\t\t\t\t\t\t\"displayName\": \"Script Code\",\n\t\t\t\t\t\t\t\"key\": \"script\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"result\",\n\t\t\t\t\t\t\t\"displayName\": \"Contentlet Result Property Name\",\n\t\t\t\t\t\t\t\"key\": \"resultKey\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.VelocityScriptActionlet\",\n\t\t\t\t\"id\": \"dafbd007-d33a-43dd-9869-2a817a010205\",\n\t\t\t\t\"name\": \"Velocity Script Actionlet\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"01e3c327-6111-4233-bc87-2c9b163157da\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone\",\n\t\t\t\t\t\"howTo\": \"\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone.howTo\",\n\t\t\t\t\t\"localizedName\": \"MarkAsDone \",\n\t\t\t\t\t\"name\": \"MarkAsDone\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone\",\n\t\t\t\t\"id\": \"473aecb0-fbb1-465e-ac50-df952ab51e86\",\n\t\t\t\t\"name\": \"MarkAsDone\",\n\t\t\t\t\"order\": 2\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"01e3c327-6111-4233-bc87-2c9b163157da\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will archive the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Archivar contenido\",\n\t\t\t\t\t\"name\": \"Archive content\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet\",\n\t\t\t\t\"id\": \"51cb33e6-f392-4045-b5e7-a813d21e81f8\",\n\t\t\t\t\"name\": \"Archive content\",\n\t\t\t\t\"order\": 3\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"01e3c327-6111-4233-bc87-2c9b163157da\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.DeleteContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This action will delete the content. Warning: this can't be undone!\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.DeleteContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Delete content\",\n\t\t\t\t\t\"name\": \"Delete content\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.DeleteContentActionlet\",\n\t\t\t\t\"id\": \"80d9acc6-67c9-4189-b348-a245c5140520\",\n\t\t\t\t\"name\": \"Delete content\",\n\t\t\t\t\"order\": 4\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"0581b78f-d857-449b-b22d-a3883f26ca2a\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone\",\n\t\t\t\t\t\"howTo\": \"\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone.howTo\",\n\t\t\t\t\t\"localizedName\": \"MarkAsDone\",\n\t\t\t\t\t\"name\": \"MarkAsDone\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone\",\n\t\t\t\t\"id\": \"8683fbd3-ee7b-46fa-8f2c-a7606c87235d\",\n\t\t\t\t\"name\": \"MarkAsDone\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"0581b78f-d857-449b-b22d-a3883f26ca2a\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.VelocityScriptActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet give the ability to run a velocity script as part of the workflow action. The Script Code allows to add the velocity, can include a vtl by #dotParse directive. The Result Property Name is the name to store the result of the velocity execution in the contentlet, will store the dotJson and the output (if empty won't add any result to the contentlet).\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.VelocityScriptActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Velocity Script Actionlet\",\n\t\t\t\t\t\"name\": \"Velocity Script Actionlet\",\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": null,\n\t\t\t\t\t\t\t\"displayName\": \"Script Code\",\n\t\t\t\t\t\t\t\"key\": \"script\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"result\",\n\t\t\t\t\t\t\t\"displayName\": \"Contentlet Result Property Name\",\n\t\t\t\t\t\t\t\"key\": \"resultKey\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.VelocityScriptActionlet\",\n\t\t\t\t\"id\": \"11655fe2-14ac-4f12-bf2b-18515a67a6d6\",\n\t\t\t\t\"name\": \"Velocity Script Actionlet\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"0581b78f-d857-449b-b22d-a3883f26ca2a\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will unpublish the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"No publicar contenido\",\n\t\t\t\t\t\"name\": \"Unpublish content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.UnpublishContentActionlet\",\n\t\t\t\t\"id\": \"fc4f337c-fb6b-4931-8e56-48164a546870\",\n\t\t\t\t\"name\": \"Unpublish content\",\n\t\t\t\t\"order\": 2\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"0581b78f-d857-449b-b22d-a3883f26ca2a\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will archive the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Archivar contenido\",\n\t\t\t\t\t\"name\": \"Archive content\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.ArchiveContentActionlet\",\n\t\t\t\t\"id\": \"f4becf96-79b2-4710-b482-aae9af3ab1aa\",\n\t\t\t\t\"name\": \"Archive content\",\n\t\t\t\t\"order\": 3\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"0581b78f-d857-449b-b22d-a3883f26ca2a\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.DeleteContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This action will delete the content. Warning: this can't be undone!\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.DeleteContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Delete content\",\n\t\t\t\t\t\"name\": \"Delete content\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.DeleteContentActionlet\",\n\t\t\t\t\"id\": \"1ac70bb2-bc07-4e90-995e-270bceb5a777\",\n\t\t\t\t\"name\": \"Delete content\",\n\t\t\t\t\"order\": 4\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Save content\",\n\t\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\"id\": \"40c2d2ff-5497-4a2b-9d2f-5d9d1d12e76c\",\n\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Desbloquear contenido\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"fe16b7d4-2a6f-49fc-acd3-1643044bb222\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"762416fe-3e1e-49ff-b815-5b0562ed823c\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Save content\",\n\t\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\"id\": \"5293903a-275d-4155-ae5f-e243ee5aad49\",\n\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"762416fe-3e1e-49ff-b815-5b0562ed823c\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckoutContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkout and lock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckoutContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Bloquear contenido\",\n\t\t\t\t\t\"name\": \"Lock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckoutContentActionlet\",\n\t\t\t\t\"id\": \"ec63f1d2-d746-471f-8493-a1626f5af88a\",\n\t\t\t\t\"name\": \"Lock content\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"d5336da9-051e-4708-8c45-200533bb2da8\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Save content\",\n\t\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\"id\": \"180002a6-be7e-40c6-8785-f3dc7cf17231\",\n\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"d5336da9-051e-4708-8c45-200533bb2da8\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckoutContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkout and lock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckoutContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Bloquear contenido\",\n\t\t\t\t\t\"name\": \"Lock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckoutContentActionlet\",\n\t\t\t\t\"id\": \"f8a2993b-10c0-4ff7-a845-2c6a5b98dea4\",\n\t\t\t\t\"name\": \"Lock content\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Save content\",\n\t\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\"id\": \"f218b09a-e64a-4de5-98a0-6188bfacb0ca\",\n\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckoutContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkout and lock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckoutContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Bloquear contenido\",\n\t\t\t\t\t\"name\": \"Lock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckoutContentActionlet\",\n\t\t\t\t\"id\": \"020efaa2-4449-4b0b-b05e-53ebc08b5ab1\",\n\t\t\t\t\"name\": \"Lock content\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"9f220a4b-bcf2-4799-9158-96b33b8a6ceb\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Save content\",\n\t\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\"id\": \"ad19323a-aaf4-4ee5-9a3a-beeb7b7c93a3\",\n\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"9f220a4b-bcf2-4799-9158-96b33b8a6ceb\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone\",\n\t\t\t\t\t\"howTo\": \"\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.MarcarFinalizado.howTo\",\n\t\t\t\t\t\"localizedName\": \"MarkAsDone \",\n\t\t\t\t\t\"name\": \"MarkAsDone \",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone\",\n\t\t\t\t\"id\": \"c330eef2-9a7e-40e2-86ef-964dc243e2f4\",\n\t\t\t\t\"name\": \"MarkAsDone\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"9f220a4b-bcf2-4799-9158-96b33b8a6ceb\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will send an email to the assignee (or assignees if the next assign is a role).  It uses a default email subject and message, but can be overridden.  Both the subject and message are parsed Velocity, and have access to a $workflow object that gives them $workflow.task, $workflow.nextAssign, $workflow.action, $workflow.step, etc.. \",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Notificar beneficiario\",\n\t\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"\",\n\t\t\t\t\t\t\t\"displayName\": \"Email Subject\",\n\t\t\t\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": null,\n\t\t\t\t\t\t\t\"displayName\": \"Email Message\",\n\t\t\t\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"true\",\n\t\t\t\t\t\t\t\"displayName\": \"Is Html?\",\n\t\t\t\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\"id\": \"3d5c7dd9-19ff-422e-a50a-2cb606420ab7\",\n\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\"order\": 2\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"9f220a4b-bcf2-4799-9158-96b33b8a6ceb\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will publish the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Publicar contenido\",\n\t\t\t\t\t\"name\": \"Publish content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n\t\t\t\t\"id\": \"29924566-e868-4ab1-94d9-232718fdfa67\",\n\t\t\t\t\"name\": \"Publish content\",\n\t\t\t\t\"order\": 3\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"9f220a4b-bcf2-4799-9158-96b33b8a6ceb\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Desbloquear contenido\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"b514ef48-5bdf-4a41-9695-9b28342a313c\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 4\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"9f220a4b-bcf2-4799-9158-96b33b8a6ceb\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.ResetTaskActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will reset workflow task state, but keeping the comments and history.  It will also STOP all further subaction processing\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.ResetTaskActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Reset Workflow\",\n\t\t\t\t\t\"name\": \"Reset Workflow\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.ResetTaskActionlet\",\n\t\t\t\t\"id\": \"a8b27cc6-0e80-4bfc-b48a-b654e2ab63e6\",\n\t\t\t\t\"name\": \"Reset Workflow\",\n\t\t\t\t\"order\": 5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"6a2fbe0f-1cd1-4036-bf19-3b518340daaf\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Desbloquear contenido\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"692f5176-39c8-4425-92c2-75ea2b9df19d\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"6a2fbe0f-1cd1-4036-bf19-3b518340daaf\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Save content\",\n\t\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\"id\": \"8188146f-7fa3-4073-adcd-173a05ea77ba\",\n\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"6a2fbe0f-1cd1-4036-bf19-3b518340daaf\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone\",\n\t\t\t\t\t\"howTo\": \"\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone.howTo\",\n\t\t\t\t\t\"localizedName\": \"MarkAsDone\",\n\t\t\t\t\t\"name\": \"MarkAsDone\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone\",\n\t\t\t\t\"id\": \"dcb69fd2-bd50-4584-8d12-7288885fbd9e\",\n\t\t\t\t\"name\": \"MarkAsDone\",\n\t\t\t\t\"order\": 2\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"6a2fbe0f-1cd1-4036-bf19-3b518340daaf\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will publish the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Publicar contenido\",\n\t\t\t\t\t\"name\": \"Publish content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n\t\t\t\t\"id\": \"bf9f3244-4cec-4fe4-a39c-59810765aa4c\",\n\t\t\t\t\"name\": \"Publish content\",\n\t\t\t\t\"order\": 3\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"6a2fbe0f-1cd1-4036-bf19-3b518340daaf\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.VelocityScriptActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet give the ability to run a velocity script as part of the workflow action. The Script Code allows to add the velocity, can include a vtl by #dotParse directive. The Result Property Name is the name to store the result of the velocity execution in the contentlet, will store the dotJson and the output (if empty won't add any result to the contentlet).\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.VelocityScriptActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Velocity Script Actionlet\",\n\t\t\t\t\t\"name\": \"Velocity Script Actionlet\",\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": null,\n\t\t\t\t\t\t\t\"displayName\": \"Script Code\",\n\t\t\t\t\t\t\t\"key\": \"script\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"result\",\n\t\t\t\t\t\t\t\"displayName\": \"Contentlet Result Property Name\",\n\t\t\t\t\t\t\t\"key\": \"resultKey\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.VelocityScriptActionlet\",\n\t\t\t\t\"id\": \"b8df7dcc-ceb2-4fad-927f-283b6a05961a\",\n\t\t\t\t\"name\": \"Velocity Script Actionlet\",\n\t\t\t\t\"order\": 4\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"6a2fbe0f-1cd1-4036-bf19-3b518340daaf\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will send an email to the assignee (or assignees if the next assign is a role).  It uses a default email subject and message, but can be overridden.  Both the subject and message are parsed Velocity, and have access to a $workflow object that gives them $workflow.task, $workflow.nextAssign, $workflow.action, $workflow.step, etc.. \",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Notificar beneficiario\",\n\t\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"\",\n\t\t\t\t\t\t\t\"displayName\": \"Email Subject\",\n\t\t\t\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": null,\n\t\t\t\t\t\t\t\"displayName\": \"Email Message\",\n\t\t\t\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"true\",\n\t\t\t\t\t\t\t\"displayName\": \"Is Html?\",\n\t\t\t\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\"id\": \"ca2a0536-ee58-4f9e-9d11-0e9a59aab0ce\",\n\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\"order\": 5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"bfecd006-4698-4faa-8ed9-66ec04b317d7\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Save content\",\n\t\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\"id\": \"7d59ffcf-f5a0-43fb-8ea2-a7f4b6cf7df1\",\n\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"bfecd006-4698-4faa-8ed9-66ec04b317d7\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.MarkAsDone\",\n\t\t\t\t\t\"howTo\": \"\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.MarcarFinalizado.howTo\",\n\t\t\t\t\t\"localizedName\": \"MarkAsDone \",\n\t\t\t\t\t\"name\": \"MarkAsDone \",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.MarcarFinalizado\",\n\t\t\t\t\"id\": \"36bf43ef-c780-4449-a2a9-ee98fc390405\",\n\t\t\t\t\"name\": \"MarkAsDone \",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"bfecd006-4698-4faa-8ed9-66ec04b317d7\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will send an email to the assignee (or assignees if the next assign is a role).  It uses a default email subject and message, but can be overridden.  Both the subject and message are parsed Velocity, and have access to a $workflow object that gives them $workflow.task, $workflow.nextAssign, $workflow.action, $workflow.step, etc.. \",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Notificar beneficiario\",\n\t\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"\",\n\t\t\t\t\t\t\t\"displayName\": \"Email Subject\",\n\t\t\t\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": null,\n\t\t\t\t\t\t\t\"displayName\": \"Email Message\",\n\t\t\t\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"true\",\n\t\t\t\t\t\t\t\"displayName\": \"Is Html?\",\n\t\t\t\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\"id\": \"012edb08-3a6b-4df7-bb40-f5357d4efe3c\",\n\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\"order\": 2\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"bfecd006-4698-4faa-8ed9-66ec04b317d7\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will publish the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Publicar contenido\",\n\t\t\t\t\t\"name\": \"Publish content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.PublishContentActionlet\",\n\t\t\t\t\"id\": \"f8265e13-8a7b-4d6d-996b-fb9d4a6a5c28\",\n\t\t\t\t\"name\": \"Publish content\",\n\t\t\t\t\"order\": 3\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"bfecd006-4698-4faa-8ed9-66ec04b317d7\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Desbloquear contenido\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"67e216ff-d54e-4c7d-9741-f7c18e7a568e\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 4\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"bfecd006-4698-4faa-8ed9-66ec04b317d7\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.ResetTaskActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will reset workflow task state, but keeping the comments and history.  It will also STOP all further subaction processing\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.ResetTaskActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Reset Workflow\",\n\t\t\t\t\t\"name\": \"Reset Workflow\",\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.ResetTaskActionlet\",\n\t\t\t\t\"id\": \"f800d47d-ffd9-417d-af31-796f37b9db5f\",\n\t\t\t\t\"name\": \"Reset Workflow\",\n\t\t\t\t\"order\": 5\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Save content\",\n\t\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\"id\": \"dc115f14-6bfb-4a97-94d0-875699a1a88f\",\n\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Desbloquear contenido\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"b748e01e-b25d-44be-92dd-72f78567e49b\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"1be49df8-c5dd-420b-a02d-45b6045fc650\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Save content\",\n\t\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\"id\": \"29713dc1-1039-4d15-941a-e5939ced179e\",\n\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"1be49df8-c5dd-420b-a02d-45b6045fc650\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will send an email to the assignee (or assignees if the next assign is a role).  It uses a default email subject and message, but can be overridden.  Both the subject and message are parsed Velocity, and have access to a $workflow object that gives them $workflow.task, $workflow.nextAssign, $workflow.action, $workflow.step, etc.. \",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Notificar beneficiario\",\n\t\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"\",\n\t\t\t\t\t\t\t\"displayName\": \"Email Subject\",\n\t\t\t\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": null,\n\t\t\t\t\t\t\t\"displayName\": \"Email Message\",\n\t\t\t\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"true\",\n\t\t\t\t\t\t\t\"displayName\": \"Is Html?\",\n\t\t\t\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\"id\": \"07ff6a4b-346c-4b72-a761-cc53a945094c\",\n\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"1be49df8-c5dd-420b-a02d-45b6045fc650\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Desbloquear contenido\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"140b337d-7637-4e0e-b72b-181bca066bce\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 2\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"47c0befa-52ef-4100-885d-5d018e03ee48\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Save content\",\n\t\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\"id\": \"9623d548-71a1-4f2e-aac6-5e49ab5b625a\",\n\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"47c0befa-52ef-4100-885d-5d018e03ee48\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will send an email to the assignee (or assignees if the next assign is a role).  It uses a default email subject and message, but can be overridden.  Both the subject and message are parsed Velocity, and have access to a $workflow object that gives them $workflow.task, $workflow.nextAssign, $workflow.action, $workflow.step, etc.. \",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Notificar beneficiario\",\n\t\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"\",\n\t\t\t\t\t\t\t\"displayName\": \"Email Subject\",\n\t\t\t\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": null,\n\t\t\t\t\t\t\t\"displayName\": \"Email Message\",\n\t\t\t\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"true\",\n\t\t\t\t\t\t\t\"displayName\": \"Is Html?\",\n\t\t\t\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\"id\": \"a1366f5c-604d-4f17-8c70-331e4577d990\",\n\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"47c0befa-52ef-4100-885d-5d018e03ee48\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Desbloquear contenido\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"21f6b12e-c36f-4491-8fec-6980cd7404c9\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 2\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"8609834c-1b9d-4c39-a424-1db950faed5f\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Save content\",\n\t\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.SaveContentActionlet\",\n\t\t\t\t\"id\": \"e32f38a3-b803-4247-86fd-7adc29867f30\",\n\t\t\t\t\"name\": \"Save content\",\n\t\t\t\t\"order\": 0\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"8609834c-1b9d-4c39-a424-1db950faed5f\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will send an email to the assignee (or assignees if the next assign is a role).  It uses a default email subject and message, but can be overridden.  Both the subject and message are parsed Velocity, and have access to a $workflow object that gives them $workflow.task, $workflow.nextAssign, $workflow.action, $workflow.step, etc.. \",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Notificar beneficiario\",\n\t\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"\",\n\t\t\t\t\t\t\t\"displayName\": \"Email Subject\",\n\t\t\t\t\t\t\t\"key\": \"emailSubject\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": null,\n\t\t\t\t\t\t\t\"displayName\": \"Email Message\",\n\t\t\t\t\t\t\t\"key\": \"emailBody\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"defaultValue\": \"true\",\n\t\t\t\t\t\t\t\"displayName\": \"Is Html?\",\n\t\t\t\t\t\t\t\"key\": \"isHtml\",\n\t\t\t\t\t\t\t\"required\": false\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.NotifyAssigneeActionlet\",\n\t\t\t\t\"id\": \"4def3e55-7ca3-441c-b5f5-3440dc8d4389\",\n\t\t\t\t\"name\": \"Notify Assignee\",\n\t\t\t\t\"order\": 1\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"8609834c-1b9d-4c39-a424-1db950faed5f\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Desbloquear contenido\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"bbaf45fb-1348-4841-aab1-14784e15d719\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 2\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"613c3dea-3911-4963-bfc8-c68ff82ff028\",\n\t\t\t\t\"actionlet\": {\n\t\t\t\t\t\"actionClass\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\t\"howTo\": \"This actionlet will checkin and unlock the content.\",\n\t\t\t\t\t\"localizedHowto\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet.howTo\",\n\t\t\t\t\t\"localizedName\": \"Desbloquear contenido\",\n\t\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\t\"nextStep\": null,\n\t\t\t\t\t\"parameters\": null\n\t\t\t\t},\n\t\t\t\t\"clazz\": \"com.dotmarketing.portlets.workflows.actionlet.CheckinContentActionlet\",\n\t\t\t\t\"id\": \"7a7ad2ae-c13d-4e1d-bfe1-48a384913d72\",\n\t\t\t\t\"name\": \"Unlock content\",\n\t\t\t\t\"order\": 0\n\t\t\t}\n\t\t],\n\t\t\"actionSteps\": [\n\t\t\t{\n\t\t\t\t\"actionId\": \"0581b78f-d857-449b-b22d-a3883f26ca2a\",\n\t\t\t\t\"actionOrder\": \"0\",\n\t\t\t\t\"stepId\": \"80b32042-431d-48e7-a96d-809d910be4ed\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"1e653c4b-5fd3-4ec3-9ddf-75df49201791\",\n\t\t\t\t\"actionOrder\": \"1\",\n\t\t\t\t\"stepId\": \"80b32042-431d-48e7-a96d-809d910be4ed\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"6a2fbe0f-1cd1-4036-bf19-3b518340daaf\",\n\t\t\t\t\"actionOrder\": \"2\",\n\t\t\t\t\"stepId\": \"80b32042-431d-48e7-a96d-809d910be4ed\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\t\"actionOrder\": \"3\",\n\t\t\t\t\"stepId\": \"80b32042-431d-48e7-a96d-809d910be4ed\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"a5f85a15-cc64-4a3f-8ea0-302af7eb5bf2\",\n\t\t\t\t\"actionOrder\": \"4\",\n\t\t\t\t\"stepId\": \"80b32042-431d-48e7-a96d-809d910be4ed\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\t\"actionOrder\": \"5\",\n\t\t\t\t\"stepId\": \"80b32042-431d-48e7-a96d-809d910be4ed\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"1be49df8-c5dd-420b-a02d-45b6045fc650\",\n\t\t\t\t\"actionOrder\": \"6\",\n\t\t\t\t\"stepId\": \"80b32042-431d-48e7-a96d-809d910be4ed\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"01e3c327-6111-4233-bc87-2c9b163157da\",\n\t\t\t\t\"actionOrder\": \"0\",\n\t\t\t\t\"stepId\": \"6e268d79-acbb-4c8f-a4d2-5aef7adc9940\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"bfecd006-4698-4faa-8ed9-66ec04b317d7\",\n\t\t\t\t\"actionOrder\": \"1\",\n\t\t\t\t\"stepId\": \"6e268d79-acbb-4c8f-a4d2-5aef7adc9940\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"d5336da9-051e-4708-8c45-200533bb2da8\",\n\t\t\t\t\"actionOrder\": \"2\",\n\t\t\t\t\"stepId\": \"6e268d79-acbb-4c8f-a4d2-5aef7adc9940\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"e4e924b5-3880-41c7-8dd9-528ee9f8e26e\",\n\t\t\t\t\"actionOrder\": \"3\",\n\t\t\t\t\"stepId\": \"6e268d79-acbb-4c8f-a4d2-5aef7adc9940\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"8609834c-1b9d-4c39-a424-1db950faed5f\",\n\t\t\t\t\"actionOrder\": \"4\",\n\t\t\t\t\"stepId\": \"6e268d79-acbb-4c8f-a4d2-5aef7adc9940\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"86a2c2c7-0f8b-434e-a5dd-3eef3157dec6\",\n\t\t\t\t\"actionOrder\": \"0\",\n\t\t\t\t\"stepId\": \"2c17f10c-9c7e-4b83-ade8-9f4f52c5352c\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"9f220a4b-bcf2-4799-9158-96b33b8a6ceb\",\n\t\t\t\t\"actionOrder\": \"1\",\n\t\t\t\t\"stepId\": \"2c17f10c-9c7e-4b83-ade8-9f4f52c5352c\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"762416fe-3e1e-49ff-b815-5b0562ed823c\",\n\t\t\t\t\"actionOrder\": \"2\",\n\t\t\t\t\"stepId\": \"2c17f10c-9c7e-4b83-ade8-9f4f52c5352c\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"47c0befa-52ef-4100-885d-5d018e03ee48\",\n\t\t\t\t\"actionOrder\": \"3\",\n\t\t\t\t\"stepId\": \"2c17f10c-9c7e-4b83-ade8-9f4f52c5352c\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\t\"actionOrder\": \"0\",\n\t\t\t\t\"stepId\": \"5d7eeb4d-36a8-4ed9-bea5-97534175268e\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\t\"actionOrder\": \"1\",\n\t\t\t\t\"stepId\": \"5d7eeb4d-36a8-4ed9-bea5-97534175268e\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"951ef396-aa41-4d90-b487-94e906cbd7bf\",\n\t\t\t\t\"actionOrder\": \"0\",\n\t\t\t\t\"stepId\": \"c41b561a-4068-45d7-b628-6b1f94831693\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"712c1040-6e38-4633-829b-90e9dca2b5bb\",\n\t\t\t\t\"actionOrder\": \"0\",\n\t\t\t\t\"stepId\": \"04ddbadc-d37f-4d25-9e1f-b3a2eb1d8605\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"7e1efac1-f59d-4f6e-a720-7aab1c18a32d\",\n\t\t\t\t\"actionOrder\": \"0\",\n\t\t\t\t\"stepId\": \"af893bc5-06cc-45b1-8011-bcc12a4ec63f\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"6a638b3a-31fc-4e71-af0b-cb2302d1f19a\",\n\t\t\t\t\"actionOrder\": \"1\",\n\t\t\t\t\"stepId\": \"af893bc5-06cc-45b1-8011-bcc12a4ec63f\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"613c3dea-3911-4963-bfc8-c68ff82ff028\",\n\t\t\t\t\"actionOrder\": \"2\",\n\t\t\t\t\"stepId\": \"af893bc5-06cc-45b1-8011-bcc12a4ec63f\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"actionId\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\t\"actionOrder\": \"0\",\n\t\t\t\t\"stepId\": \"d55580c3-b67a-4319-a911-88738e12733c\"\n\t\t\t}\n\t\t],\n\t\t\"actions\": [\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"7e1efac1-f59d-4f6e-a720-7aab1c18a32d\",\n\t\t\t\t\"name\": \"Create Page\",\n\t\t\t\t\"nextAssign\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\t\"nextStep\": \"80b32042-431d-48e7-a96d-809d910be4ed\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 0,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"LISTING\",\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"UNLOCKED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"86a2c2c7-0f8b-434e-a5dd-3eef3157dec6\",\n\t\t\t\t\"name\": \"Desestimar\",\n\t\t\t\t\"nextAssign\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\t\"nextStep\": \"80b32042-431d-48e7-a96d-809d910be4ed\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 0,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"LISTING\",\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"UNLOCKED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"a5f85a15-cc64-4a3f-8ea0-302af7eb5bf2\",\n\t\t\t\t\"name\": \"Reject\",\n\t\t\t\t\"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n\t\t\t\t\"nextStep\": \"80b32042-431d-48e7-a96d-809d910be4ed\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 3,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"LISTING\",\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"UNLOCKED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"6a638b3a-31fc-4e71-af0b-cb2302d1f19a\",\n\t\t\t\t\"name\": \"Reject\",\n\t\t\t\t\"nextAssign\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\t\"nextStep\": \"80b32042-431d-48e7-a96d-809d910be4ed\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 1,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"LISTING\",\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"UNLOCKED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"e4e924b5-3880-41c7-8dd9-528ee9f8e26e\",\n\t\t\t\t\"name\": \"Reject\",\n\t\t\t\t\"nextAssign\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\t\"nextStep\": \"80b32042-431d-48e7-a96d-809d910be4ed\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 3,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"LISTING\",\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"UNLOCKED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": false,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"cacabf0d-7c08-42a4-ab5f-63c30815dcf2\",\n\t\t\t\t\"name\": \"Unpublish\",\n\t\t\t\t\"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n\t\t\t\t\"nextStep\": \"80b32042-431d-48e7-a96d-809d910b141d\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 0,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"LISTING\",\n\t\t\t\t\t\"LOCKED\",\n\t\t\t\t\t\"UNLOCKED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": false,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"1e653c4b-5fd3-4ec3-9ddf-75df49201791\",\n\t\t\t\t\"name\": \"Unpublish\",\n\t\t\t\t\"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n\t\t\t\t\"nextStep\": \"80b32042-431d-48e7-a96d-809d910be4ed\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 0,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"LOCKED\",\n\t\t\t\t\t\"UNLOCKED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"repeatIcon\",\n\t\t\t\t\"id\": \"6e00b390-c476-4a3b-b5a4-b971983a33a2\",\n\t\t\t\t\"name\": \"return contents\",\n\t\t\t\t\"nextAssign\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\t\"nextStep\": \"af893bc5-06cc-45b1-8011-bcc12a4ec63f\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 0,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"LISTING\",\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"UNLOCKED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"cb4c7f6e-c546-42b7-95b4-2a731a690dbd\",\n\t\t\t\t\"name\": \"return contents\",\n\t\t\t\t\"nextAssign\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\t\"nextStep\": \"6e268d79-acbb-4c8f-a4d2-5aef7adc9940\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 1,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"LOCKED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"01e3c327-6111-4233-bc87-2c9b163157da\",\n\t\t\t\t\"name\": \"Delete content\",\n\t\t\t\t\"nextAssign\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\t\"nextStep\": \"80b32042-431d-48e7-a96d-809d910be4ed\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 0,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"LISTING\",\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"UNLOCKED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"0581b78f-d857-449b-b22d-a3883f26ca2a\",\n\t\t\t\t\"name\": \"Delete content\",\n\t\t\t\t\"nextAssign\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\t\"nextStep\": \"80b32042-431d-48e7-a96d-809d910be4ed\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 0,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"LISTING\",\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"UNLOCKED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": false,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\t\"name\": \"Savedraft\",\n\t\t\t\t\"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n\t\t\t\t\"nextStep\": \"80b32042-431d-48e7-a96d-809d910be4ed\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 2,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"LOCKED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": false,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"copyIcon\",\n\t\t\t\t\"id\": \"762416fe-3e1e-49ff-b815-5b0562ed823c\",\n\t\t\t\t\"name\": \"Savedraft\",\n\t\t\t\t\"nextAssign\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\t\"nextStep\": \"2c17f10c-9c7e-4b83-ade8-9f4f52c5352c\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 2,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"LOCKED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": false,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"copyIcon\",\n\t\t\t\t\"id\": \"d5336da9-051e-4708-8c45-200533bb2da8\",\n\t\t\t\t\"name\": \"Savedraft\",\n\t\t\t\t\"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n\t\t\t\t\"nextStep\": \"6e268d79-acbb-4c8f-a4d2-5aef7adc9940\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 2,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"LOCKED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": false,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"f892e585-d225-4ff9-863a-dd6bbb8c5058\",\n\t\t\t\t\"name\": \"Savedraft\",\n\t\t\t\t\"nextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n\t\t\t\t\"nextStep\": \"5d7eeb4d-36a8-4ed9-bea5-97534175268e\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 0,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"LOCKED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"9f220a4b-bcf2-4799-9158-96b33b8a6ceb\",\n\t\t\t\t\"name\": \"Save and publish\",\n\t\t\t\t\"nextAssign\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\t\"nextStep\": \"80b32042-431d-48e7-a96d-809d910be4ed\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 1,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"LOCKED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"6a2fbe0f-1cd1-4036-bf19-3b518340daaf\",\n\t\t\t\t\"name\": \"Save and publish\",\n\t\t\t\t\"nextAssign\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\t\"nextStep\": \"80b32042-431d-48e7-a96d-809d910be4ed\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 1,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"LOCKED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"bfecd006-4698-4faa-8ed9-66ec04b317d7\",\n\t\t\t\t\"name\": \"Save and publish\",\n\t\t\t\t\"nextAssign\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\t\"nextStep\": \"80b32042-431d-48e7-a96d-809d910be4ed\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 1,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"LOCKED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"712c1040-6e38-4633-829b-90e9dca2b5bb\",\n\t\t\t\t\"name\": \"Create page\",\n\t\t\t\t\"nextAssign\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\t\"nextStep\": \"af893bc5-06cc-45b1-8011-bcc12a4ec63f\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 0,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"LISTING\",\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"UNLOCKED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"951ef396-aa41-4d90-b487-94e906cbd7bf\",\n\t\t\t\t\"name\": \"Update\",\n\t\t\t\t\"nextAssign\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\t\"nextStep\": \"2c17f10c-9c7e-4b83-ade8-9f4f52c5352c\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 0,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"LISTING\",\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"UNLOCKED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": false,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"55aa49b2-40ad-48fb-a9ce-45ca9e6cd47b\",\n\t\t\t\t\"name\": \"Update\",\n\t\t\t\t\"nextAssign\": \"e29074a8-1a3c-4696-b764-68610ad98cb2\",\n\t\t\t\t\"nextStep\": \"6e268d79-acbb-4c8f-a4d2-5aef7adc9940\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 4,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"LOCKED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": true,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"1be49df8-c5dd-420b-a02d-45b6045fc650\",\n\t\t\t\t\"name\": \"Validate\",\n\t\t\t\t\"nextAssign\": \"ebd0a7d6-e9ea-4e1b-b9f5-15a5734ca304\",\n\t\t\t\t\"nextStep\": \"5d7eeb4d-36a8-4ed9-bea5-97534175268e\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 5,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": true,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"LOCKED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": true,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"resetIcon\",\n\t\t\t\t\"id\": \"47c0befa-52ef-4100-885d-5d018e03ee48\",\n\t\t\t\t\"name\": \"Validate\",\n\t\t\t\t\"nextAssign\": \"ebd0a7d6-e9ea-4e1b-b9f5-15a5734ca304\",\n\t\t\t\t\"nextStep\": \"5d7eeb4d-36a8-4ed9-bea5-97534175268e\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 3,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": true,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"LOCKED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": true,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"workflowIcon\",\n\t\t\t\t\"id\": \"8609834c-1b9d-4c39-a424-1db950faed5f\",\n\t\t\t\t\"name\": \"Validate\",\n\t\t\t\t\"nextAssign\": \"ebd0a7d6-e9ea-4e1b-b9f5-15a5734ca304\",\n\t\t\t\t\"nextStep\": \"5d7eeb4d-36a8-4ed9-bea5-97534175268e\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 4,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": true,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"LOCKED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"assignable\": true,\n\t\t\t\t\"commentable\": true,\n\t\t\t\t\"condition\": \"\",\n\t\t\t\t\"icon\": \"resetIcon\",\n\t\t\t\t\"id\": \"613c3dea-3911-4963-bfc8-c68ff82ff028\",\n\t\t\t\t\"name\": \"Validate\",\n\t\t\t\t\"nextAssign\": \"ebd0a7d6-e9ea-4e1b-b9f5-15a5734ca304\",\n\t\t\t\t\"nextStep\": \"d55580c3-b67a-4319-a911-88738e12733c\",\n\t\t\t\t\"nextStepCurrentStep\": false,\n\t\t\t\t\"order\": 2,\n\t\t\t\t\"owner\": null,\n\t\t\t\t\"roleHierarchyForAssign\": true,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"showOn\": [\n\t\t\t\t\t\"LISTING\",\n\t\t\t\t\t\"UNPUBLISHED\",\n\t\t\t\t\t\"EDITING\",\n\t\t\t\t\t\"NEW\",\n\t\t\t\t\t\"ARCHIVED\",\n\t\t\t\t\t\"UNLOCKED\",\n\t\t\t\t\t\"PUBLISHED\"\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"schemeSystemActionWorkflowActionMappings\": [],\n\t\t\"schemes\": [\n\t\t\t{\n\t\t\t\t\"archived\": false,\n\t\t\t\t\"creationDate\": 1622049057638,\n\t\t\t\t\"defaultScheme\": false,\n\t\t\t\t\"description\": \"automatic apirest config\",\n\t\t\t\t\"entryActionId\": \"5243e82f-c19e-484d-854c-01d3479744ee\",\n\t\t\t\t\"id\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\",\n\t\t\t\t\"mandatory\": false,\n\t\t\t\t\"modDate\": 1622049056907,\n\t\t\t\t\"name\": \"Solicitud De Cambio\",\n\t\t\t\t\"system\": false\n\t\t\t}\n\t\t],\n\t\t\"steps\": [\n\t\t\t{\n\t\t\t\t\"creationDate\": 1622049104077,\n\t\t\t\t\"enableEscalation\": false,\n\t\t\t\t\"escalationAction\": null,\n\t\t\t\t\"escalationTime\": 0,\n\t\t\t\t\"id\": \"80b32042-431d-48e7-a96d-809d910be4ed\",\n\t\t\t\t\"myOrder\": 0,\n\t\t\t\t\"name\": \"Iniciado\",\n\t\t\t\t\"resolved\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"creationDate\": 1622049104077,\n\t\t\t\t\"enableEscalation\": false,\n\t\t\t\t\"escalationAction\": null,\n\t\t\t\t\"escalationTime\": 0,\n\t\t\t\t\"id\": \"6e268d79-acbb-4c8f-a4d2-5aef7adc9940\",\n\t\t\t\t\"myOrder\": 1,\n\t\t\t\t\"name\": \"Pending\",\n\t\t\t\t\"resolved\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"creationDate\": 1622049104078,\n\t\t\t\t\"enableEscalation\": false,\n\t\t\t\t\"escalationAction\": null,\n\t\t\t\t\"escalationTime\": 0,\n\t\t\t\t\"id\": \"2c17f10c-9c7e-4b83-ade8-9f4f52c5352c\",\n\t\t\t\t\"myOrder\": 2,\n\t\t\t\t\"name\": \"Pending\",\n\t\t\t\t\"resolved\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"creationDate\": 1622049104078,\n\t\t\t\t\"enableEscalation\": false,\n\t\t\t\t\"escalationAction\": null,\n\t\t\t\t\"escalationTime\": 0,\n\t\t\t\t\"id\": \"5d7eeb4d-36a8-4ed9-bea5-97534175268e\",\n\t\t\t\t\"myOrder\": 3,\n\t\t\t\t\"name\": \"Pending\",\n\t\t\t\t\"resolved\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"creationDate\": 1622049104079,\n\t\t\t\t\"enableEscalation\": false,\n\t\t\t\t\"escalationAction\": null,\n\t\t\t\t\"escalationTime\": 0,\n\t\t\t\t\"id\": \"c41b561a-4068-45d7-b628-6b1f94831693\",\n\t\t\t\t\"myOrder\": 4,\n\t\t\t\t\"name\": \"Update\",\n\t\t\t\t\"resolved\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"creationDate\": 1622049104079,\n\t\t\t\t\"enableEscalation\": false,\n\t\t\t\t\"escalationAction\": null,\n\t\t\t\t\"escalationTime\": 0,\n\t\t\t\t\"id\": \"04ddbadc-d37f-4d25-9e1f-b3a2eb1d8605\",\n\t\t\t\t\"myOrder\": 5,\n\t\t\t\t\"name\": \"Create\",\n\t\t\t\t\"resolved\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"creationDate\": 1622049104080,\n\t\t\t\t\"enableEscalation\": false,\n\t\t\t\t\"escalationAction\": null,\n\t\t\t\t\"escalationTime\": 0,\n\t\t\t\t\"id\": \"af893bc5-06cc-45b1-8011-bcc12a4ec63f\",\n\t\t\t\t\"myOrder\": 6,\n\t\t\t\t\"name\": \"Create\",\n\t\t\t\t\"resolved\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\"\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"creationDate\": 1622049104080,\n\t\t\t\t\"enableEscalation\": false,\n\t\t\t\t\"escalationAction\": null,\n\t\t\t\t\"escalationTime\": 0,\n\t\t\t\t\"id\": \"d55580c3-b67a-4319-a911-88738e12733c\",\n\t\t\t\t\"myOrder\": 7,\n\t\t\t\t\"name\": \"Pending\",\n\t\t\t\t\"resolved\": false,\n\t\t\t\t\"schemeId\": \"67a00c70-f5d1-43b6-aa06-0ae084b4c1db\"\n\t\t\t}\n\t\t],\n\t\t\"version\": \"1.0\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/import",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"import"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ExportScheme",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "User Credentials Validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, Invalid credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Correct response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a4/export",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a4",
								"export"
							]
						},
						"description": "Validate you can't export without credentials"
					},
					"response": []
				},
				{
					"name": "Sucess Export As Admin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Includes scheme\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"REST Schema\\\"\");",
									"});",
									"",
									"pm.test(\"Includes step\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"My REST step\\\"\");",
									"});",
									"",
									"pm.test(\"Includes action\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/{{schemeId}}/export",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"{{schemeId}}",
								"export"
							]
						},
						"description": "Validate you can export schemes as admin user"
					},
					"response": []
				},
				{
					"name": "ShortlyIdValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Includes scheme\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"REST Schema\\\"\");",
									"});",
									"",
									"pm.test(\"Includes step\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"My REST step\\\"\");",
									"});",
									"",
									"pm.test(\"Includes action\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/{{schemeIdShorty}}/export",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"{{schemeIdShorty}}",
								"export"
							]
						},
						"description": "Validate you can export schemes as admin user"
					},
					"response": []
				}
			]
		},
		{
			"name": "UpdateStep",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/94178d17-96a0-4e08-b9aa-94214a7fb31e",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"94178d17-96a0-4e08-b9aa-94214a7fb31e"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"REST step UPDATED\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"stepOrder\":5, \"stepName\":\"REST step UPDATED\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/{{stepId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"{{stepId}}"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Step does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"stepOrder\":5, \"stepName\":\"REST\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/ad6b095b6-b65f-4bdb-bbfd-701d663dfee2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"ad6b095b6-b65f-4bdb-bbfd-701d663dfee2"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "SupportShortlyId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"REST step Updated again\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"stepOrder\":5, \"stepName\":\"REST step Updated again\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/{{stepIdShorty}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"{{stepIdShorty}}"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				},
				{
					"name": "EmptyBody_shouldRespond400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/d6b095b6-b65f-4bdb-bbfd-701d663dfee2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"d6b095b6-b65f-4bdb-bbfd-701d663dfee2"
							]
						},
						"description": "This method update the some step using the id \n\n@Path(\"/steps/{stepId}\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "ReorderStep",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/step/94178d17-96a0-4e08-b9aa-94214a7fb31e/order/0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"step",
								"94178d17-96a0-4e08-b9aa-94214a7fb31e",
								"order",
								"0"
							]
						},
						"description": "Change the order of the steps in a scheme\n\n@Path(\"/reorder/step/{stepId}/order/{order}\")"
					},
					"response": []
				},
				{
					"name": "SuccessReorder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/step/{{stepId}}/order/0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"step",
								"{{stepId}}",
								"order",
								"0"
							]
						},
						"description": "Change the order of the steps in a scheme\n\n@Path(\"/reorder/step/{stepId}/order/{order}\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Step does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/step/adc3c9cd0-8467-404b-bf95-cb7df3fbc293/order/0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"step",
								"adc3c9cd0-8467-404b-bf95-cb7df3fbc293",
								"order",
								"0"
							]
						},
						"description": "Change the order of the steps in a scheme\n\n@Path(\"/reorder/step/{stepId}/order/{order}\")"
					},
					"response": []
				},
				{
					"name": "SupportShortlyId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/step/{{stepIdShorty}}/order/0",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"step",
								"{{stepIdShorty}}",
								"order",
								"0"
							]
						},
						"description": "Change the order of the steps in a scheme\n\n@Path(\"/reorder/step/{stepId}/order/{order}\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "UpdateScheme",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"REST2\", \"schemeDescription\": \"rest1\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/211040db-5d79-4e3c-807a-1f2dec2ff16b",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"211040db-5d79-4e3c-807a-1f2dec2ff16b"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessUpdate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"WF_Import_AsAdmin_edited\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"WF_Import_AsAdmin_edited\", \"schemeDescription\": \"AutomaticTest\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/{{schemeId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"{{schemeId}}"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 \", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Scheme does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"Default Scheme Updated from REST\", \"schemeDescription\": \"AutomaticTest\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/a85c1515c-c4f3-463c-bac2-860b8fcacc34",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"a85c1515c-c4f3-463c-bac2-860b8fcacc34"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "SupportShorty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"WF_Import_AsAdmin_edited_Shorty\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"WF_Import_AsAdmin_edited_Shorty\", \"schemeDescription\": \"AutomaticTest\", \"schemeArchived\": \"true\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/{{schemeIdShorty}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"{{schemeIdShorty}}"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "EmptyBody_ShouldRespond400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/85c1515c-c4f3-463c-bac2-860b8fcacc34",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"85c1515c-c4f3-463c-bac2-860b8fcacc34"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "ReorderAction",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 3}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/94178d17-96a0-4e08-b9aa-94214a7fb31e/actions/7075981c-eda2-4896-a65c-71749ee2877e",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"94178d17-96a0-4e08-b9aa-94214a7fb31e",
								"actions",
								"7075981c-eda2-4896-a65c-71749ee2877e"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 0}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/{{stepId}}/actions/{{actionId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"{{stepId}}",
								"actions",
								"{{actionId}}"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidOrderValue",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400, Bad request\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Numeric value\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 123012301203102301230102301230123}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/1f67a807-5094-4229-9dd7-7b0a4fb57a1e/actions/64fa7b51-bfc4-4686-8775-70a8cd44aee7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"1f67a807-5094-4229-9dd7-7b0a4fb57a1e",
								"actions",
								"64fa7b51-bfc4-4686-8775-70a8cd44aee7"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Action does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 1}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/a1f67a807-5094-4229-9dd7-7b0a4fb57a1e/actions/64fa7b51-bfc4-4686-8775-70a8cd44aee7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"a1f67a807-5094-4229-9dd7-7b0a4fb57a1e",
								"actions",
								"64fa7b51-bfc4-4686-8775-70a8cd44aee7"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidActionId ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Action does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "bill",
									"type": "string"
								},
								{
									"key": "username",
									"value": "bill@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 1}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/1f67a807-5094-4229-9dd7-7b0a4fb57a1e/actions/a64fa7b51-bfc4-4686-8775-70a8cd44aee7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"1f67a807-5094-4229-9dd7-7b0a4fb57a1e",
								"actions",
								"a64fa7b51-bfc4-4686-8775-70a8cd44aee7"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"order\" : 1}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/{{stepIdShorty}}/actions/{{actionIdShorty}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"{{stepIdShorty}}",
								"actions",
								"{{actionIdShorty}}"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "EmptyBody_shouldRespond400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/reorder/steps/1f67a807-5094-4229-9dd7-7b0a4fb57a1e/actions/64fa7b51-bfc4-4686-8775-70a8cd44aee7",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"reorder",
								"steps",
								"1f67a807-5094-4229-9dd7-7b0a4fb57a1e",
								"actions",
								"64fa7b51-bfc4-4686-8775-70a8cd44aee7"
							]
						},
						"description": "Change the order of an action associated to the step\n\n@Path(\"/reorder/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "FireActionById",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"SucessRequest\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"contentletIdentifier\", jsonData.entity.identifier);",
									"pm.collectionVariables.set(\"contentletInode\", jsonData.entity.inode);",
									"pm.collectionVariables.set(\"fireActionLanguageKey\", jsonData.entity.key);",
									"// pm.collectionVariables.set(\"contentletIdShorty\", jsonData.entity.id.replace(\"-\",\"\").substring(0,10));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentlet\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"SucessRequest{{$timestamp}}\",\n  \"value\": \"SucessRequest{{$timestamp}}\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action using the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here.\n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "InvalidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Action does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentlet\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postman\",\n  \"value\": \"postman\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/ab9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"ab9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "InvalidContentTypeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Content Type with id\");",
									"    pm.expect(pm.response.text()).to.include(\"not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentlet\" : {\n  \"stInode\" : \"af4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postman\",\n  \"value\": \"postman\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "SupportShorlty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"SupportShorty\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentlet\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"SupportShorty{{$timestamp}}\",\n  \"value\": \"SupportShorty{{$timestamp}}\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d8843/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d8843",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "FireActionWithoutBody",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"SucessRequest\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d8843/fire?inode={{contentletInode}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d8843",
								"fire"
							],
							"query": [
								{
									"key": "inode",
									"value": "{{contentletInode}}"
								}
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "ExistingUniqueContent_ShouldRespond400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400, BadRequest\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"unique\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentlet\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"{{fireActionLanguageKey}}\",\n  \"value\": \"postman3\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest_Mutipart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"First binary included\", function () {",
									"    pm.expect(jsonData.entity.asset).include(\"james.jpeg\"); ",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "json",
									"value": "{ \"contentlet\" : {\n  \"stInode\" : \"f2d8a1c7-2b77-2081-bcf1-b5348988c08d\"\n}\n}",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "resources/WorkflowResource/testImages/james.jpeg"
								},
								{
									"key": "file",
									"type": "file",
									"src": [],
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action using the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here.\n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "FireDefaultAction",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"SucessRequest\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"contentletIdentifier\", jsonData.entity.identifier);",
									"pm.collectionVariables.set(\"contentletInode\", jsonData.entity.inode);",
									"pm.collectionVariables.set(\"fireActionLanguageKey\", jsonData.entity.key);",
									"// pm.collectionVariables.set(\"contentletIdShorty\", jsonData.entity.id.replace(\"-\",\"\").substring(0,10));",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentlet\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"SucessRequest{{$timestamp}}\",\n  \"value\": \"SucessRequest{{$timestamp}}\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							]
						},
						"description": "Fire any action using the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here.\n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "InvalidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"No enum constant\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentlet\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postman\",\n  \"value\": \"postman\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/NONEXISTING",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"NONEXISTING"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "InvalidContentTypeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Content Type with id\");",
									"    pm.expect(pm.response.text()).to.include(\"not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentlet\" : {\n  \"stInode\" : \"af4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"postman\",\n  \"value\": \"postman\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "FireActionWithoutBody",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"SucessRequest\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d8843/fire?inode={{contentletInode}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d8843",
								"fire"
							],
							"query": [
								{
									"key": "inode",
									"value": "{{contentletInode}}"
								}
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "ExistingUniqueContent_ShouldRespond400",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400, BadRequest\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"unique\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"contentlet\" : {\n  \"stInode\" : \"f4d7c1b8-2c88-4071-abf1-a5328977b07d\",\n  \"languageId\" : 1,\n  \"key\": \"{{fireActionLanguageKey}}\",\n  \"value\": \"postman3\"\n}\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "BadRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 \", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/b9d89c80-3d88-4311-8365-187323c96436/fire",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"b9d89c80-3d88-4311-8365-187323c96436",
								"fire"
							]
						},
						"description": "Fire any action uysing the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here. \n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				},
				{
					"name": "SuccessRequest_Mutipart",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"First binary included\", function () {",
									"    pm.expect(jsonData.entity.asset).include(\"james.jpeg\"); ",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "json",
									"value": "{ \"contentlet\" : {\n  \"stInode\" : \"f2d8a1c7-2b77-2081-bcf1-b5348988c08d\"\n}\n}",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "resources/WorkflowResource/testImages/james.jpeg"
								},
								{
									"key": "file",
									"type": "file",
									"src": [],
									"disabled": true
								}
							]
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							]
						},
						"description": "Fire any action using the actionId\n\nOptional: If you pass ?inode={inode}, you don't need body here.\n\n@Path(\"/actions/{actionId}/fire\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "CopyScheme",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/d61a59e1a4/copy",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"d61a59e1a4",
								"copy"
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "SuccessCopy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Copy from REST (automatic)\");",
									"});",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"creationDate\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/{{schemeId}}/copy?name=Copy from REST (automatic)",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"{{schemeId}}",
								"copy"
							],
							"query": [
								{
									"key": "name",
									"value": "Copy from REST (automatic)"
								}
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Scheme does not exis\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/ad61a59e1-a49c-46f2-a929-db2b4bfa88b2/copy?name=Copy from REST (automatic)_limited",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"ad61a59e1-a49c-46f2-a929-db2b4bfa88b2",
								"copy"
							],
							"query": [
								{
									"key": "name",
									"value": "Copy from REST (automatic)_limited"
								}
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "CopyWithAlreadyExistingName",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Copy from REST (automatic)_limited\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/{{schemeId}}/copy?name=Copy from REST (automatic)_limited",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"{{schemeId}}",
								"copy"
							],
							"query": [
								{
									"key": "name",
									"value": "Copy from REST (automatic)_limited"
								}
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "CopyWithotNameParam",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Copy from REST (automatic)_limited\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\":\"Copy from REST (automatic)_limited\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/{{schemeId}}/copy",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"{{schemeId}}",
								"copy"
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Copy Using ShortlyID\");",
									"});",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"creationDate\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{ \"name\":\"Copy from REST (automatic)_limited\" }"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/{{schemeIdShorty}}/copy?name=Copy Using ShortlyID",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"{{schemeIdShorty}}",
								"copy"
							],
							"query": [
								{
									"key": "name",
									"value": "Copy Using ShortlyID"
								}
							]
						},
						"description": "Do a copy of an existing scheme \n\n@Path(\"/schemes/{schemeId}/copy\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "DeleteStep",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/c6035d07-8e8f-4a71-ad93-93adabf13906",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"c6035d07-8e8f-4a71-ad93-93adabf13906"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				},
				{
					"name": "SuccessDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"stepId\"));",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/{{stepId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"{{stepId}}"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				},
				{
					"name": "ReferencedStepValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"is being referenced by\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/ee24a4cb-2d15-4c98-b1bd-6327126451f3",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"ee24a4cb-2d15-4c98-b1bd-6327126451f3"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Step does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/zee24a4cb-2d15-4c98-b1bd-6327126451f3",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"zee24a4cb-2d15-4c98-b1bd-6327126451f3"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				},
				{
					"name": "GivenValidStep_shouldSave",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"My REST step\\\"\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"stepId\", jsonData.entity.id);",
									"pm.collectionVariables.set(\"stepIdShorty\", jsonData.entity.id.replace(\"-\",\"\").substring(0,10));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"{{schemeId}}\", \"stepName\":\"My REST step\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(pm.collectionVariables.get(\"stepId\"));",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/{{stepIdShorty}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"{{stepIdShorty}}"
							]
						},
						"description": "This method deletes a step using the ID\n\n@Path(\"/steps/{stepId}\")\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "DeleteAction (Permanently)",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/9012b349-e8ce-446f-86df-50b4f82a82ff",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"9012b349-e8ce-446f-86df-50b4f82a82ff"
							]
						},
						"description": "Deletes an action associated to the scheme and all references into steps\n\n@Path(\"/actions/{actionId}\")\n"
					},
					"response": []
				},
				{
					"name": "SuccessRequest",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/{{actionId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"{{actionId}}"
							]
						},
						"description": "Deletes an action associated to the scheme and all references into steps\n\n@Path(\"/actions/{actionId}\")\n"
					},
					"response": []
				},
				{
					"name": "InvalidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Action does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "chris",
									"type": "string"
								},
								{
									"key": "username",
									"value": "chris@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/123",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"123"
							]
						},
						"description": "Deletes an action associated to the scheme and all references into steps\n\n@Path(\"/actions/{actionId}\")\n"
					},
					"response": []
				},
				{
					"name": "GivenValidStep_shouldSave",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"My REST step\\\"\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"stepId\", jsonData.entity.id);",
									"pm.collectionVariables.set(\"stepIdShorty\", jsonData.entity.id.replace(\"-\",\"\").substring(0,10));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"{{schemeId}}\", \"stepName\":\"My REST step\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "ValidAction_shouldSave",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\"\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"actionId\", jsonData.entity.id);",
									"pm.collectionVariables.set(\"actionIdShorty\", jsonData.entity.id.replace(\"-\",\"\").substring(0,10));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"{{stepId}}\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"{{schemeId}}\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "SupportShortly",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/{{actionIdShorty}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"{{actionIdShorty}}"
							]
						},
						"description": "Deletes an action associated to the scheme and all references into steps\n\n@Path(\"/actions/{actionId}\")\n"
					},
					"response": []
				}
			]
		},
		{
			"name": "DeleteAction (from step)",
			"item": [
				{
					"name": "GivenValidStep_shouldSave",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"My REST step\\\"\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"stepId\", jsonData.entity.id);",
									"pm.collectionVariables.set(\"stepIdShorty\", jsonData.entity.id.replace(\"-\",\"\").substring(0,10));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"{{schemeId}}\", \"stepName\":\"My REST step\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "ValidAction_shouldSave",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\"\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"actionId\", jsonData.entity.id);",
									"pm.collectionVariables.set(\"actionIdShorty\", jsonData.entity.id.replace(\"-\",\"\").substring(0,10));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"{{stepId}}\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"{{schemeId}}\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/0c5018fc-4773-4524-9ba8-328ca4c3d0b2/actions/658278d3-aa3b-4ce4-a028-c9e1656e4f9e",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"0c5018fc-4773-4524-9ba8-328ca4c3d0b2",
								"actions",
								"658278d3-aa3b-4ce4-a028-c9e1656e4f9e"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "SuceessDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/{{stepId}}/actions/{{actionId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"{{stepId}}",
								"actions",
								"{{actionId}}"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidStepId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Step does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/123/actions/c92f9aa1-9503-4567-ac30-d3242b54d02d",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"123",
								"actions",
								"c92f9aa1-9503-4567-ac30-d3242b54d02d"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidActionId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Action does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/{{stepId}}/actions/123",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"{{stepId}}",
								"actions",
								"123"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				},
				{
					"name": "GivenValidStep_shouldSave",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"My REST step\\\"\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"stepId\", jsonData.entity.id);",
									"pm.collectionVariables.set(\"stepIdShorty\", jsonData.entity.id.replace(\"-\",\"\").substring(0,10));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": " { \"schemeId\" : \"{{schemeId}}\", \"stepName\":\"My REST step\", \"enableEscalation\":false, \"escalationAction\":\"\", \"escalationTime\":\"0\",\"stepResolved\":false} "
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps"
							]
						},
						"description": "Add a new workflow step \n\n@Path(\"/steps\")"
					},
					"response": []
				},
				{
					"name": "ValidAction_shouldSave",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"saveContent FROM REST NEW\\\"\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"actionId\", jsonData.entity.id);",
									"pm.collectionVariables.set(\"actionIdShorty\", jsonData.entity.id.replace(\"-\",\"\").substring(0,10));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"stepId\": \"{{stepId}}\",\n      \"actionName\": \"saveContent FROM REST NEW\",\n      \"schemeId\": \"{{schemeId}}\",\n      \"actionCondition\": \"\",\n      \"actionNextStep\": \"currentstep\",\n      \"actionNextAssign\": \"654b0931-1027-41f7-ad4d-173115ed8ec1\",\n      \"actionRoleHierarchyForAssign\": false,\n      \"actionAssignable\": false,\n      \"actionCommentable\": true,\n      \"whoCanUse\":[],\n      \"showOn\": [\n        \"UNPUBLISHED\",\n        \"NEW\",\n        \"LOCKED\",\n        \"PUBLISHED\"\n      ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions"
							]
						},
						"description": "Saves an action, by default the action is associated to the schema, however if the stepId is set will be automatically associated to the step too.\n\n@Path(\"/actions\")"
					},
					"response": []
				},
				{
					"name": "SupportShortlyId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Ok\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/steps/{{stepIdShorty}}/actions/{{actionIdShorty}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"steps",
								"{{stepIdShorty}}",
								"actions",
								"{{actionIdShorty}}"
							]
						},
						"description": "Deletes an action associated to the step\n\n@Path(\"/steps/{stepId}/actions/{actionId}\")"
					},
					"response": []
				}
			]
		},
		{
			"name": "DeleteScheme",
			"item": [
				{
					"name": "invalidateSession",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/logout",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "UserCredentialsValidation",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 401, You need credentials\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"Invalid User\");",
									"});"
								]
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/85c1515c-c4f3-463c-bac2-860b8fcacc34",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"85c1515c-c4f3-463c-bac2-860b8fcacc34"
							]
						},
						"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "archiveScheme",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"WF_Import_AsAdmin_edited\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"WF_Import_AsAdmin_edited\", \"schemeDescription\": \"AutomaticTest\", \"schemeArchived\": \"true\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/{{schemeId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"{{schemeId}}"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "SuccessDelete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"id\");",
									"});",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"name\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/{{schemeId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"{{schemeId}}"
							]
						},
						"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "InvalidSchemeId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"The Workflow Scheme does not exist\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/123",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"123"
							]
						},
						"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "GivenValidScheme_ShouldSave",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes name\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"REST Schema\\\"\");",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"schemeId\", jsonData.entity.id);",
									"pm.collectionVariables.set(\"schemeIdShorty\", jsonData.entity.id.replace(\"-\",\"\").substring(0,10));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"REST Schema\", \"schemeDescription\": \"rest1\", \"schemeArchived\": \"false\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes"
							]
						},
						"description": "Creates a new scheme \n\n@Path(\"/schemes\")"
					},
					"response": []
				},
				{
					"name": "archiveScheme",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200 \", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"\\\"name\\\":\\\"WF_Import_AsAdmin_edited\\\"\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"schemeName\": \"WF_Import_AsAdmin_edited\", \"schemeDescription\": \"AutomaticTest\", \"schemeArchived\": \"true\"}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/{{schemeId}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"{{schemeId}}"
							]
						},
						"description": "Updates an existing scheme\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				},
				{
					"name": "SupportShorlty",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, You need credentials\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									"pm.test(\"Valid response\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"WF_Import_AsAdmin_edited\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/schemes/{{schemeIdShorty}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"schemes",
								"{{schemeIdShorty}}"
							]
						},
						"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")"
					},
					"response": []
				}
			],
			"description": "Deletes an existing scheme (the response is async)\n\n@Path(\"/schemes/{schemeId}\")",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "systemActions",
			"item": [
				{
					"name": "Creates a Content Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"defaultType\":false,\n   \"fixed\":false,\n   \"system\":false,\n   \"clazz\":\"com.dotcms.contenttype.model.type.ImmutableSimpleContentType\",\n   \"description\":\"\",\n   \"host\":\"8a7d5e23-da1e-420a-b4f0-471e7da8ea2d\",\n   \"folder\":\"SYSTEM_FOLDER\",\n   \"name\":\"TestContentTypeSystemActions\",\n   \"systemActionMappings\":{\n      \"NEW\":\"ceca71a0-deee-4999-bd47-b01baa1bcfc8\"\n   },\n   \"workflow\":[\n      \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\"\n   ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/contenttype/",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"contenttype",
								""
							]
						},
						"description": "Creates a content type to associate a system workflow"
					},
					"response": []
				},
				{
					"name": "Create System Workflow Action for New Content Type",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"actionId\":\"b9d89c80-3d88-4311-8365-187323c96436\",\n\t\"systemAction\":\"EDIT\",\n\t\"contentTypeVariable\":\"TestContentTypeSystemActions\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/system/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"system",
								"actions"
							]
						},
						"description": "Create for the new content type a new mapping for EDIT"
					},
					"response": []
				},
				{
					"name": "Get Content Type System Actions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No errors\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors.length).to.eql(0);",
									"});",
									"",
									"pm.test(\"Return 2 items\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity.length).to.eql(2);",
									"});",
									"",
									"pm.test(\"Has New System Action\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity[0].systemAction).to.eql(\"NEW\");",
									"});",
									"",
									"pm.test(\"New  has a Save Action\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity[0].workflowAction.id).to.eql(\"ceca71a0-deee-4999-bd47-b01baa1bcfc8\");",
									"});",
									"",
									"pm.test(\"Has Edit System Action\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity[1].systemAction).to.eql(\"EDIT\");",
									"});",
									"",
									"pm.test(\"New  has a Save/Publish Action\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity[1].workflowAction.id).to.eql(\"b9d89c80-3d88-4311-8365-187323c96436\");",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/contenttypes/TestContentTypeSystemActions/system/actions",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"contenttypes",
								"TestContentTypeSystemActions",
								"system",
								"actions"
							]
						},
						"description": "Get the two content types"
					},
					"response": []
				},
				{
					"name": "Fires a default New Action",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No errors\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors.length).to.eql(0);",
									"});",
									"",
									"pm.test(\"Information Saved Correctly\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity.baseType).to.eql(\"CONTENT\");",
									"    pm.expect(jsonData.entity.contentType).to.eql(\"TestContentTypeSystemActions\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"comments\":\"Adding New Content type\",\n\t\"contentlet\": {\n\t\t\"contentType\":\"TestContentTypeSystemActions\"\n\t\t\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/NEW",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"NEW"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fires a default EDIT Action",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No errors\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors.length).to.eql(0);",
									"});",
									"",
									"pm.test(\"Information Saved Correctly\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity.baseType).to.eql(\"CONTENT\");",
									"    pm.expect(jsonData.entity.contentType).to.eql(\"TestContentTypeSystemActions\");",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"comments\":\"Adding New Content type\",\n\t\"contentlet\": {\n\t\t\"contentType\":\"TestContentTypeSystemActions\"\n\t\t\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/EDIT",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"EDIT"
							]
						},
						"description": "Fires an EDIT default action"
					},
					"response": []
				},
				{
					"name": "Fires a default PUBLISH Action ",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"No errors\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors.length).to.eql(0);",
									"});",
									"",
									"pm.test(\"Information Publish Correctly\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity.baseType).to.eql(\"CONTENT\");",
									"    pm.expect(jsonData.entity.contentType).to.eql(\"TestContentTypeSystemActions\");",
									"     pm.expect(jsonData.entity.live).to.eql(true);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"comments\":\"Adding New Content type\",\n\t\"contentlet\": {\n\t\t\"contentType\":\"TestContentTypeSystemActions\"\n\t\t\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							]
						},
						"description": "Fires an PUBLISH default action"
					},
					"response": []
				}
			]
		},
		{
			"name": "mergeAction",
			"item": [
				{
					"name": "AddMergeContentlet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Running test\")",
									"",
									"pm.test(\"No errors\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors.length).to.eql(0);",
									"});",
									"",
									"pm.test(\"Information Saved Correctly\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity.baseType).to.eql(\"CONTENT\");",
									"    pm.expect(jsonData.entity.contentType).to.eql(\"webPageContent\");",
									"});",
									"",
									"var requestcounter = pm.environment.get(\"requestcounter\");",
									"console.log(\"requestcounter #: \" + requestcounter)",
									"",
									"if(!requestcounter || requestcounter > 10) {",
									"",
									"    pm.environment.set(\"requestcounter\", 1);",
									"} else {",
									"",
									"    pm.environment.set(\"requestcounter\", requestcounter+1);",
									"}",
									"",
									"if (requestcounter <= 10) {",
									"    ",
									"    console.log(\"Calling AddMergeContentlet again #: \" + requestcounter)",
									"    postman.setNextRequest(\"AddMergeContentlet\");",
									"}",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"comments\":\"Adding New Generic content\",\n\t\"contentlet\": {\n\t\t\"contentType\":\"webPageContent\",\n        \"title\":\"Test Merge Content\",\n        \"body\":\"Test Merge Body\",\n\t\t\"contentHost\":\"default\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/NEW",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"NEW"
							]
						}
					},
					"response": []
				},
				{
					"name": "PublishMerge",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Running test\")",
									"",
									"pm.test(\"No errors\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors.length).to.eql(0);",
									"});",
									"",
									"pm.test(\"Information Saved Correctly\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity.summary.affected).to.above(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"comments\":\"Publish an existing Generic content\",\n    \"query\":\"+contentType:webPageContent AND title:\\\"Test Merge Content\\\"\",\n\t\"contentlet\": {\n        \"title\":\"Test Merge Content Published\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateNewGenericContentlet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Running test\")",
									"",
									"pm.test(\"No errors\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors.length).to.eql(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"contentlet\": {\n        \"contentType\":\"webPageContent\",\n        \"title\":\"Test title\",\n        \"body\":\"Test body\",\n        \"contentHost\":\"default\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/NEW",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"NEW"
							]
						}
					},
					"response": []
				},
				{
					"name": "PublishMergeIndividual",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Running test\")",
									"",
									"pm.test(\"No errors\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors.length).to.eql(0);",
									"});",
									"",
									"pm.test(\"Information Saved Correctly\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity.summary.affected).to.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"comments\":\"Publish an existing Generic content\",\n\t\"contentlet\": {\n        \"title\":\"Test Merge Content Published\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH?inode={{genericContentletInode}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							],
							"query": [
								{
									"key": "inode",
									"value": "{{genericContentletInode}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PublishMergeNotExists",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(\"Running test\")",
									"",
									"pm.test(\"No errors\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.errors.length).to.eql(0);",
									"});",
									"",
									"pm.test(\"Information Saved Correctly\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity.summary.affected).to.eql(1);",
									"});",
									"",
									"pm.test(\"Content Not Found\", function () {",
									"    ",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.entity.results[0].xxxx.errorMessage).to.eql(\"Content not found\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"comments\":\"Publish an existing Generic content\",\n\t\"contentlet\": {\n        \"title\":\"Test Merge Content Published\"\n\t}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH?inode=xxxx",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							],
							"query": [
								{
									"key": "inode",
									"value": "xxxx"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "serverURL",
			"value": "http://localhost:8080"
		},
		{
			"key": "actionId",
			"value": "47c38af4-209b-499a-9628-b2a8409cf03c"
		},
		{
			"key": "schemeId",
			"value": "2e96562e-495c-4a29-8cd1-0410608e9a65"
		},
		{
			"key": "schemeIdShorty",
			"value": "2e96562e49"
		},
		{
			"key": "stepId",
			"value": "1c156cd2-eb58-4b57-986b-dc728cc3ea09"
		},
		{
			"key": "stepIdShorty",
			"value": "1c156cd2eb"
		},
		{
			"key": "actionIdShorty",
			"value": "47c38af420"
		},
		{
			"key": "contentletIdentifier",
			"value": "6f88e2ed-71cb-49ad-90a4-8c74d906c3fe"
		},
		{
			"key": "contentletInode",
			"value": "94926188-341a-40a3-8422-03af9e3a3634"
		},
		{
			"key": "contentletIdShorty",
			"value": "14c31e4294"
		},
		{
			"key": "fireActionLanguageKey",
			"value": "SucessRequest1615939422"
		},
		{
			"key": "genericContentletInode",
			"value": "811e3dda-049f-48d9-a96c-10f0dc341047"
		}
	]
}