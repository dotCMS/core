{
	"info": {
		"_postman_id": "e4c02256-efdf-4443-b440-e9b6969ae17d",
		"name": "GraphQL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get content in new Language",
			"item": [
				{
					"name": "Create new Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "15429282-9992-4368-ae75-25dc04657fd5",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"languageId\", jsonData.entity.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"languageCode\":\"it\",\n\t\"language\":\"Italian\", \n\t\"countryCode\":\"IT\", \n\t\"country\":\"Italy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v2/languages",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v2",
								"languages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create ContentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "599e89fa-c26c-4a5c-b6cf-9283cf40ce40",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"contentTypeVariable\", jsonData.entity[0].variable);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"clazz\": \"com.dotcms.contenttype.model.type.SimpleContentType\",\n\t\"description\": \"My Structure\",\n\t\"defaultType\": false,\n\t\"system\": false,\n\t\"folder\": \"SYSTEM_FOLDER\",\n\t\"name\": \"My Custom Structure {{$randomBankAccount}}\",\n\t\"variable\": \"myStructure{{$randomBankAccount}}\",\n\t\"host\": \"SYSTEM_HOST\",\n\t\"fixed\": false,\n\t\"fields\": [\n\t\t{\n\t\t\t\"clazz\": \"com.dotcms.contenttype.model.field.TextField\",\n\t\t\t\"indexed\": true,\n\t\t\t\"dataType\": \"TEXT\",\n\t\t\t\"readOnly\": false,\n\t\t\t\"required\": true,\n\t\t\t\"searchable\": true,\n\t\t\t\"listed\": true,\n\t\t\t\"sortOrder\": 2,\n\t\t\t\"unique\": false,\n\t\t\t\"name\": \"Name\",\n\t\t\t\"variable\": \"name\",\n\t\t\t\"fixed\": true\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/contenttype",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"contenttype"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Content in new Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d39d847f-84cc-4777-a4ee-33610815b4c1",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"contentIdentifier\", jsonData.entity.identifier);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contentlet\": {\n       \"contentType\":\"{{contentTypeVariable}}\",\n       \"title\":\"Content in Italian\", \n       \"contentHost\":\"demo.dotcms.com\",\n       \"body\":\"This is a content in Italian\",\n       \"indexPolicy\":\"WAIT_FOR\",\n       \"languageId\":\"{{languageId}}\",\n       \"name\":\"whatever\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH?indexPolicy=wait_for",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							],
							"query": [
								{
									"key": "indexPolicy",
									"value": "wait_for"
								}
							]
						},
						"description": "This is to fire the added default action\n\nhttp://localhost:8080/api/v1/workflow/actions/default/fire/PUBLISH\n\nIn this case I'm using the \"test\" content type that just have a name filed (text)"
					},
					"response": []
				},
				{
					"name": "Get New Language Should Succeed",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "eb12ad0e-11d3-4593-8356-6972c0959cd6",
								"exec": [
									"pm.test(\"Content in new Language should be retrieved\", function () {",
									"    var jsonData = pm.response.json();",
									"    console.log(jsonData)",
									"    var contentIdentifier = pm.collectionVariables.get(\"contentIdentifier\")",
									"    var collectionName = pm.collectionVariables.get(\"contentTypeVariable\")+\"Collection\"",
									"    pm.expect(jsonData.data[collectionName][0].identifier).to.eql(contentIdentifier);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n  {{contentTypeVariable}}Collection(limit: 20) {\n    identifier\n    conLanguage {\n      id\n      languageCode\n      country\n      countryCode\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/graphql",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Test GraphQL Image Field fields ",
			"item": [
				{
					"name": "Create Image ContentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "599e89fa-c26c-4a5c-b6cf-9283cf40ce40",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"imageContentTypeVariable\", jsonData.entity[0].variable);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"defaultType\": false,\n  \"fixed\": false,\n  \"system\": false,\n  \"clazz\": \"com.dotcms.contenttype.model.type.ImmutableFileAssetContentType\",\n  \"description\": \"\",\n  \"host\": \"48190c8c-42c4-46af-8d1a-0cd5db894797\",\n  \"folder\": \"SYSTEM_FOLDER\",\n  \"name\": \"myImageType{{$randomBankAccount}}\",\n  \"systemActionMappings\": {\n    \"NEW\": \"\"\n  },\n  \"workflow\": [\n    \"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\"\n  ]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/contenttype",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"contenttype"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create ContentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "599e89fa-c26c-4a5c-b6cf-9283cf40ce40",
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.collectionVariables.set(\"contentTypeVariable\", jsonData.entity[0].variable);",
									"",
									"pm.collectionVariables.set(\"imageFieldVariable\", jsonData.entity[0].fields[1].variable);",
									"",
									"pm.collectionVariables.set(\"fileFieldVariable\", jsonData.entity[0].fields[2].variable);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"clazz\": \"com.dotcms.contenttype.model.type.SimpleContentType\",\n\t\"description\": \"My Type\",\n\t\"defaultType\": false,\n\t\"system\": false,\n\t\"folder\": \"SYSTEM_FOLDER\",\n\t\"name\": \"My Custom Type {{$randomBankAccount}}\",\n\t\"host\": \"SYSTEM_HOST\",\n\t\"fixed\": false,\n\t\"workflow\":[\"d61a59e1-a49c-46f2-a929-db2b4bfa88b2\"],\n\t\"fields\": [\n\t\t{\n\t\t\t\"clazz\": \"com.dotcms.contenttype.model.field.TextField\",\n\t\t\t\"indexed\": true,\n\t\t\t\"dataType\": \"TEXT\",\n\t\t\t\"readOnly\": false,\n\t\t\t\"required\": true,\n\t\t\t\"searchable\": true,\n\t\t\t\"listed\": true,\n\t\t\t\"sortOrder\": 1,\n\t\t\t\"unique\": false,\n\t\t\t\"name\": \"Name\",\n\t\t\t\"fixed\": true\n\t\t}, \n\t\t{\n              \"clazz\": \"com.dotcms.contenttype.model.field.ImmutableImageField\",\n              \"dataType\": \"TEXT\",\n              \"fieldType\": \"Image\",\n              \"fieldTypeLabel\": \"Image\",\n              \"fieldVariables\": [],\n              \"fixed\": false,\n              \"iDate\": 1585605564000,\n              \"indexed\": false,\n              \"listed\": false,\n              \"modDate\": 1585605564000,\n              \"name\": \"myImage\",\n              \"readOnly\": false,\n              \"required\": false,\n              \"searchable\": false,\n              \"sortOrder\": 2,\n              \"unique\": false\n       },\n\t   {\n\t\t      \"clazz\": \"com.dotcms.contenttype.model.field.ImmutableFileField\",\n\t\t      \"name\": \"myFile\",\n\t\t      \"required\": false,\n\t\t      \"hint\": \"\"\n\t   }\n\t]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/contenttype",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"contenttype"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Image Content",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d39d847f-84cc-4777-a4ee-33610815b4c1",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"imageContentIdentifier\", jsonData.entity.identifier);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "44a75151-9352-470d-a945-be432bcc14e3",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "json",
									"value": "{\n    \"contentlet\": {\n       \"contentType\":\"{{imageContentTypeVariable}}\",\n       \"title\":\"My Image\", \n       \"hostFolder\":\"demo.dotcms.com\",\n       \"indexPolicy\":\"WAIT_FOR\",\n       \"showOnMenu\":\"true\",\n       \"sortOrder\":2\n    }\n}",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "GraphQL/Test GraphQL Image Field fields /tommylee18005.jpeg"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							]
						},
						"description": "This is to fire the added default action\n\nhttp://localhost:8080/api/v1/workflow/actions/default/fire/PUBLISH\n\nIn this case I'm using the \"test\" content type that just have a name filed (text)"
					},
					"response": []
				},
				{
					"name": "Create File Content",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d39d847f-84cc-4777-a4ee-33610815b4c1",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"fileContentIdentifier\", jsonData.entity.identifier);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "json",
									"value": "{\n    \"contentlet\": {\n       \"contentType\":\"{{imageContentTypeVariable}}\",\n       \"title\":\"My Image\", \n       \"hostFolder\":\"demo.dotcms.com\",\n       \"indexPolicy\":\"WAIT_FOR\",\n       \"showOnMenu\":\"true\",\n       \"sortOrder\":\"2\"\n    }\n}",
									"type": "text"
								},
								{
									"key": "file",
									"type": "file",
									"src": "GraphQL/Test GraphQL Image Field fields /Readme18005.md"
								}
							],
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							]
						},
						"description": "This is to fire the added default action\n\nhttp://localhost:8080/api/v1/workflow/actions/default/fire/PUBLISH\n\nIn this case I'm using the \"test\" content type that just have a name filed (text)"
					},
					"response": []
				},
				{
					"name": "Create Content",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d39d847f-84cc-4777-a4ee-33610815b4c1",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"contentIdentifier\", jsonData.entity.identifier);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contentlet\": {\n       \"contentType\":\"{{contentTypeVariable}}\",\n       \"name\":\"Content With Image\", \n       \"contentHost\":\"demo.dotcms.com\",\n       \"indexPolicy\":\"WAIT_FOR\",\n       \"{{imageFieldVariable}}\":\"{{imageContentIdentifier}}\",\n       \"{{fileFieldVariable}}\":\"{{fileContentIdentifier}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							]
						},
						"description": "This is to fire the added default action\n\nhttp://localhost:8080/api/v1/workflow/actions/default/fire/PUBLISH\n\nIn this case I'm using the \"test\" content type that just have a name filed (text)"
					},
					"response": []
				},
				{
					"name": "Request content with Image field",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ad7d33a0-ba48-4d15-9b92-6866ec93c006",
								"exec": [
									"var jsonData = pm.response.json();",
									"var imageFieldVariable = pm.collectionVariables.get(\"imageFieldVariable\");",
									"var fileFieldVariable = pm.collectionVariables.get(\"fileFieldVariable\");",
									"var jsonData = pm.response.json();",
									"var contentIdentifier = pm.collectionVariables.get(\"contentIdentifier\")",
									"var collectionName = pm.collectionVariables.get(\"contentTypeVariable\")+\"Collection\"",
									"",
									"pm.test(\"Image Field attributes should be present\", function () {",
									"     // image field",
									"    var imageFieldJson = jsonData.data[collectionName][0][imageFieldVariable];",
									"    ",
									"    // general attributes",
									"    pm.expect(imageFieldJson.fileName).to.eql(\"tommylee18005.jpeg\");",
									"    pm.expect(imageFieldJson.description).to.eql(\"tommylee18005\");",
									"    pm.expect(imageFieldJson.sortOrder).to.eql(2);",
									"    pm.expect(imageFieldJson.showOnMenu[0]).to.eql(\"true\");",
									"    ",
									"    // fileAsset",
									"    pm.expect(imageFieldJson.fileAsset.name).to.eql(\"tommylee18005.jpeg\");",
									"    pm.expect(imageFieldJson.fileAsset.size).to.eql(5494);",
									"    pm.expect(imageFieldJson.fileAsset.mime).to.eql(\"image/jpeg\");",
									"    ",
									"    // metaData",
									"    pm.expect(imageFieldJson.metaData.length).to.eql(6);",
									"    pm.expect(hasProperty(imageFieldJson.metaData, \"fileSize\", \"5494\")).to.be.true;",
									"    pm.expect(hasProperty(imageFieldJson.metaData, \"length\", \"5494\")).to.be.true;",
									"    pm.expect(hasProperty(imageFieldJson.metaData, \"width\", \"139\")).to.be.true;",
									"    pm.expect(hasProperty(imageFieldJson.metaData, \"contentType\", \"image/jpeg\")).to.be.true;",
									"    pm.expect(hasProperty(imageFieldJson.metaData, \"content\", \"\")).to.be.true;",
									"    pm.expect(hasProperty(imageFieldJson.metaData, \"height\", \"186\")).to.be.true;",
									"",
									"    ",
									"    ",
									"});",
									"",
									"pm.test(\"File Field attributes should be present\", function () {",
									"     // File field",
									"    var fileFieldJson = jsonData.data[collectionName][0][fileFieldVariable];",
									"    ",
									"    // general attributes",
									"    pm.expect(fileFieldJson.fileName).to.eql(\"Readme18005.md\");",
									"    pm.expect(fileFieldJson.description).to.eql(\"Readme18005\");",
									"    pm.expect(fileFieldJson.sortOrder).to.eql(2);",
									"    pm.expect(fileFieldJson.showOnMenu[0]).to.eql(\"true\");",
									"    ",
									"    // fileAsset",
									"    pm.expect(fileFieldJson.fileAsset.name).to.eql(\"Readme18005.md\");",
									"    pm.expect(fileFieldJson.fileAsset.size).to.eql(2260);",
									"    pm.expect(fileFieldJson.fileAsset.mime).to.be.null;",
									"    ",
									"    pm.expect(fileFieldJson.metaData.length).to.eql(4);",
									"    ",
									"    pm.expect(hasProperty(fileFieldJson.metaData, \"fileSize\", \"2260\")).to.be.true;",
									"    pm.expect(hasProperty(fileFieldJson.metaData, \"length\", \"2260\")).to.be.true;",
									"    pm.expect(hasProperty(fileFieldJson.metaData, \"contentType\", \"text/plain; charset=ISO-8859-1\")).to.be.true;",
									"    pm.expect(hasProperty(fileFieldJson.metaData, \"How to run the REST endpoints tests\", \"\")).to.be.true;",
									"    ",
									"});",
									"",
									"function hasProperty(metaData, name, value) {",
									"        var hasProperty = false;",
									"        metaData.forEach(function (item) {",
									"            if(item.key==name && item.value==value) {",
									"                hasProperty = true;",
									"            }",
									"        });",
									"",
									"        return hasProperty;",
									"    }",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n  {{contentTypeVariable}}Collection(limit: 20) {\n    myImage {\n      fileName\n      description\n      sortOrder\n      showOnMenu\n      \n      fileAsset {\n        name\n        size\n        mime\n      }\n      metaData {\n        key\n        value\n      }\n      description\n    }\n    \n    myFile {\n      fileName\n      description\n      sortOrder\n      showOnMenu\n      \n      fileAsset {\n        name\n        size\n        mime\n      }\n      metaData {\n        key\n        value\n      }\n      description\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/graphql",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"description": "This test that the custom type Image contains the expecte fields.\nExpected fields:\n\n* fileName\n* description\n* fileAsset (Composed/Custom Type. see Binary type on our GraphQL doc)\n* metaData (Custom Type. See Key Value type on our GraphQL doc)\n* showOnMenu\n* sortOrder",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Related content respects language in query for parent",
			"item": [
				{
					"name": "Create new Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "8a5f7d79-1a4f-4c26-91d5-02af64120c41",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"languageId\", jsonData.entity.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"languageCode\":\"it\",\n\t\"language\":\"Italian\", \n\t\"countryCode\":\"IT\", \n\t\"country\":\"Italy\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v2/languages",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v2",
								"languages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Child ContentType",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "613a34d7-d03d-435d-8151-d7df48524be2",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"childContentTypeVariable\", jsonData.entity[0].variable);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"clazz\": \"com.dotcms.contenttype.model.type.SimpleContentType\",\n\t\"description\": \"Child type\",\n\t\"defaultType\": false,\n\t\"system\": false,\n\t\"folder\": \"SYSTEM_FOLDER\",\n\t\"name\": \"My Custom Child Type {{$randomBankAccount}}\",\n\t\"variable\": \"childType{{$randomBankAccount}}\",\n\t\"host\": \"SYSTEM_HOST\",\n\t\"fixed\": false,\n\t\"fields\": [\n\t\t{\n\t\t\t\"clazz\": \"com.dotcms.contenttype.model.field.TextField\",\n\t\t\t\"indexed\": true,\n\t\t\t\"dataType\": \"TEXT\",\n\t\t\t\"readOnly\": false,\n\t\t\t\"required\": true,\n\t\t\t\"searchable\": true,\n\t\t\t\"listed\": true,\n\t\t\t\"sortOrder\": 2,\n\t\t\t\"unique\": false,\n\t\t\t\"name\": \"Name\",\n\t\t\t\"variable\": \"name\",\n\t\t\t\"fixed\": true\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/contenttype",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"contenttype"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Parent ContentType with Rel Field to Child",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ce3e7469-4883-4c1f-8d5b-c96cb39f8f8c",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"parentContentTypeVariable\", jsonData.entity[0].variable);",
									"pm.collectionVariables.set(\"relFieldVariable\", jsonData.entity[0].fields[1].variable);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"clazz\": \"com.dotcms.contenttype.model.type.SimpleContentType\",\n\t\"description\": \"My Parent Type\",\n\t\"defaultType\": false,\n\t\"system\": false,\n\t\"folder\": \"SYSTEM_FOLDER\",\n\t\"name\": \"My Custom Parent Type {{$randomBankAccount}}\",\n\t\"variable\": \"parentType{{$randomBankAccount}}\",\n\t\"host\": \"SYSTEM_HOST\",\n\t\"fixed\": false,\n\t\"fields\": [\n\t\t{\n\t\t\t\"clazz\": \"com.dotcms.contenttype.model.field.TextField\",\n\t\t\t\"indexed\": true,\n\t\t\t\"dataType\": \"TEXT\",\n\t\t\t\"readOnly\": false,\n\t\t\t\"required\": true,\n\t\t\t\"searchable\": true,\n\t\t\t\"listed\": true,\n\t\t\t\"sortOrder\": 2,\n\t\t\t\"unique\": false,\n\t\t\t\"name\": \"Name\",\n\t\t\t\"variable\": \"name\",\n\t\t\t\"fixed\": true\n\t\t}, \n\t\t{\n\t\t     \"clazz\":\"com.dotcms.contenttype.model.field.ImmutableRelationshipField\",\n\t\t     \"required\":false,\n\t\t     \"name\":\"rel\",\n\t\t     \"relationships\":{\n\t\t        \"velocityVar\":\"{{childContentTypeVariable}}\",\n\t\t        \"cardinality\":0\n\t\t     },\n\t\t     \"searchable\":false\n\t\t}\n\t]\n}"
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/contenttype",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"contenttype"
							]
						}
					},
					"response": []
				},
				{
					"name": "Save Child Content in new Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bfbc43af-3428-4503-bf17-de462b161d8c",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"childContentIdentifier\", jsonData.entity.identifier);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contentlet\": {\n       \"contentType\":\"{{childContentTypeVariable}}\",\n       \"title\":\"Child Content in New Language\", \n       \"contentHost\":\"demo.dotcms.com\",\n       \"body\":\"Child Content in New Language\",\n       \"indexPolicy\":\"WAIT_FOR\",\n       \"languageId\":\"{{languageId}}\",\n       \"name\":\"Child Content in New Language\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH?indexPolicy=wait_for",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							],
							"query": [
								{
									"key": "indexPolicy",
									"value": "wait_for"
								}
							]
						},
						"description": "This is to fire the added default action\n\nhttp://localhost:8080/api/v1/workflow/actions/default/fire/PUBLISH\n\nIn this case I'm using the \"test\" content type that just have a name filed (text)"
					},
					"response": []
				},
				{
					"name": "Save Parent Content with related Child in new Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dff742a8-5027-4c0f-9480-516e38dfc047",
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.collectionVariables.set(\"parentContentIdentifier\", jsonData.entity.identifier);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"contentlet\": {\n       \"contentType\":\"{{parentContentTypeVariable}}\",\n       \"title\":\"Parent Content in New Language\", \n       \"contentHost\":\"demo.dotcms.com\",\n       \"body\":\"Parent Content in New Language\",\n       \"indexPolicy\":\"WAIT_FOR\",\n       \"languageId\":\"{{languageId}}\",\n       \"name\":\"Parent Content in New Language\",\n       \"{{relFieldVariable}}\":\"{{childContentIdentifier}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/workflow/actions/default/fire/PUBLISH?indexPolicy=wait_for",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"workflow",
								"actions",
								"default",
								"fire",
								"PUBLISH"
							],
							"query": [
								{
									"key": "indexPolicy",
									"value": "wait_for"
								}
							]
						},
						"description": "This is to fire the added default action\n\nhttp://localhost:8080/api/v1/workflow/actions/default/fire/PUBLISH\n\nIn this case I'm using the \"test\" content type that just have a name filed (text)"
					},
					"response": []
				},
				{
					"name": "Get Related Content should return content in parents Language",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d5d3d9f-9766-4c84-a2f3-2b601d3c48c5",
								"exec": [
									"pm.test(\"Content parent and child content returned in requested language\", function () {",
									"    var jsonData = pm.response.json();",
									"    ",
									"    ",
									"    var parentIdentifier = pm.collectionVariables.get(\"parentContentIdentifier\")",
									"    var childIdentifier = pm.collectionVariables.get(\"childContentIdentifier\")",
									"    var languageId = pm.collectionVariables.get(\"languageId\")",
									"    ",
									"    var collectionName = pm.collectionVariables.get(\"parentContentTypeVariable\")+\"Collection\"",
									"    pm.expect(jsonData.data[collectionName][0].identifier).to.eql(parentIdentifier);",
									"    pm.expect(jsonData.data[collectionName][0].rel[0].identifier).to.eql(childIdentifier);",
									"    pm.expect(jsonData.data[collectionName][0].rel[0].conLanguage.id).to.eql(languageId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "{\n  {{parentContentTypeVariable}}Collection(query:\"+languageId:{{languageId}}\", limit: 20) {\n    identifier\n    {{relFieldVariable}} {\n        identifier\n        conLanguage {\n            id\n            languageCode\n            country\n            countryCode\n        }\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/graphql",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"graphql"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"variable": [
		{
			"id": "030afd7c-3e49-4d20-9838-cdd79c6cb151",
			"key": "languageId",
			"value": 1592344965881,
			"type": "number"
		},
		{
			"id": "f1c1fc18-5965-4ddc-babb-f1bbc1ccf71f",
			"key": "contentId",
			"value": null,
			"type": "any"
		},
		{
			"id": "95c7a647-40c5-4281-bfbd-045b01b362fa",
			"key": "contentTypeVariable",
			"value": "MyCustomType04435502",
			"type": "string"
		},
		{
			"id": "8b601674-54c2-4cc9-b95d-5f8dd7476ad4",
			"key": "contentIdentifier",
			"value": "6671180f-c0e0-4419-b995-af851738f87e",
			"type": "string"
		},
		{
			"id": "26133ad8-24cc-4201-ad8a-0dc4372a73eb",
			"key": "structureVariable",
			"value": "myStructure94983807",
			"type": "string"
		},
		{
			"id": "020f75ff-eb98-44b6-a782-218701285e79",
			"key": "imageContentTypeVariable",
			"value": "MyImageType12648465",
			"type": "string"
		},
		{
			"id": "25c3fcd6-1401-4da7-9350-9118893a0c07",
			"key": "imageContentIdentifier",
			"value": "0bcb8b89-cf47-4e44-98a0-a83cd7172471",
			"type": "string"
		},
		{
			"id": "038e4397-19d3-4d12-a432-48244288f8a3",
			"key": "imageFieldVariable",
			"value": "myImage",
			"type": "string"
		},
		{
			"id": "c2d95fa2-d847-4548-90c3-b787fda983a1",
			"key": "showOnMenu",
			"value": true,
			"type": "boolean"
		},
		{
			"id": "c5b60cef-c338-42da-833b-02226f169312",
			"key": "sortOrder",
			"value": 2,
			"type": "number"
		},
		{
			"id": "2a27ff55-8172-4f52-92a7-03a1a2ab03e5",
			"key": "fileFieldVariable",
			"value": "myFile",
			"type": "string"
		},
		{
			"id": "4ccbdc32-c46a-407f-9639-902ba20e2afe",
			"key": "fileContentIdentifier",
			"value": "0d55229d-1722-4b39-9ca5-7a9532b2b8aa",
			"type": "string"
		},
		{
			"id": "70c8d557-5b38-4c9a-9d4f-25866acdec7b",
			"key": "childContentTypeVariable",
			"value": "childType35543008",
			"type": "string"
		},
		{
			"id": "95788299-e84f-49b6-8559-2a3abb43a3c6",
			"key": "parentContentTypeVariable",
			"value": "parentType67172229",
			"type": "string"
		},
		{
			"id": "6a5cf7da-1f8c-45a9-8b9a-db58831c2538",
			"key": "relFieldVariable",
			"value": "rel",
			"type": "string"
		},
		{
			"id": "deb8e953-e041-4227-84ed-2e07323e68be",
			"key": "childContentIdentifier",
			"value": "fd292a50-e913-4974-9833-525345883311",
			"type": "string"
		},
		{
			"id": "4d46c788-93d7-4ac6-ac1d-20f47b606f88",
			"key": "parentContentIdentifier",
			"value": "4248d7bd-9a72-413a-85fc-dd80eeb10335",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}