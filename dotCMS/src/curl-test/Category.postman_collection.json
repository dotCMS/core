{
	"info": {
		"_postman_id": "d44023d0-b70c-4003-b122-ff6d56ab1f53",
		"name": "Category",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create New Category without parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Information Saved Correctly\", function () {",
							"    ",
							"    pm.expect(jsonData.entity.categoryName).to.eql(\"Test Category\");",
							"});",
							"",
							"pm.collectionVariables.set(\"inode\", jsonData.entity.inode);",
							"pm.collectionVariables.set(\"categoryINodeId\", jsonData.entity.inode);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"key\":\"Test key\",\n    \"categoryName\" : \"Test Category\",\n    \"keywords\":\"This is a test category\",\n    \"categoryVelocityVarName\" : \"TestKey\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/categories",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Category with parent",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Information Saved Correctly\", function () {",
							"    ",
							"    pm.expect(jsonData.entity.categoryName).to.eql(\"Child Test Category\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"key\":\"Child test key\",\n    \"categoryName\" : \"Child Test Category\",\n    \"keywords\":\"This is a child test category\",\n    \"categoryVelocityVarName\" : \"ChildTestKey\",\n    \"parent\" : \"{{categoryINodeId}}\"\n}\n\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/categories",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Category without name BadRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Category name required message\", function () {",
							"    ",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.message).to.eq(\"The category name is required\");  ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"key\":\"Child test key\",\n    \"keywords\":\"This is a child test category\",\n    \"categoryVelocityVarName\" : \"ChildTestKey\",\n    \"parent\" : \"{{categoryINodeId}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/categories",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"categories"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get children categories by inode (aka Parent id) - Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Fetch successfully without errors\", function () {",
							"    pm.expect(jsonData.errors).to.have.lengthOf(0);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/categories/children?filter=&page=0&per_page=5&ordeby=&direction=&inode={{categoryINodeId}}",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"categories",
						"children"
					],
					"query": [
						{
							"key": "filter",
							"value": ""
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "per_page",
							"value": "5"
						},
						{
							"key": "ordeby",
							"value": ""
						},
						{
							"key": "direction",
							"value": ""
						},
						{
							"key": "inode",
							"value": "{{categoryINodeId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get children categories without inode - BadRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be ok 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"Fetch successfully with error message\", function () {",
							"      pm.expect(jsonData.message).to.eq(\"The inode is required\");  ",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{serverURL}}/api/v1/categories/children?filter=&page=0&per_page=5&ordeby=&direction=&inode=",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"categories",
						"children"
					],
					"query": [
						{
							"key": "filter",
							"value": ""
						},
						{
							"key": "page",
							"value": "0"
						},
						{
							"key": "per_page",
							"value": "5"
						},
						{
							"key": "ordeby",
							"value": ""
						},
						{
							"key": "direction",
							"value": ""
						},
						{
							"key": "inode",
							"value": ""
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "templateIdToEdit",
			"value": ""
		},
		{
			"key": "inode",
			"value": ""
		},
		{
			"key": "categoryINodeId",
			"value": ""
		}
	]
}