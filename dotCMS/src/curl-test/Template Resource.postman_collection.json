{
	"info": {
		"_postman_id": "f1b68892-74c5-40dc-9e3d-fd8fa901b988",
		"name": "Template Resource",
		"description": "Make the test for the template resource crud",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Archive",
			"item": [
				{
					"name": "Create New Template to Archive",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"body check\", function () {",
									"    pm.expect(jsonData.entity.body).to.eql('This is the body');",
									"});",
									"",
									"pm.test(\"friendlyName check\", function () {",
									"    pm.expect(jsonData.entity.friendlyName).to.eql('This is a postman test description');",
									"});",
									"",
									"pm.test(\"Title check\", function () {",
									"    pm.expect(jsonData.entity.title).to.eql('PostMan Test');",
									"});",
									"",
									"pm.collectionVariables.set(\"templateIdToArchive\", jsonData.entity.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"PostMan Test\",\n    \"friendlyName\":\"This is a postman test description\",\n    \"body\":\"This is the body\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Creates a new template and sets the id as a variable for further use."
					},
					"response": []
				},
				{
					"name": "Archive Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Archive Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Archive Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToArchive}}\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_archive",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_archive"
							]
						},
						"description": "Archive one template successfully"
					},
					"response": []
				},
				{
					"name": "Get Template Archived True",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Deleted Check\", function () {",
									"    pm.expect(jsonData.entity[0].deleted).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter={{templateIdToArchive}}&archive=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "{{templateIdToArchive}}"
								},
								{
									"key": "archive",
									"value": "true"
								}
							]
						},
						"description": "Gets a template using the id as a filter and since the template is archived we need to pass the archive flag.\nChecks that the deleted property is set to true."
					},
					"response": []
				},
				{
					"name": "Re-Archive Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Archive Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Archive Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToArchive}}\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_archive",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_archive"
							]
						},
						"description": "Archive one template successfully"
					},
					"response": []
				},
				{
					"name": "Get Template Archived True",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Deleted Check\", function () {",
									"    pm.expect(jsonData.entity[0].deleted).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter={{templateIdToArchive}}&archive=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "{{templateIdToArchive}}"
								},
								{
									"key": "archive",
									"value": "true"
								}
							]
						},
						"description": "Gets a template using the id as a filter and since the template is archived we need to pass the archive flag. \nChecks that the deleted property is set to true."
					},
					"response": []
				},
				{
					"name": "Archive Template Failed To Archive Id Not Exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Archive Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(0);",
									"});",
									"",
									"pm.test(\"Failed To Archive Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_archive",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_archive"
							]
						},
						"description": "Tries to Archive one template but the id does not exist, so it must fail. Since this action is exec as bulk that is why does not throw 404"
					},
					"response": []
				}
			],
			"description": "Tests for the archive action",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Unarchive",
			"item": [
				{
					"name": "Create New Template to Unarchive",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"body check\", function () {",
									"    pm.expect(jsonData.entity.body).to.eql('This is the body');",
									"});",
									"",
									"pm.test(\"friendlyName check\", function () {",
									"    pm.expect(jsonData.entity.friendlyName).to.eql('This is a postman test description');",
									"});",
									"",
									"pm.test(\"Title check\", function () {",
									"    pm.expect(jsonData.entity.title).to.eql('PostMan Test');",
									"});",
									"",
									"pm.collectionVariables.set(\"templateIdToUnArchive\", jsonData.entity.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"PostMan Test\",\n    \"friendlyName\":\"This is a postman test description\",\n    \"body\":\"This is the body\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Creates a new template and sets the id as a variable for further use."
					},
					"response": []
				},
				{
					"name": "UnArchive Template Failed to Unarchive Template is not Archived",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Unarchive Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(0);",
									"});",
									"",
									"pm.test(\"Failed To Unarchive Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToUnArchive}}\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_unarchive",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_unarchive"
							]
						},
						"description": "Unarchive one template but since the template is not archived it can not be unarchived."
					},
					"response": []
				},
				{
					"name": "UnArchive Template Failed to Unarchive Id Not Exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Unarchive Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(0);",
									"});",
									"",
									"pm.test(\"Failed To Unarchive Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_unarchive",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_unarchive"
							]
						},
						"description": "Tries to unarchive a template but since the id does not belong to any template, it fails."
					},
					"response": []
				},
				{
					"name": "Archive Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Archive Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Archive Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToUnArchive}}\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_archive",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_archive"
							]
						},
						"description": "Archive one template successfully"
					},
					"response": []
				},
				{
					"name": "Get Template Archived True",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Deleted Check\", function () {",
									"    pm.expect(jsonData.entity[0].deleted).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter={{templateIdToUnArchive}}&archive=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "{{templateIdToUnArchive}}"
								},
								{
									"key": "archive",
									"value": "true"
								}
							]
						},
						"description": "Gets a template using the id as a filter and since the template is archived we need to pass the archive flag. Checks that the deleted property is set to true."
					},
					"response": []
				},
				{
					"name": "UnArchive Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Unarchive Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Unarchive Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToUnArchive}}\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_unarchive",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_unarchive"
							]
						},
						"description": "Unarchive one template successfully"
					},
					"response": []
				},
				{
					"name": "Get Template Archived False",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Deleted Check\", function () {",
									"    pm.expect(jsonData.entity[0].deleted).to.eql(false);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter={{templateIdToUnArchive}}&archive=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "{{templateIdToUnArchive}}"
								},
								{
									"key": "archive",
									"value": "true"
								}
							]
						},
						"description": "Gets a template using the id as a filter and since the template could archived we need to pass the archive flag. Checks that the deleted property is set to false."
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "Create New Template to Delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"body check\", function () {",
									"    pm.expect(jsonData.entity.body).to.eql('This is the body');",
									"});",
									"",
									"pm.test(\"friendlyName check\", function () {",
									"    pm.expect(jsonData.entity.friendlyName).to.eql('This is a postman test description');",
									"});",
									"",
									"pm.test(\"Title check\", function () {",
									"    pm.expect(jsonData.entity.title).to.eql('PostMan Test');",
									"});",
									"",
									"pm.collectionVariables.set(\"templateIdToDelete\", jsonData.entity.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"PostMan Test\",\n    \"friendlyName\":\"This is a postman test description\",\n    \"body\":\"This is the body\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Creates a new template and sets the id as a variable for further use."
					},
					"response": []
				},
				{
					"name": "Delete Template Failed To Delete Template is not Archived",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Delete Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(0);",
									"});",
									"",
									"pm.test(\"Failed To Delete Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToDelete}}\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Tries to delete a template that is not archived, so it fails."
					},
					"response": []
				},
				{
					"name": "Archive Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Archive Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Archive Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToDelete}}\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_archive",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_archive"
							]
						},
						"description": "Archive one template successfully"
					},
					"response": []
				},
				{
					"name": "Get Template Archived True",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Deleted Check\", function () {",
									"    pm.expect(jsonData.entity[0].deleted).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter={{templateIdToDelete}}&archive=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "{{templateIdToDelete}}"
								},
								{
									"key": "archive",
									"value": "true"
								}
							]
						},
						"description": "Gets a template using the id as a filter and since the template is archived we need to pass the archive flag. Checks that the deleted property is set to true."
					},
					"response": []
				},
				{
					"name": "Delete Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Delete Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Delete Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToDelete}}\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Delete a template successfully"
					},
					"response": []
				},
				{
					"name": "Delete Template Failed To Delete Template Id Not Exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Delete Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(0);",
									"});",
									"",
									"pm.test(\"Failed To Delete Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToDelete}}\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Tries to delete a template but the id passed does not belong to any template so it fails."
					},
					"response": []
				}
			]
		},
		{
			"name": "Publish",
			"item": [
				{
					"name": "Create New Template to Publish",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"body check\", function () {",
									"    pm.expect(jsonData.entity.body).to.eql('This is the body');",
									"});",
									"",
									"pm.test(\"friendlyName check\", function () {",
									"    pm.expect(jsonData.entity.friendlyName).to.eql('This is a postman test description');",
									"});",
									"",
									"pm.test(\"Title check\", function () {",
									"    pm.expect(jsonData.entity.title).to.eql('PostMan Test');",
									"});",
									"",
									"pm.collectionVariables.set(\"templateIdToPublish\", jsonData.entity.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"PostMan Test\",\n    \"friendlyName\":\"This is a postman test description\",\n    \"body\":\"This is the body\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Creates a new template and sets the id as a variable for further use."
					},
					"response": []
				},
				{
					"name": "Archive Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Archive Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Archive Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToPublish}}\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_archive",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_archive"
							]
						},
						"description": "Archive one template successfully"
					},
					"response": []
				},
				{
					"name": "Get Template Archived True",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Deleted Check\", function () {",
									"    pm.expect(jsonData.entity[0].deleted).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter={{templateIdToPublish}}&archive=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "{{templateIdToPublish}}"
								},
								{
									"key": "archive",
									"value": "true"
								}
							]
						},
						"description": "Gets a template using the id as a filter and since the template is archived we need to pass the archive flag. Checks that the deleted property is set to true."
					},
					"response": []
				},
				{
					"name": "Publish Template Failed To Publish Template is Archived",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Publish Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(0);",
									"});",
									"",
									"pm.test(\"Failed To Publish Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(1);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToPublish}}\"]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_publish",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_publish"
							]
						},
						"description": "Tries to publish a template that is archived, it must be working or live to be published. So it fails"
					},
					"response": []
				},
				{
					"name": "UnArchive Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Unarchive Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Unarchive Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToPublish}}\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_unarchive",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_unarchive"
							]
						},
						"description": "Unarchive one template successfully"
					},
					"response": []
				},
				{
					"name": "Get Template Archived False",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Deleted Check\", function () {",
									"    pm.expect(jsonData.entity[0].deleted).to.eql(false);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter={{templateIdToPublish}}&archive=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "{{templateIdToPublish}}"
								},
								{
									"key": "archive",
									"value": "true"
								}
							]
						},
						"description": "Gets a template using the id as a filter and since the template is archived we need to pass the archive flag. Checks that the deleted property is set to false."
					},
					"response": []
				},
				{
					"name": "Get Template hasLiveVersion False",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Has Live Version Check\", function () {",
									"    pm.expect(jsonData.entity[0].hasLiveVersion).to.eql(false);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter={{templateIdToPublish}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "{{templateIdToPublish}}"
								}
							]
						},
						"description": "Gets a template using the id as a filter. Check that does not have live version."
					},
					"response": []
				},
				{
					"name": "Publish Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Publish Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Publish Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToPublish}}\"]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_publish",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_publish"
							]
						},
						"description": "Publish a template successfully"
					},
					"response": []
				},
				{
					"name": "Get Template hasLiveVersion True",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Has Live Version Check\", function () {",
									"    pm.expect(jsonData.entity[0].hasLiveVersion).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter={{templateIdToPublish}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "{{templateIdToPublish}}"
								}
							]
						},
						"description": "Gets a template using the id as a filter. Checks that the template has a live version."
					},
					"response": []
				},
				{
					"name": "Re-Publish Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Publish Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Publish Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToPublish}}\"]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_publish",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_publish"
							]
						},
						"description": "Publish a template successfully"
					},
					"response": []
				},
				{
					"name": "Publish Template Failed To Publish Id Not Exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Publish Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(0);",
									"});",
									"",
									"pm.test(\"Failed To Publish Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(1);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa\"]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_publish",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_publish"
							]
						},
						"description": "Tries to publish a template but the id passed does not belong to any template so it fails."
					},
					"response": []
				}
			]
		},
		{
			"name": "Unpublish",
			"item": [
				{
					"name": "Create New Template to Unpublish",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"body check\", function () {",
									"    pm.expect(jsonData.entity.body).to.eql('This is the body');",
									"});",
									"",
									"pm.test(\"friendlyName check\", function () {",
									"    pm.expect(jsonData.entity.friendlyName).to.eql('This is a postman test description');",
									"});",
									"",
									"pm.test(\"Title check\", function () {",
									"    pm.expect(jsonData.entity.title).to.eql('PostMan Test');",
									"});",
									"",
									"pm.collectionVariables.set(\"templateIdToUnpublish\", jsonData.entity.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"PostMan Test\",\n    \"friendlyName\":\"This is a postman test description\",\n    \"body\":\"This is the body\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Creates a new template"
					},
					"response": []
				},
				{
					"name": "Archive Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Archive Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Archive Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToUnpublish}}\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_archive",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_archive"
							]
						},
						"description": "Archive one template successfully"
					},
					"response": []
				},
				{
					"name": "Get Template Archived True",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Deleted Check\", function () {",
									"    pm.expect(jsonData.entity[0].deleted).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter={{templateIdToUnpublish}}&archive=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "{{templateIdToUnpublish}}"
								},
								{
									"key": "archive",
									"value": "true"
								}
							]
						},
						"description": "Gets a template using the id as a filter and since the template is archived we need to pass the archive flag. Checks that the deleted property is set to true."
					},
					"response": []
				},
				{
					"name": "Unpublish Template Failed To Unpublish is Archived",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Unpublish Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(0);",
									"});",
									"",
									"pm.test(\"Failed To Unpublish Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(1);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToUnpublish}}\"]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_unpublish",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_unpublish"
							]
						},
						"description": "Tries to unpublish a template that is archived. So it fails"
					},
					"response": []
				},
				{
					"name": "UnArchive Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Unarchive Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Unarchive Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToUnpublish}}\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_unarchive",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_unarchive"
							]
						},
						"description": "Archive one template successfully"
					},
					"response": []
				},
				{
					"name": "Get Template Archived False",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Deleted Check\", function () {",
									"    pm.expect(jsonData.entity[0].deleted).to.eql(false);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter={{templateIdToUnpublish}}&archive=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "{{templateIdToUnpublish}}"
								},
								{
									"key": "archive",
									"value": "true"
								}
							]
						},
						"description": "Gets a template using the id as a filter and since the template could archived we need to pass the archive flag. Checks that the deleted property is set to false."
					},
					"response": []
				},
				{
					"name": "Publish Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Publish Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Publish Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToUnpublish}}\"]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_publish",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_publish"
							]
						},
						"description": "Publish a template successfully"
					},
					"response": []
				},
				{
					"name": "Get Template hasLiveVersion True",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Has Live Version Check\", function () {",
									"    pm.expect(jsonData.entity[0].hasLiveVersion).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter={{templateIdToUnpublish}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "{{templateIdToUnpublish}}"
								}
							]
						},
						"description": "Gets a template using the id as a filter. Check that does have live version."
					},
					"response": []
				},
				{
					"name": "Unpublish Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Unpublish Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Unpublish Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToUnpublish}}\"]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_unpublish",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_unpublish"
							]
						},
						"description": "Unpublish a template successfully"
					},
					"response": []
				},
				{
					"name": "Get Template hasLiveVersion False",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Has Live Version Check\", function () {",
									"    pm.expect(jsonData.entity[0].hasLiveVersion).to.eql(false);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter={{templateIdToUnpublish}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "{{templateIdToUnpublish}}"
								}
							]
						},
						"description": "Gets a template using the id as a filter. Check that does not have live version."
					},
					"response": []
				},
				{
					"name": "Re-Unpublish Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Publish Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Publish Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToUnpublish}}\"]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_unpublish",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_unpublish"
							]
						},
						"description": "Unpublish a template successfully."
					},
					"response": []
				},
				{
					"name": "Unpublish Template Failed To Unpublish Id Not Exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Publish Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(0);",
									"});",
									"",
									"pm.test(\"Failed To Publish Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(1);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa\"]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_unpublish",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_unpublish"
							]
						},
						"description": "Tries to unpublish a template but the id passed does not belong to any template so it fails."
					},
					"response": []
				}
			]
		},
		{
			"name": "Copy",
			"item": [
				{
					"name": "Create New Template to Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"body check\", function () {",
									"    pm.expect(jsonData.entity.body).to.eql('This is the body');",
									"});",
									"",
									"pm.test(\"friendlyName check\", function () {",
									"    pm.expect(jsonData.entity.friendlyName).to.eql('This is a postman test description');",
									"});",
									"",
									"pm.test(\"Title check\", function () {",
									"    pm.expect(jsonData.entity.title).to.eql('PostMan Test');",
									"});",
									"",
									"pm.collectionVariables.set(\"templateIdToCopy\", jsonData.entity.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"PostMan Test\",\n    \"friendlyName\":\"This is a postman test description\",\n    \"body\":\"This is the body\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Creates a new template and sets the id as a variable for further use."
					},
					"response": []
				},
				{
					"name": "Copy Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Title check\", function () {",
									"    pm.expect(pm.response.json().entity.title).to.be.eql('PostMan Test - 1');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{temporaryInode}}\"]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/{{templateIdToCopy}}/_copy",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"{{templateIdToCopy}}",
								"_copy"
							]
						},
						"description": "Copies the template"
					},
					"response": []
				},
				{
					"name": "Copy Template Failed To Copy Id Not Exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code should be ok 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToPublish}}\"]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/_copy",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa",
								"_copy"
							]
						},
						"description": "Tries to copy a template which id does not belong to any template. So it fails"
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Live",
			"item": [
				{
					"name": "Create New Template to Get Live",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"body check\", function () {",
									"    pm.expect(jsonData.entity.body).to.eql('This is the body');",
									"});",
									"",
									"pm.test(\"friendlyName check\", function () {",
									"    pm.expect(jsonData.entity.friendlyName).to.eql('This is a postman test description');",
									"});",
									"",
									"pm.test(\"Title check\", function () {",
									"    pm.expect(jsonData.entity.title).to.eql('PostMan Test');",
									"});",
									"",
									"pm.collectionVariables.set(\"templateIdToGetLive\", jsonData.entity.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"PostMan Test\",\n    \"friendlyName\":\"This is a postman test description\",\n    \"body\":\"This is the body\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Creates a new template"
					},
					"response": []
				},
				{
					"name": "Get Template Live Version NotFound Live Version",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be ok 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/{{templateIdToGetLive}}/live",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"{{templateIdToGetLive}}",
								"live"
							]
						},
						"description": "Tries to get the live version of a template using the id as parameter. Since there is no live version it throws a 404"
					},
					"response": []
				},
				{
					"name": "Publish Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Publish Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Publish Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToGetLive}}\"]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_publish",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_publish"
							]
						},
						"description": "Publish a template successfully"
					},
					"response": []
				},
				{
					"name": "Get Template Live Version Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/{{templateIdToGetLive}}/live",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"{{templateIdToGetLive}}",
								"live"
							]
						},
						"description": "Get the live version of a template using the id as parameter."
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Working",
			"item": [
				{
					"name": "Create New Template to Get Working",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"body check\", function () {",
									"    pm.expect(jsonData.entity.body).to.eql('This is the body');",
									"});",
									"",
									"pm.test(\"friendlyName check\", function () {",
									"    pm.expect(jsonData.entity.friendlyName).to.eql('This is a postman test description');",
									"});",
									"",
									"pm.test(\"Title check\", function () {",
									"    pm.expect(jsonData.entity.title).to.eql('PostMan Test');",
									"});",
									"",
									"pm.collectionVariables.set(\"templateIdToGetWorking\", jsonData.entity.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"PostMan Test\",\n    \"friendlyName\":\"This is a postman test description\",\n    \"body\":\"This is the body\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Creates a new template"
					},
					"response": []
				},
				{
					"name": "Get Template Working Version Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be ok 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/{{templateIdToGetWorking}}/working",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"{{templateIdToGetWorking}}",
								"working"
							]
						},
						"description": "Get the working version of a template successfully."
					},
					"response": []
				},
				{
					"name": "Get Template Working Version Id Not Exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be ok 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa/working",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa",
								"working"
							]
						},
						"description": "Tries to get the working version of a template using the id as parameter. Since the id does not belong to any template throws a 404"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Get Templates",
			"item": [
				{
					"name": "Create New Template to Get TemplateA",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"body check\", function () {",
									"    pm.expect(jsonData.entity.body).to.eql('This is the body');",
									"});",
									"",
									"pm.test(\"friendlyName check\", function () {",
									"    pm.expect(jsonData.entity.friendlyName).to.eql('This is a postman test description');",
									"});",
									"",
									"pm.test(\"Title check\", function () {",
									"    pm.expect(jsonData.entity.title).to.eql('GETTEMPLATE PostMan Test A');",
									"});",
									"",
									"pm.collectionVariables.set(\"templateIdToGetTemplateA\", jsonData.entity.identifier);",
									"pm.collectionVariables.set(\"templateInodeToGetTemplateA\", jsonData.entity.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"GETTEMPLATE PostMan Test A\",\n    \"friendlyName\":\"This is a postman test description\",\n    \"body\":\"This is the body\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Creates a new template"
					},
					"response": []
				},
				{
					"name": "Create New Template to Get TemplateB",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"body check\", function () {",
									"    pm.expect(jsonData.entity.body).to.eql('This is the body');",
									"});",
									"",
									"pm.test(\"friendlyName check\", function () {",
									"    pm.expect(jsonData.entity.friendlyName).to.eql('This is a postman test description');",
									"});",
									"",
									"pm.test(\"Title check\", function () {",
									"    pm.expect(jsonData.entity.title).to.eql('GETTEMPLATE PostMan Test B');",
									"});",
									"",
									"pm.collectionVariables.set(\"templateIdToGetTemplateB\", jsonData.entity.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"GETTEMPLATE PostMan Test B\",\n    \"friendlyName\":\"This is a postman test description\",\n    \"body\":\"This is the body\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Creates a new template"
					},
					"response": []
				},
				{
					"name": "Create New Template to Get TemplateC",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"body check\", function () {",
									"    pm.expect(jsonData.entity.body).to.eql('This is the body');",
									"});",
									"",
									"pm.test(\"friendlyName check\", function () {",
									"    pm.expect(jsonData.entity.friendlyName).to.eql('This is a postman test description');",
									"});",
									"",
									"pm.test(\"Title check\", function () {",
									"    pm.expect(jsonData.entity.title).to.eql('GETTEMPLATE PostMan Test C');",
									"});",
									"",
									"pm.collectionVariables.set(\"templateIdToGetTemplateC\", jsonData.entity.identifier);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\":\"GETTEMPLATE PostMan Test C\",\n    \"friendlyName\":\"This is a postman test description\",\n    \"body\":\"This is the body\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Creates a new template"
					},
					"response": []
				},
				{
					"name": "Get Templates All Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Size must be greaterThan 2 templates, since 3 templates were created but could \", function () {",
									"    pm.expect(jsonData.entity.length).to.be.above(2);",
									"});",
									"",
									"pm.collectionVariables.set(\"allTemplatesSize\", pm.response.headers.get(\"X-Pagination-Total-Entries\"));"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							]
						},
						"description": "Get all templates"
					},
					"response": []
				},
				{
					"name": "Get Templates Using Pagination Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Check total results\", function() {",
									"    pm.expect(pm.response.headers.get(\"X-Pagination-Total-Entries\")).to.eql(pm.collectionVariables.get(\"allTemplatesSize\"));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?per_page=1&page=2",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "per_page",
									"value": "1"
								},
								{
									"key": "page",
									"value": "2"
								}
							]
						},
						"description": "Get all templates"
					},
					"response": []
				},
				{
					"name": "Get Templates Filter By Identifier Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"body check\", function () {",
									"    pm.expect(jsonData.entity[0].body).to.eql('This is the body');",
									"});",
									"",
									"pm.test(\"friendlyName check\", function () {",
									"    pm.expect(jsonData.entity[0].friendlyName).to.eql('This is a postman test description');",
									"});",
									"",
									"pm.test(\"Title check\", function () {",
									"    pm.expect(jsonData.entity[0].title).to.include('GETTEMPLATE PostMan Test A');",
									"});",
									"",
									"pm.test(\"Size must be 1\", function () {",
									"    pm.expect(jsonData.entity.length).to.be.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter={{templateIdToGetTemplateA}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "{{templateIdToGetTemplateA}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Templates Filter By Inode Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"body check\", function () {",
									"    pm.expect(jsonData.entity[0].body).to.eql('This is the body');",
									"});",
									"",
									"pm.test(\"friendlyName check\", function () {",
									"    pm.expect(jsonData.entity[0].friendlyName).to.eql('This is a postman test description');",
									"});",
									"",
									"pm.test(\"Title check\", function () {",
									"    pm.expect(jsonData.entity[0].title).to.include('GETTEMPLATE PostMan Test A');",
									"});",
									"",
									"pm.test(\"Size must be 1\", function () {",
									"    pm.expect(jsonData.entity.length).to.be.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter={{templateInodeToGetTemplateA}}",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "{{templateInodeToGetTemplateA}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Templates Filter By String Pattern does not comply with any template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Size must be 0\", function () {",
									"    pm.expect(jsonData.entity.length).to.be.eql(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter=asdfghjkl",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "asdfghjkl"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Templates PER_PAGE=1 Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Size must be 1\", function () {",
									"    pm.expect(jsonData.entity.length).to.be.eql(1);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?per_page=1",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "per_page",
									"value": "1"
								}
							]
						},
						"description": "Get all templates"
					},
					"response": []
				},
				{
					"name": "Archive Template Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Archive Template Check\", function () {",
									"    pm.expect(jsonData.entity.successCount).to.be.eql(1);",
									"});",
									"",
									"pm.test(\"Failed To Archive Template Check\", function () {",
									"    pm.expect(jsonData.entity.fails).to.have.lengthOf(0);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\"{{templateIdToGetTemplateC}}\"]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{serverURL}}/api/v1/templates/_archive",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates",
								"_archive"
							]
						},
						"description": "Archive one template successfully"
					},
					"response": []
				},
				{
					"name": "Get Templates Filter By Title",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Size must be 2, since 3 templates were created with GETTEMPLATE title but one was archived\", function () {",
									"    pm.expect(jsonData.entity.length).to.be.eql(2);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter=gettemplate",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "gettemplate"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Templates Filter By Title and Archive=True",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code should be 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"var jsonData = pm.response.json();",
									"",
									"pm.test(\"Size must be 3\", function () {",
									"    pm.expect(jsonData.entity.length).to.be.eql(3);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "admin",
									"type": "string"
								},
								{
									"key": "username",
									"value": "admin@dotcms.com",
									"type": "string"
								},
								{
									"key": "saveHelperData",
									"type": "any"
								},
								{
									"key": "showPassword",
									"value": false,
									"type": "boolean"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{serverURL}}/api/v1/templates?filter=gettemplate&archive=true",
							"host": [
								"{{serverURL}}"
							],
							"path": [
								"api",
								"v1",
								"templates"
							],
							"query": [
								{
									"key": "filter",
									"value": "gettemplate"
								},
								{
									"key": "archive",
									"value": "true"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create New Template Theme Not Send BadRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be ok 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\":\"PostMan Test\",\n    \"layout\":{\n        \"header\":true,\n        \"footer\":true,\n        \"body\":{\"rows\":[]},\n        \"sidebar\":null,\n        \"title\":\"\",\n        \"width\":null\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/templates",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"templates"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Template Theme Id Does Not Belong to Folder BadRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be ok 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\":\"PostMan Test\",\n    \"layout\":{\n        \"header\":true,\n        \"footer\":true,\n        \"body\":{\"rows\":[]},\n        \"sidebar\":null,\n        \"title\":\"\",\n        \"width\":null\n    },\n    \"theme\":\"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/templates",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"templates"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Template Title Not Send BadRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be ok 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"friendlyName\":\"This is a postman test description\",\n    \"body\":\"This is the body\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/templates",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"templates"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Template Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"body check\", function () {",
							"    pm.expect(jsonData.entity.body).to.eql('This is the body');",
							"});",
							"",
							"pm.test(\"friendlyName check\", function () {",
							"    pm.expect(jsonData.entity.friendlyName).to.eql('This is a postman test description');",
							"});",
							"",
							"pm.test(\"Title check\", function () {",
							"    pm.expect(jsonData.entity.title).to.eql('PostMan Test');",
							"});",
							"",
							"pm.collectionVariables.set(\"templateIdToEdit\", jsonData.entity.identifier);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\":\"PostMan Test\",\n    \"friendlyName\":\"This is a postman test description\",\n    \"body\":\"This is the body\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/templates",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"templates"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Template Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"body check\", function () {",
							"    pm.expect(jsonData.entity.body).to.eql('This is the body');",
							"});",
							"",
							"pm.test(\"friendlyName check\", function () {",
							"    pm.expect(jsonData.entity.friendlyName).to.eql('This is a postman test description');",
							"});",
							"",
							"pm.test(\"Title check\", function () {",
							"    pm.expect(jsonData.entity.title).to.eql('PostMan Test Changed');",
							"});",
							"",
							"pm.test(\"Identifier check\", function () {",
							"    pm.expect(jsonData.entity.identifier).to.eql(pm.variables.get(\"templateIdToEdit\"));",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifier\":\"{{templateIdToEdit}}\",\n    \"title\":\"PostMan Test Changed\",\n    \"friendlyName\":\"This is a postman test description\",\n    \"body\":\"This is the body\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/templates",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"templates"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Template Id Not Exist BadRequest",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be ok 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"identifier\":\"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa\",\n    \"title\":\"PostMan Test Changed\",\n    \"friendlyName\":\"This is a postman test description\",\n    \"body\":\"This is the body\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/templates",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"templates"
					]
				}
			},
			"response": []
		},
		{
			"name": "pre_ImportBundleWithThemes",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Bundle uploaded sucessfully\", function () {",
							"    pm.response.to.have.status(200);",
							"",
							"    var jsonData = pm.response.json();",
							"    console.log(jsonData);",
							"",
							"    pm.expect(jsonData[\"bundleName\"]).to.eql(\"themes-all.tar.gz\");",
							"    pm.expect(jsonData[\"status\"]).to.eql(\"SUCCESS\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/octet-stream"
					},
					{
						"key": "Content-Disposition",
						"type": "text",
						"value": "attachment"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"type": "file",
							"src": "resources/themes-all.tar.gz"
						}
					]
				},
				"url": {
					"raw": "{{serverURL}}/api/bundle?sync=true",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"bundle"
					],
					"query": [
						{
							"key": "sync",
							"value": "true"
						},
						{
							"key": "AUTH_TOKEN",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Imports a Bundle that includes:\n* the themes folder of the demo.dotcms.com\n*"
			},
			"response": []
		},
		{
			"name": "Create New Template Success Design Template",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"UUIDs Check\", function () {",
							"    pm.expect(jsonData.entity.layout.body.rows[0].columns[0].containers[0].uuid).to.eql(\"1\");",
							"    pm.expect(jsonData.entity.layout.body.rows[1].columns[0].containers[0].uuid).to.eql(\"1\");",
							"    pm.expect(jsonData.entity.layout.body.rows[1].columns[1].containers[0].uuid).to.eql(\"2\");",
							"    pm.expect(jsonData.entity.layout.body.rows[1].columns[2].containers[0].uuid).to.eql(\"1\");",
							"    pm.expect(jsonData.entity.layout.body.rows[1].columns[3].containers[0].uuid).to.eql(\"3\");",
							"});",
							"",
							"pm.test(\"Title check\", function () {",
							"    pm.expect(jsonData.entity.title).to.eql('Postman Test Design Template - Generate UUIDs Containers');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"title\":\"Postman Test Design Template - Generate UUIDs Containers\",\n   \"theme\":\"13f88067-1e25-4e30-bc64-7e8f42ad542f\",\n   \"layout\":{\n      \"body\":{\n         \"rows\":[\n            {\n               \"styleClass\":\"\",\n               \"columns\":[\n                  {\n                     \"styleClass\":\"\",\n                     \"leftOffset\":1,\n                     \"width\":12,\n                     \"containers\":[\n                        {\n                           \"identifier\":\"container1\"\n                        }\n                     ]\n                  }\n               ]\n            },\n            {\n               \"styleClass\":null,\n               \"columns\":[\n                  {\n                     \"styleClass\":\"\",\n                     \"leftOffset\":1,\n                     \"width\":3,\n                     \"containers\":[\n                        {\n                           \"identifier\":\"container2\"\n                        }\n                     ]\n                  },\n                  {\n                     \"styleClass\":\"\",\n                     \"leftOffset\":4,\n                     \"width\":3,\n                     \"containers\":[\n                        {\n                           \"identifier\":\"container1\"\n                        }\n                     ]\n                  },\n                  {\n                     \"styleClass\":\"\",\n                     \"leftOffset\":7,\n                     \"width\":3,\n                     \"containers\":[\n                        {\n                           \"identifier\":\"container3\"\n                        }\n                     ]\n                  },\n                  {\n                     \"styleClass\":\"\",\n                     \"leftOffset\":10,\n                     \"width\":3,\n                     \"containers\":[\n                        {\n                           \"identifier\":\"container1\"\n                        }\n                     ]\n                  }\n               ]\n            }\n         ]\n      },\n      \"header\":true,\n      \"footer\":true,\n      \"sidebar\":{\n         \"location\":\"\",\n         \"containers\":[\n            \n         ],\n         \"width\":\"small\"\n      }\n   }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/templates",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"templates"
					]
				},
				"description": "Create a new template successfully, the template is a design one, this is to test the updateUUIDofContainers method, that will assign the uuid to the container according to the number of times the container is present in the template."
			},
			"response": []
		},
		{
			"name": "Create New Template Success Design Template With SideBar",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code should be ok 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"var jsonData = pm.response.json();",
							"",
							"pm.test(\"UUIDs Check\", function () {",
							"    pm.expect(jsonData.entity.layout.body.rows[0].columns[0].containers[0].uuid).to.eql(\"1\");",
							"    pm.expect(jsonData.entity.layout.body.rows[1].columns[0].containers[0].uuid).to.eql(\"1\");",
							"    pm.expect(jsonData.entity.layout.body.rows[1].columns[1].containers[0].uuid).to.eql(\"2\");",
							"    pm.expect(jsonData.entity.layout.body.rows[1].columns[2].containers[0].uuid).to.eql(\"1\");",
							"    pm.expect(jsonData.entity.layout.body.rows[1].columns[3].containers[0].uuid).to.eql(\"3\");",
							"    pm.expect(jsonData.entity.layout.sidebar.containers[0].uuid).to.eql(\"4\");",
							"    pm.expect(jsonData.entity.layout.sidebar.containers[1].uuid).to.eql(\"2\");",
							"});",
							"",
							"pm.test(\"Title check\", function () {",
							"    pm.expect(jsonData.entity.title).to.eql('Postman Test Design Template With Sidebar - Generate UUIDs Containers');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "admin",
							"type": "string"
						},
						{
							"key": "username",
							"value": "admin@dotcms.com",
							"type": "string"
						},
						{
							"key": "saveHelperData",
							"type": "any"
						},
						{
							"key": "showPassword",
							"value": false,
							"type": "boolean"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n   \"title\":\"Postman Test Design Template With Sidebar - Generate UUIDs Containers\",\n   \"theme\":\"13f88067-1e25-4e30-bc64-7e8f42ad542f\",\n   \"layout\":{\n      \"body\":{\n         \"rows\":[\n            {\n               \"styleClass\":\"\",\n               \"columns\":[\n                  {\n                     \"styleClass\":\"\",\n                     \"leftOffset\":1,\n                     \"width\":12,\n                     \"containers\":[\n                        {\n                           \"identifier\":\"container1\"\n                        }\n                     ]\n                  }\n               ]\n            },\n            {\n               \"styleClass\":null,\n               \"columns\":[\n                  {\n                     \"styleClass\":\"\",\n                     \"leftOffset\":1,\n                     \"width\":3,\n                     \"containers\":[\n                        {\n                           \"identifier\":\"container2\"\n                        }\n                     ]\n                  },\n                  {\n                     \"styleClass\":\"\",\n                     \"leftOffset\":4,\n                     \"width\":3,\n                     \"containers\":[\n                        {\n                           \"identifier\":\"container1\"\n                        }\n                     ]\n                  },\n                  {\n                     \"styleClass\":\"\",\n                     \"leftOffset\":7,\n                     \"width\":3,\n                     \"containers\":[\n                        {\n                           \"identifier\":\"container3\"\n                        }\n                     ]\n                  },\n                  {\n                     \"styleClass\":\"\",\n                     \"leftOffset\":10,\n                     \"width\":3,\n                     \"containers\":[\n                        {\n                           \"identifier\":\"container1\"\n                        }\n                     ]\n                  }\n               ]\n            }\n         ]\n      },\n      \"header\":true,\n      \"footer\":true,\n      \"sidebar\":{\n         \"location\":\"\",\n         \"containers\":[\n            {\n                 \"identifier\":\"container1\"\n            },\n            {\n                 \"identifier\":\"container3\"\n            }\n         ],\n         \"width\":\"small\"\n      }\n   }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{serverURL}}/api/v1/templates",
					"host": [
						"{{serverURL}}"
					],
					"path": [
						"api",
						"v1",
						"templates"
					]
				},
				"description": "Create a new template successfully, the template is a design one, this is to test the updateUUIDofContainers method, that will assign the uuid to the container according to the number of times the container is present in the template."
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "temporalInode",
			"value": "27928cad-5c13-41a9-bcf1-ce23a6cb55c8"
		},
		{
			"key": "temporalIdentifier",
			"value": "037debee-59cb-42b7-b0d1-1cab580c2b76"
		},
		{
			"key": "temporaryInode",
			"value": "d3d81700-1767-4468-b788-5a93eda006b9"
		},
		{
			"key": "temporaryIdentifier",
			"value": "6d9a5bd8-9f07-4ece-8328-a0001ba82de4"
		},
		{
			"key": "templateIdentifier",
			"value": "f2dbc35a-de89-4c04-a859-5c156bbdc7f8"
		},
		{
			"key": "templateIdToArchive",
			"value": "08ff16cb-5a39-4ed6-bfc8-ed202d815571"
		},
		{
			"key": "templateIdToUnArchive",
			"value": "fb706e18-11a3-401c-8df6-52f27321c077"
		},
		{
			"key": "templateIdToDelete",
			"value": "41c3c9dc-28b5-4ee7-9a06-c70d2f1b0a2f"
		},
		{
			"key": "templateIdToPublish",
			"value": "9ea0b747-a39c-40cd-a312-520ea22bb05d"
		},
		{
			"key": "templateIdToUnpublish",
			"value": "d38cecb4-9354-4338-8ba9-ff3c1f8acbe6"
		},
		{
			"key": "templateIdToLock",
			"value": "40654e42-5b63-479f-87c7-8003135c891a"
		},
		{
			"key": "templateIdToUnLock",
			"value": "afadb8e2-f97c-4bea-9e21-40990eba953c"
		},
		{
			"key": "templateIdToCopy",
			"value": "15e6e2f3-82f2-47f5-949a-a2e17b9a1102"
		},
		{
			"key": "templateIdToGetLive",
			"value": "3eb61029-79c4-4a4a-a132-f428cd55b580"
		},
		{
			"key": "templateIdToGetWorking",
			"value": "8d126696-1fc8-41aa-8f29-3d8340d136e8"
		},
		{
			"key": "templateIdToGetTemplateA",
			"value": "57f54721-eddc-4646-aac5-716d436c0207"
		},
		{
			"key": "templateIdToGetTemplateB",
			"value": "1c95dd5f-ed07-42d8-9091-3f7f7c11a370"
		},
		{
			"key": "templateIdToGetTemplateC",
			"value": "63d4918d-2155-4b56-8b2e-3189edc6aa71"
		},
		{
			"key": "templateIdToEdit",
			"value": "bc395bfa-c4ed-4715-a71e-ef4d4280cc8e"
		},
		{
			"key": "templateInodeToGetTemplateA",
			"value": "57f54721-eddc-4646-aac5-716d436c0207"
		},
		{
			"key": "allTemplatesSize",
			"value": "47"
		}
	]
}
