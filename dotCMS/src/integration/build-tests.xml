<?xml version="1.0"?>


<project name="dotcms-tests" default="test-dotcms" basedir=".">
	<!-- include ant-contrib -->
    <taskdef resource="net/sf/antcontrib/antlib.xml"/>
    
    <taskdef resource="cactus.tasks">
        <classpath>
            <pathelement location="${tomcat.dir}/webapps/ROOT/WEB-INF/lib/dot.cactus.integration.ant-1.8.0_2.jar"/>
            <pathelement location="$${tomcat.dir}/webapps/ROOT/WEB-INF/lib/dot.cargo-ant-0.9_2.jar"/>
            <pathelement location="${tomcat.dir}/webapps/ROOT/WEB-INF/lib/dot.cargo-core-uberjar-0.9_2.jar"/>
            <pathelement location="${tomcat.dir}/webapps/ROOT/WEB-INF/lib/dot.commons-httpclient-3.1_2.jar"/>
            <pathelement location="${tomcat.dir}/webapps/ROOT/WEB-INF/lib/dot.tika-app-1.3_3.jar"/>
        </classpath>
    </taskdef>
    
    <path id="files-classpath">      
        <fileset dir="${tomcat.dir}/lib">
            <include name="*.jar" />
        </fileset>
        <fileset dir="${tomcat.dir}/webapps/ROOT/WEB-INF/lib">
            <include name="*.jar" />
        </fileset>
    </path>

    <target name="drop-create-db-test" depends="drop-db, create-db"/>

    <!-- Main test target, this tasks will run all the unit tests of the application -->
    <target name="test-dotcms" depends="set-properties, drop-create-db-test">
		
        <!--CHECK FOR FAMILY OS-->
        <condition property="isWindows">
            <os family="windows"/>
        </condition>

        <condition property="isUnix">
            <os family="unix"/>
        </condition>
    	
        <runservertests
                testurl="http://localhost:${server.port}"
                starttarget="tomcat-start"
                stoptarget="tomcat-stop"
                testtarget="test-all-junits"
                timeout="1200000"/>
    </target>

    <!-- Hit the tests servlet to run all the unit tests of the application -->
    <target name="test-all-junits">
        <condition property="get.ok">
            <http url="${server.test.url}" errorsbeginat="400"/>
        </condition>
        <fail unless="get.ok" message="One or more tests failed!!!" />
        <echo message="dotCMS successfully tested"/>
    </target>

    <target name="tomcat-start" >
        <java classname="org.apache.catalina.startup.Bootstrap" fork="yes">
            <jvmarg value="-Dcatalina.home=${tomcat.dir}"/>
            <jvmarg value="-Xmx1G"/>
            <jvmarg value="-XX:MaxPermSize=512m"/>
            <arg value="start"/>
            <classpath>
                <fileset dir="${tomcat.dir}">
                    <include name="bin/bootstrap.jar"/>
                    <include name="bin/tomcat-juli.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>

    <target name="tomcat-stop">
        <java classname="org.apache.catalina.startup.Bootstrap" fork="yes">
            <jvmarg value="-Dcatalina.home=${tomcat.dir}"/>
            <arg value="stop"/>
            <classpath>
                <fileset dir="${tomcat.dir}">
                    <include name="bin/bootstrap.jar"/>
                    <include name="bin/tomcat-juli.jar"/>
                </fileset>
            </classpath>
        </java>
    </target>

    <target name="create-db" >
        <if>
            <equals arg1="${db.driver}" arg2="oracle.jdbc.OracleDriver"/>
            <then>
                <sql driver="${db.driver}"
                     url="${db.base.url}"
                     userid="${db.oracleadmin.user}"
                     password="${db.oracleadmin.pass}"
                     autocommit="true"
                     classpathref="files-classpath">
                    create user ${db.username} identified by ${db.password};
                    grant dba to ${db.username};
                    grant connect,resource to ${db.username};
                </sql>
                <sql driver="${db.driver}"
                     url="${db.base.url}"
                     userid="${db.username}"
                     password="${db.password}"
                     autocommit="true"
                     classpathref="files-classpath">
                    CREATE OR REPLACE TRIGGER WORKAROUNDORA9965278 AFTER LOGON ON DATABASE BEGIN EXECUTE IMMEDIATE 'ALTER SESSION SET "_replace_virtual_columns"=false'; END;
                </sql>
            </then>
            <elseif>
                <equals arg1="${db.driver}" arg2="net.sourceforge.jtds.jdbc.Driver"/>
                <then>
                    <sql driver="${db.driver}"
                         url="${db.admin.url}"
                         userid="${db.username}"
                         password="${db.password}"
                         autocommit="true"
                         classpathref="files-classpath">
                        CREATE DATABASE ${db.name};
                        ALTER DATABASE ${db.name} SET READ_COMMITTED_SNAPSHOT ON;
                        ALTER DATABASE ${db.name} SET ALLOW_SNAPSHOT_ISOLATION ON;
                    </sql>
                </then>
            </elseif>
            <elseif>
                <equals arg1="${db.driver}" arg2="com.mysql.jdbc.Driver"/>
                <then>
                    <sql driver="${db.driver}"
                         url="${db.base.url}"
                         userid="${db.username}"
                         password="${db.password}"
                         autocommit="true"
                         classpathref="files-classpath">
                        CREATE DATABASE ${db.name} DEFAULT CHARACTER SET = utf8 DEFAULT COLLATE = utf8_general_ci;
                    </sql>
                </then>
            </elseif>
            <elseif>
                <equals arg1="${db.driver}" arg2="org.postgresql.Driver"/>
                <then>
                    <sql driver="${db.driver}"
                         url="${db.base.url}"
                         userid="${db.username}"
                         password="${db.password}"
                         autocommit="true"
                         classpathref="files-classpath">
                        CREATE DATABASE ${db.name};
                    </sql>
                </then>
            </elseif>
        </if>
    </target>

    <!-- Drops the test db. Attributes are defined in the build.properties file -->
    <target name="drop-db" >
        <if>
            <equals arg1="${db.driver}" arg2="oracle.jdbc.OracleDriver"/>
            <then>
                <sql driver="${db.driver}"
                     url="${db.base.url}"
                     userid="${db.oracleadmin.user}"
                     password="${db.oracleadmin.pass}"
                     autocommit="true" onerror="continue"
                     classpathref="files-classpath">
                    drop user ${db.username} cascade;
                </sql>
            </then>
            <elseif>
                <equals arg1="${db.driver}" arg2="net.sourceforge.jtds.jdbc.Driver"/>
                <then>
                    <sql driver="${db.driver}"
                         url="${db.admin.url}"
                         userid="${db.username}"
                         password="${db.password}"
                         autocommit="true" onerror="continue"
                         classpathref="files-classpath">
                        DROP DATABASE ${db.name};
                    </sql>
                </then>
            </elseif>
            <elseif>
                <or>
                    <equals arg1="${db.driver}" arg2="org.postgresql.Driver"/>
                    <equals arg1="${db.driver}" arg2="com.mysql.jdbc.Driver"/>
                </or>
                <then>
                    <sql driver="${db.driver}"
                         url="${db.base.url}"
                         userid="${db.username}"
                         password="${db.password}"
                         autocommit="true" onerror="continue"
                         classpathref="files-classpath">
                        DROP DATABASE IF EXISTS ${db.name};
                    </sql>
                </then>
            </elseif>
        </if>
    </target>

    <target name="set-properties" depends="">
        <unjar dest="${tomcat.dir}/conf">
        	<patternset>
        		<include name="server.xml"/>
        	</patternset>
    	    <fileset dir="${tomcat.dir}/webapps/ROOT/WEB-INF/lib" includes="dotcms_tests_*.jar" />
        </unjar>
    	
    	<unjar dest="${tomcat.dir}/webapps/ROOT/META-INF">
        	<patternset>
        		<include name="context.xml"/>
        	</patternset>
    	    <fileset dir="${tomcat.dir}/webapps/ROOT/WEB-INF/lib" includes="dotcms_tests_*.jar" />
        </unjar>
    	
        <replace file="${tomcat.dir}/conf/server.xml" token="{port}" value="${server.port}"/>
        <replace file="${tomcat.dir}/conf/server.xml" token="{shutdown_port}" value="${server.shutdown.port}"/>
        
        <replace file="${tomcat.dir}/webapps/ROOT/WEB-INF/classes/dotcms-config-cluster.properties">
            <replacefilter token="es.http.enabled" value="#es.http.enabled"/>
            <replacefilter token="es.transport.tcp.port" value="#es.transport.tcp.port"/>
        </replace>
        <echo file="${tomcat.dir}/webapps/ROOT/WEB-INF/classes/dotcms-config-cluster.properties" append="true">${line.separator}es.http.enabled=false${line.separator}es.transport.tcp.port=${es.network.port}${line.separator}</echo>

        <replace file="${tomcat.dir}/webapps/ROOT/META-INF/context.xml">
            <replacefilter token="{driver}" value="${db.driver}"/>
            <replacefilter token="{url}" value="${db.url}"/>
            <replacefilter token="{username}" value="${db.username}"/>
            <replacefilter token="{password}" value="${db.password}"/>
            <replacefilter token="{valquery}" value="${db.valquery}"/>
        </replace>
    </target>

    <target name="start-server-for-tests" depends="">

        <exec osfamily="unix" executable="${tomcat.dir}/bin/catalina.sh">
            <arg value="tests"/>
        </exec>
        <exec osfamily="windows" executable="${tomcat.dir}/bin/catalina.bat">
            <arg value="start"/>
        </exec>
        <echo message="server starting">
        </echo>
        <sleep seconds="30"/>
    </target>

    <target name="shutdown-server-for-tests">

        <exec osfamily="unix" executable="${tomcat.dir}/bin/catalina.sh">
            <arg value="stop"/>
        </exec>
        <exec osfamily="windows" executable="${tomcat.dir}/bin/catalina.bat">
            <arg value="stop"/>
        </exec>

        <echo message="server going down">
        </echo>
        <sleep seconds="10"/>

    </target>
</project>