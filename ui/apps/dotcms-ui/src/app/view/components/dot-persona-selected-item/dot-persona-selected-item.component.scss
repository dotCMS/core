@use "variables" as *;
@import "dotcms-theme/utils/theme-variables";
@import "mixins";

:host {
    width: 200px;
    display: flex;
    cursor: pointer;
    align-items: center;

    dot-icon {
        bottom: 0;
        position: absolute;
        right: 0;
    }

    &::ng-deep {
        .material-icons {
            color: $gray;
            transform: scale(1.2);
        }
    }

    &.disabled {
        &::ng-deep {
            .avatar__placeholder {
                background-color: $field-disabled-color;
            }

            .material-icons {
                color: $field-disabled-color;
            }
        }

        .dot-persona-selector__label,
        .dot-persona-selector__name {
            color: $field-disabled-color;
        }
    }

    @media only screen and (max-width: $screen-device-container-max) {
        & {
            width: unset;
        }
    }
}

.dot-persona-selector__container {
    align-items: center;
    cursor: pointer;
    display: flex;
    position: relative;
    width: 206px;
}

dot-avatar {
    margin-right: $spacing-1;
}

.dot-persona-selector__label-container {
    @include truncate-text;

    span {
        display: block;
    }
}

.dot-persona-selector__label {
    color: $gray;
    flex: 1;
    font-size: $font-size-small;
    line-height: $spacing-3;
}

.dot-persona-selector__label--edit {
    color: $brand-primary;
}

.dot-persona-selector__name {
    color: $black;
    font-weight: $font-weight-semi-bold;
    line-height: $spacing-3;
    margin-right: $spacing-4;
    @include truncate-text;
}

dot-icon {
    bottom: 0;
    position: absolute;
    right: 0;

    i.material-icons {
        color: $gray;
        font-size: $md-icon-size-big;
    }
}

@media only screen and (max-width: $screen-device-container-max) {
    .dot-persona-selector__label-container {
        display: none;
    }

    .dot-persona-selector__container {
        width: 4rem;
    }
}
