<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>build-parent</artifactId>
        <groupId>com.dotcms</groupId>
        <version>1.0.0-SNAPSHOT</version>
        <relativePath>../build-parent/pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>dotcms-war</artifactId>

    <packaging>war</packaging>

    <properties>
        <servlet.port>8080</servlet.port>
        <palantirJavaFormat.version>2.29.0</palantirJavaFormat.version>
        <src.dir>${project.basedir}/src/main/java</src.dir>
        <test.src.dir>${project.basedir}/src/test/java</test.src.dir>
        <version.spotless.plugin>2.36.0</version.spotless.plugin>
        <jackson.version>2.13.4</jackson.version>
        <batik.version>1.16</batik.version>
        <glowroot.version>0.13.1</glowroot.version>
        <version.cargo.plugin>1.10.6</version.cargo.plugin>
        <assembly-directory>${basedir}/target/dist</assembly-directory>
        <skipDockerEnv>true</skipDockerEnv>
        <skipITs>true</skipITs>
        <starter.filename>starter.zip</starter.filename>
        <starter.path>${project.build.directory}/starter</starter.path>
        <starter.full.path>${starter.path}/${starter.filename}</starter.full.path>

        <skipITs>true</skipITs>
        <clean.docker.volumes>false</clean.docker.volumes>
        <!-- Tomcat -->
        <tomcat.version>9.0.53</tomcat.version>
        <enableDebug>true</enableDebug>
        <debugPort>8000</debugPort>
        <debugHost>localhost</debugHost>
        <debugWait>false</debugWait>
        <buildDocker>true</buildDocker>
        <buildJib>false</buildJib>
        <tomcat-dist-folder>dotserver/tomcat-${tomcat.version}</tomcat-dist-folder>
        <tomcat9-overrides>${project.basedir}/src/main/resources/container/tomcat9</tomcat9-overrides>

        <docker.base.image>tomcat:9.0.74-jdk11</docker.base.image>
        <docker.output.image.name>dotcms/dotcms-test</docker.output.image.name>

        <legacy.webapp.dir>${project.basedir}/../dotCMS/src/main/webapp</legacy.webapp.dir>
        <sonar.skip>true</sonar.skip>
    </properties>
    <dependencies>

        <dependency>
            <!-- compile would include the jar in WEB-INF/lib but to match the
            existing structure we will extract the jar and include the classes -->
            <groupId>com.dotcms</groupId>
            <artifactId>dotcms-core</artifactId>
            <version>${project.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.dotcms.plugins</groupId>
            <artifactId>core-bundles</artifactId>
            <version>${project.version}</version>
            <type>zip</type>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.dotcms.plugins</groupId>
            <artifactId>system-bundles</artifactId>
            <version>${project.version}</version>
            <type>zip</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jaxb</groupId>
            <artifactId>jaxb-runtime</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.dotcms</groupId>
            <artifactId>core-web</artifactId>
            <version>${project.version}</version>
            <type>war</type>
        </dependency>


        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.checkerframework</groupId>
                    <artifactId>checker-qual</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.dotcms</groupId>
                <artifactId>application-bom</artifactId>
                <version>1.0.0-SNAPSHOT</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <build>
        <sourceDirectory>${src.dir}</sourceDirectory>
        <testSourceDirectory>${test.src.dir}</testSourceDirectory>
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>GeoLite2-City.mmdb</exclude>
                </excludes>
            </resource>

            <resource>
                <filtering>false</filtering>
                <directory>${legacy.webapp.dir}/WEB-INF/classes</directory>
            </resource>

        </resources>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.dotcms</groupId>
                                    <artifactId>core-web</artifactId>
                                    <version>${project.version}</version>
                                    <type>war</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/core-web</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.dotcms.plugins</groupId>
                                    <artifactId>core-bundles</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/felix</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.dotcms.plugins</groupId>
                                    <artifactId>system-bundles</artifactId>
                                    <version>${project.version}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/felix-system</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.dotcms</groupId>
                                    <artifactId>dotcms-core</artifactId>
                                    <version>${project.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/core</outputDirectory>
                                </artifactItem>

                            </artifactItems>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>true</overWriteSnapshots>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-starter</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.dotcms</groupId>
                                    <artifactId>starter</artifactId>
                                    <!--   <version>empty_20210903</version>-->
                                    <version>${starter.version}</version>
                                    <type>zip</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${starter.path}</outputDirectory>
                                    <destFileName>${starter.filename}</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-test-resources</phase>

                        <configuration>
                            <skip>${skipITs}</skip>
                            <target>
                                <mkdir dir="${project.build.directory}/felix/" />
                                <copy todir="${project.build.directory}/felix">
                                    <fileset dir="${legacy.webapp.dir}/WEB-INF/felix" includes="osgi-extra-generated.conf" />
                                </copy>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>




            <plugin>
                <groupId>com.dkanejs.maven.plugins</groupId>
                <artifactId>docker-compose-maven-plugin</artifactId>
                <configuration>
                    <!--  <envFile>${project.basedir}/.env</envFile>-->
                    <services>
                        <service>db</service>
                        <service>elasticsearch</service>
                    </services>
                    <removeVolumes>false</removeVolumes>
                    <projectName>cargo</projectName>
                    <removeImages>true</removeImages>
                    <removeImagesType>local</removeImagesType>
                    <skip>${skipDockerEnv}</skip>
                    <composeFile>${project.basedir}/../docker-compose.yml</composeFile>
                    <detachedMode>true</detachedMode>
                    <removeVolumes>true</removeVolumes>
                </configuration>

                <executions>
                    <execution>
                        <id>up</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>down</goal>
                            <goal>up</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITs}</skip>
                            <removeVolumes>${clean.docker.volumes}</removeVolumes>
                            <ignorePullFailures>true</ignorePullFailures>
                            <detachedMode>true</detachedMode>
                            <services>
                                <service>db</service>
                                <service>elasticsearch</service>
                            </services>
                        </configuration>
                    </execution>
                    <execution>
                        <id>down</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>down</goal>
                        </goals>
                        <configuration>
                            <skip>${skipITs}</skip>
                            <composeFile>${project.basedir}/../docker-compose.yml</composeFile>
                            <!--We clean docker volumes before but not after as we may need to debug -->
                            <!--<removeVolumes>${clean.docker.volumes}</removeVolumes>-->
                            <services>
                                <service>db</service>
                                <service>elasticsearch</service>
                            </services>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <attachClasses>false</attachClasses>
                    <archiveClasses>false</archiveClasses>

                    <webXml>${legacy.webapp.dir}/WEB-INF/web.xml</webXml>

                    <overlays>
                        <overlay>
                            <groupId>com.dotcms</groupId>
                            <artifactId>core-web</artifactId>
                            <type>war</type>
                            <excludes>
                                <exclude>**/META-INF/**</exclude>
                                <exclude>**/WEB-INF/**</exclude>
                            </excludes>
                        </overlay>
                        <overlay>
                            <groupId>com.dotcms</groupId>
                            <artifactId>dotcms-core</artifactId>
                            <type>jar</type>
                            <targetPath>WEB-INF/classes</targetPath>
                        </overlay>
                    </overlays>


                    <webResources>

                        <resource>
                            <directory>${legacy.webapp.dir}</directory>
                            <filtering>false</filtering>
                            <excludes>
                                <exclude>**/context.xml</exclude>
                            </excludes>
                        </resource>

                        <!-- add osgi bundles -->
                        <resource>
                            <directory>
                                ${project.build.directory}/felix
                            </directory>
                            <targetPath>WEB-INF/felix</targetPath>
                        </resource>
                        <resource>
                            <directory>
                                ${project.build.directory}/felix-system
                            </directory>
                            <targetPath>WEB-INF/felix-system</targetPath>
                        </resource>

                        <resource>
                            <directory>
                                ${starter.path}
                            </directory>
                        </resource>


                    </webResources>
                </configuration>
                <executions>
                    <execution>
                        <id>explode-war</id>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                        <configuration>
                            <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.cargo</groupId>
                <artifactId>cargo-maven3-plugin</artifactId>
                <configuration>
                    <container>
                        <timeout>1800000</timeout>
                        <systemProperties>
                            <DOT_DATASOURCE_PROVIDER_STRATEGY_CLASS>com.dotmarketing.db.SystemEnvDataSourceStrategy</DOT_DATASOURCE_PROVIDER_STRATEGY_CLASS>
                            <DOT_DB_DRIVER>org.postgresql.Driver</DOT_DB_DRIVER>
                            <DOT_DB_BASE_URL>jdbc:postgresql://localhost/dotcms?autosave=conservative</DOT_DB_BASE_URL>
                            <DOT_DB_USERNAME>postgres</DOT_DB_USERNAME>
                            <DOT_DB_PASSWORD>postgres</DOT_DB_PASSWORD>
                            <DOT_DOTCMS_DEV_MODE>true</DOT_DOTCMS_DEV_MODE>
                            <DOT_STARTER_DATA_LOAD>${starter.full.path}</DOT_STARTER_DATA_LOAD>
                            <file.encoding>UTF-8</file.encoding>
                        </systemProperties>

                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                            </dependency>
                        </dependencies>
                    </container>
                    <configuration>
                        <properties>
                            <cargo.servlet.port>${servlet.port}</cargo.servlet.port>
                            <cargo.tomcat.debug.mode>${enableDebug}</cargo.tomcat.debug.mode>
                            <cargo.tomcat.debug.address>${debugHost}</cargo.tomcat.debug.address>
                            <cargo.tomcat.debug.suspend>${debugWait}</cargo.tomcat.debug.suspend>
                        </properties>
                    </configuration>


                    <deployables>
                        <deployable>
                            <groupId>org.codehaus.cargo</groupId>
                            <artifactId>simple-war</artifactId>
                            <type>war</type>
                            <!--
                              Override location to point to the exploded webapp.
                              -->
                            <location>${project.build.directory}/${project.build.finalName}</location>
                            <properties>
                                <context>/</context>
                            </properties>
                        </deployable>
                    </deployables>


                    <packager>
                        <outputLocation>${assembly-directory}/dotserver/tomcat-${tomcat.version}</outputLocation>
                    </packager>
                </configuration>
                <executions>

                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <container>
                                <timeout>3000000</timeout>
                            </container>
                            <skip>${skipITs}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <configuration>
                            <container>
                                <timeout>3000000</timeout>
                            </container>
                            <skip>${skipITs}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>configure</id>
                        <phase>package</phase>
                        <goals>
                            <goal>configure</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>prepare-package</id>
                        <phase>package</phase>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>



            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <tarLongFileMode>posix</tarLongFileMode>
                    <appendAssemblyId>false</appendAssemblyId>
                </configuration>
                <executions>
                    <execution>
                        <id>binary</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                        <configuration>
                            <overrideUid>0</overrideUid>
                            <overrideGid>0</overrideGid>
                            <descriptors>
                                <descriptor>src/assembly/descriptor.xml</descriptor>
                            </descriptors>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <skip>true</skip>
                    <to>
                        <image>${docker.output.image.name}</image>
                    </to>
                    <from>
                        <image>${docker.base.image}</image>
                        <!--
                         <platforms>
                             <platform>
                                 <architecture>arm</architecture>
                                 <os>linux</os>
                             </platform>
                             <platform>
                                 <architecture>arm64</architecture>
                                 <os>linux</os>
                             </platform>
                         </platforms>
                         -->
                    </from>
                    <container>
                        <!--
                          For demonstration only: this directory in the base image contains a Tomcat default
                          app (welcome page), so you may first want to delete this directory in the base image.
                        -->
                        <appRoot>/usr/local/tomcat/webapps/ROOT</appRoot>
                    </container>
                    <extraDirectories>
                        <paths>
                            <!--
                             <path>
                                <from>src/main/tomcat9</from>
                                <into>/usr/local/tomcat</into>
                            </path>
                            -->
                            <path>
                                <from>target/cargo/configurations/tomcat9x/common/lib</from>
                                <into>/usr/local/tomcat/lib</into>
                            </path>
                        </paths>
                    </extraDirectories>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>tomcat9x</id>
            <activation>

                <property>
                    <name>!run-container</name>

                </property>

            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.codehaus.cargo</groupId>
                            <artifactId>cargo-maven3-plugin</artifactId>
                            <version>${version.cargo.plugin}</version>
                            <configuration>
                                <configuration>
                                    <type>standalone</type>
                                    <configfiles>
                                        <configfile>
                                            <file>${tomcat9-overrides}/bin/build.conf</file>
                                            <todir>bin</todir>
                                        </configfile>
                                        <configfile>
                                            <file>${tomcat9-overrides}/bin/setenv.bat</file>
                                            <todir>bin</todir>
                                        </configfile>
                                        <configfile>
                                            <file>${tomcat9-overrides}/bin/setenv.sh</file>
                                            <todir>bin</todir>
                                        </configfile>
                                        <!--
                                        <configfile>
                                            <file>${tomcat9-overrides}/conf/catalina.properties</file>
                                            <todir>conf</todir>
                                        </configfile>
                                        -->
                                        <configfile>
                                            <file>${tomcat9-overrides}/conf/server.xml</file>
                                            <todir>conf</todir>
                                        </configfile>
                                        <configfile>
                                            <file>${tomcat9-overrides}/conf/context.xml</file>
                                            <todir>conf</todir>
                                        </configfile>
                                        <configfile>
                                            <file>${tomcat9-overrides}/conf/local.dotcms.site.pem</file>
                                            <todir>conf</todir>
                                        </configfile>
                                    </configfiles>
                                </configuration>
                                <container>
                                    <containerId>tomcat9x</containerId>
                                    <timeout>1800000</timeout>
                                    <zipUrlInstaller>
                                        <url>
                                            https://repo.maven.apache.org/maven2/org/apache/tomcat/tomcat/${tomcat.version}/tomcat-${tomcat.version}.zip
                                        </url>
                                    </zipUrlInstaller>

                                </container>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>dev-docker</id>
            <activation>

                <property>
                    <name>!dev-docker</name>

                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.google.cloud.tools</groupId>
                        <artifactId>jib-maven-plugin</artifactId>
                        <version>3.3.1</version>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>dockerBuild</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <to>
                                <image>${docker.output.image.name}</image>
                            </to>
                            <from>
                                <image>${docker.base.image}</image>

                                <platforms>
                                    <platform>
                                        <architecture>arm64</architecture>
                                        <os>linux</os>
                                    </platform>
                                </platforms>

                            </from>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>integrationTests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>integration-test</goal>
                                    <goal>verify</goal>
                                </goals>

                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>

