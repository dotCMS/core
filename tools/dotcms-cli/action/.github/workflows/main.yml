name: dotCMS sync

on: [push]

jobs:
  sync-with-dotcms:
    runs-on: ubuntu-latest
    env:
      # Global environment expected by dotCMS CLI
      # This is how we instruct the cli the target server
      DOT_API_URL: ${{ vars.DOT_API_URL }}
      # This is how we instruct the cli the target folder in the repo
      # By default it must be the root of the repo this allows setting up a different folder on top of the root
      DOT_REPO_BASE_PATH: ${{ vars.DOT_REPO_BASE_PATH }}
      # This is how we instruct the cli to create the workspace if it does not exist
      DOT_CREATE_WORKSPACE: ${{ vars.DOT_CREATE_WORKSPACE || 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        id: checkout
        with:
          fetch-depth: 0

      - name: Get changes
        id: changed-files
        run: |
          echo "changed_files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | xargs)" >> $GITHUB_OUTPUT

      - name: List changed files
        run: |
          for file in ${{ steps.changed-files.outputs.changed_files }}; do
              echo "$file was changed"
          done    

      - name: Github Event Context properties
        run: |
          echo "Event: ${{ github.event }}"
          echo "Event Name: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Commit SHA: ${{ github.sha }}"
          echo "Commit Ref: ${{ github.ref }}"
          echo "Head Ref: ${{ github.head_ref }}"
          echo "Base Ref: ${{ github.base_ref }}"
          echo "Triggered by: ${{ github.actor }}"
          echo "Workflow: ${{ github.workflow }}"
          echo "PR: ${{ github.pull_request }}"
          echo "Workspace: ${{ github.workspace }}"

      - name: Create workspace if not exists
        id: dot-workspace
        run: |          
          if [ ${{ env.DOT_CREATE_WORKSPACE }} = true ]; then
            echo "Creating workspace ::: "             
            chmod +x ./.github/workflows/scripts/workspace.sh
            source ./.github/workflows/scripts/workspace.sh
            workspace_updated=$(create_workspace "${{github.workspace}}${{env.DOT_REPO_BASE_PATH}}" )          
            echo "workspace-updated=$workspace_updated" >> "$GITHUB_OUTPUT"
          fi
        shell: bash

      # This step requires permission to push to the repo
      # you need to grant read/write permission for workflows in the repo settings
      - name: Persist updated workspace
        run: |
          saveChanges="${{ steps.dot-workspace.outputs.workspace-updated }}"
          if [ -n "${saveChanges}" ]; then            
            git config user.name "GitHub Actions"
            git config user.email "actions@github.com"
            git add .
            git commit -m "pushing workspace changes"
            git push
            echo "Workspace has been updated."
          fi

      - name: Run dotCMS CLI
        id: dot-push
        run: |                                   
            chmod +x ./.github/workflows/scripts/run-push.sh
            source ./.github/workflows/scripts/run-push.sh            
            run_cli_push "${{github.workspace}}${{env.DOT_REPO_BASE_PATH}}" "${{env.DOT_API_URL}}" "${{ secrets.DOT_TOKEN }}"
            echo "exit-code=$exit_code" >> "$GITHUB_OUTPUT"
            print_log
        shell: bash