#!/bin/bash
set -e
. "$DOTCLI_WORKDIR/common"

help_push_content_type() {
  echo "
Command: content-type

This command takes a json file describing the CT that will be pushed/updated

Usage:
  ./dot-cli --content-type ~/code/etc/content-type.json
  or
  ./dot-cli --content-type ~/code/etc/content-type.json
   "
  exit 1
}

[[ ! -n "$1" ]] && help_push_content_type


file="$1"

if [[ ! -f "$file" ]]; then
    echo " The file $file does not exist."
    exit 1
fi

#try
{

jsonContentType=$(<${file})

# verify if there's a place holder that needs replacements
sitePlaceHolder=$(jq -r ' try .host' <<< "$jsonContentType")

## if the property site on the incoming content-type json file has a place holder instead of an identifier do string substitution
if [[ ${sitePlaceHolder} == \$* ]]; then

    siteIndentifiers=$(< $identifiersFile)
    site=$(echo $sitePlaceHolder | sed "s/\\$//g")
    var=$(echo "$siteIndentifiers" | grep "$site")
    identifier=$(echo $var | sed "s/.*=//g")

    printf "Site identifier is '%s'. " "${identifier}"

    if [[ -z ${identifier} ]]; then
      # printf "${RED}Unable to replace site-place-holder ${sitePlaceHolder} With a valid site identifier.\n${NC}This option is useful only when the script has previously created a site using the ${GREEN}--bundle${NC} command.\nYou need to replace the site-place-holder in your content-type file with a valid site identifier."
      printf "Empty site identifier make the CT System wide.";
    fi

      #Make a copy of the json file using a temp file so we can work on it.
      tmp=$(mktemp) || exit 1
      cp ${file} ${tmp}

      #replace the place holder in the file with the real identifier
      sed -i ' ' "s/\\$sitePlaceHolder/$identifier/g" "${tmp}";
      #Now that we have done the substitution on our tmp copy
      #We can refresh the jsonContentType var
      jsonContentType=$(<${tmp})
      #And kiss goodbye the tmp
      rm -f "${tmp}"

fi


contentTypeVar=$(jq -r ' try .variable' <<< "$jsonContentType")

if [[ ! -z ${contentTypeVar} ]]; then

    echo "Content-type Variable name loaded is $contentTypeVar verifying against remote host."

    code=$(curl -s -o /dev/null --head -w "%{http_code}" --header "Authorization: Bearer ${JSON_WEB_TOKEN}" "${DOTCMS_BASE_URL}/api/v1/contenttype/id/${contentTypeVar}" )

    #echo " response code was $code"

    if [[ ${code} = 401 ]]; then
         echo "Unauthorized Request - Verify your Credentials."
         exit 1
    fi

    if [[ ${code} = 404 ]]
    then
       echo "Content-type does not exists on remote site. Add will be attempted."

       response=$(curl -s "${DOTCMS_BASE_URL}/api/v1/contenttype"  --header "Authorization: Bearer ${JSON_WEB_TOKEN}" --header 'Content-Type: application/json' --data-raw  "$jsonContentType"  --compressed)

       echo "$response" | jq --color-output .

       identifier=$(jq -r ' try .entity[].id' <<< "$response")

           if [[ -z ${identifier} ]];
           then
            echo "Unable to get identifier from response adding CT ${contentTypeVar}. Please check if there were any error messages."
           else
             echo "New content-type identifier :: $identifier"
             printf "${contentTypeVar}=${identifier}\n" >> "$identifiersFile"
           fi

    else
          echo "A content type named $contentTypeVar already exists. Update will be attempted."

          response=$(curl -s -X PUT "${DOTCMS_BASE_URL}/api/v1/contenttype/id/${contentTypeVar}"  --header "Authorization: Bearer ${JSON_WEB_TOKEN}" --header 'Content-Type: application/json' --data-raw  "$jsonContentType"  --compressed)

          echo "$response" | jq --color-output .

          identifier=$(jq -r ' try .entity.id' <<< "$response")

          if [[ -z ${identifier} ]];
          then
            echo "Unable to get identifier from response updating CT ${contentTypeVar}. Please check if there were any error messages."

          else
           echo " Updated content-type identifier :: $identifier"
           printf "${contentTypeVar}=${identifier}\n" >> "$identifiersFile"
          fi

    fi

else
  echo "Unable to get content type variable from the input json content-type file."
fi

#catch
} || {
   echo " Unexpected Exception pushing CT."
}

#finally
