<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.dotcms</groupId>
        <artifactId>dotcms-nodejs-parent</artifactId>
        <version>${revision}${sha1}${changelist}</version>
        <relativePath>../../nodejs-parent/pom.xml</relativePath>
    </parent>

    <packaging>jar</packaging>
    <artifactId>dotcms-e2e-node</artifactId>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <license.use>true</license.use>
        <skip.npm.install>false</skip.npm.install>
        <yarn.install.cmd>install --frozen-lockfile</yarn.install.cmd>
        <playwright.add.cmd>global add playwright</playwright.add.cmd>
        <playwright.install.cmd>playwright install</playwright.install.cmd>
        <playwright.install.deps.cmd>playwright install-deps</playwright.install.deps.cmd>
        <e2e.test.skip>true</e2e.test.skip>
        <e2e.test.env>local</e2e.test.env>
        <e2e.frontend.dir>./frontend</e2e.frontend.dir>
        <e2e.test.cmd>run start-${e2e.test.env}</e2e.test.cmd>
        <tomcat.port>8080</tomcat.port>
        <e2e.server.url>http://localhost:${tomcat.port}</e2e.server.url>
        <version.cargo.plugin>1.10.6</version.cargo.plugin>
        <clean.docker.volumes>true</clean.docker.volumes>
        <buildDocker>true</buildDocker>
        <docker.base.image>tomcat:9.0.74-jdk11</docker.base.image>
        <wiremock.api.key>${ext.wiremock.api.key}</wiremock.api.key>
        <docker.image.wiremock>${ext.docker.image.wiremock}</docker.image.wiremock>
        <docker.wm.volume>./src/test/resources</docker.wm.volume>
        <docker.wm.volume.internal>/home/wiremock</docker.wm.volume.internal>
        <it.test.fork-folder.prefix>${project.build.directory}/testdata/fork-</it.test.fork-folder.prefix>
        <it.test.fork-folder>${it.test.fork-folder.prefix}</it.test.fork-folder>
        <cleanup.before.tests>true</cleanup.before.tests>
        <tomcat.port>8080</tomcat.port>
        <docker.jacoco.skip>false</docker.jacoco.skip>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>install</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <!-- optional: the default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                        <configuration>
                            <workingDirectory>${e2e.frontend.dir}</workingDirectory>
                            <skip>${skip.npm.install}</skip>
                            <arguments>${yarn.install.cmd}</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-playwright</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <workingDirectory>${e2e.frontend.dir}</workingDirectory>
                            <skip>${e2e.test.skip}</skip>
                            <arguments>${playwright.add.cmd}</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-playwright</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <workingDirectory>${e2e.frontend.dir}</workingDirectory>
                            <skip>${e2e.test.skip}</skip>
                            <arguments>${playwright.install.cmd}</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-playwright-deps</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <phase>generate-resources</phase>
                        <configuration>
                            <workingDirectory>${e2e.frontend.dir}</workingDirectory>
                            <skip>${e2e.test.skip}</skip>
                            <arguments>${playwright.install.deps.cmd}</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>run node script</id>
                        <goals>
                            <goal>yarn</goal>
                        </goals>
                        <phase>integration-test</phase>
                        <configuration>
                            <workingDirectory>${e2e.frontend.dir}</workingDirectory>
                            <skip>${e2e.test.skip}</skip>
                            <arguments>${e2e.test.cmd}</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skipTests>${e2e.test.skip}</skipTests>
                </configuration>
                <executions>
                    <execution>
                        <id>integration-test</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <showLogs>true</showLogs>
                    <follow>true</follow>
                    <skip>${e2e.test.skip}</skip>
                    <imagesMap>
                        <wiremock>
                            <name>${docker.image.wiremock}</name>
                            <run>
                                <ports>
                                    <port>wiremock.port:8080</port>
                                </ports>
                                <volumes>
                                    <bind>
                                        <volume>${docker.wm.volume}:${docker.wm.volume.internal}</volume>
                                    </bind>
                                </volumes>
                                <log>
                                    <prefix>[WireMock]</prefix>
                                    <color>green</color>
                                </log>
                            </run>
                        </wiremock>
                        <dotcms>
                            <run>
                                <env>
                                    <CATALINA_OPTS>-XX:+PrintFlagsFinal</CATALINA_OPTS>
                                    <DB_MAX_TOTAL>15</DB_MAX_TOTAL>
                                    <DOT_INDEX_POLICY_SINGLE_CONTENT>FORCE</DOT_INDEX_POLICY_SINGLE_CONTENT>
                                    <DOT_ASYNC_REINDEX_COMMIT_LISTENERS>false</DOT_ASYNC_REINDEX_COMMIT_LISTENERS>
                                    <DOT_ASYNC_COMMIT_LISTENERS>false</DOT_ASYNC_COMMIT_LISTENERS>
                                    <DOT_CACHE_GRAPHQLQUERYCACHE_SECONDS>600</DOT_CACHE_GRAPHQLQUERYCACHE_SECONDS>
                                    <JVM_ENDPOINT_TEST_PASS>obfuscate_me</JVM_ENDPOINT_TEST_PASS>
                                    <DOT_ENABLE_SCRIPTING>true</DOT_ENABLE_SCRIPTING>
                                    <DOT_ANNOUNCEMENTS_BASE_URL>http://localhost:8080</DOT_ANNOUNCEMENTS_BASE_URL>
                                    <DOT_ALLOW_ACCESS_TO_PRIVATE_SUBNETS>true</DOT_ALLOW_ACCESS_TO_PRIVATE_SUBNETS>
                                    <DOT_DOTCMS_DEV_MODE>true</DOT_DOTCMS_DEV_MODE>
                                    <DOT_AI_API_URL>http://wm:8080/c</DOT_AI_API_URL>
                                    <DOT_AI_IMAGE_API_URL>http://wm:8080/i</DOT_AI_IMAGE_API_URL>
                                    <DOT_AI_EMBEDDINGS_API_URL>http://wm:8080/e</DOT_AI_EMBEDDINGS_API_URL>
                                    <DOT_AI_MODELS_API_URL>http://wm:8080/m</DOT_AI_MODELS_API_URL>
                                    <DOT_AI_DEBUG_LOGGER>true</DOT_AI_DEBUG_LOGGER>
                                </env>
                                <links combine.children="append">
                                    <link>wiremock:wm</link>
                                </links>
                            </run>
                        </dotcms>
                    </imagesMap>
                </configuration>
                <executions>
                    <execution>
                        <id>cleanup-at-start</id>
                        <goals>
                            <goal>stop</goal>
                            <goal>volume-remove</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                    </execution>
                    <execution>
                        <id>start</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
    </profiles>

</project>