<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.dotcms</groupId>
        <artifactId>dotcms-build-parent</artifactId>
        <version>${revision}${sha1}${changelist}</version>
        <relativePath>../../build-parent/pom.xml</relativePath>
    </parent>

    <packaging>jar</packaging>
    <artifactId>dotcms-e2e-java</artifactId>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <docker.image.wiremock>${ext.docker.image.wiremock}</docker.image.wiremock>
        <docker.wm.volume>./src/test/resources</docker.wm.volume>
        <docker.wm.volume.internal>/home/wiremock</docker.wm.volume.internal>
        <e2e.test.forkCount>4</e2e.test.forkCount>
        <e2e.test.skip>true</e2e.test.skip>
        <forkCount>${e2e.test.forkCount}</forkCount>
        <argLine>${debug.args}</argLine>
        <reuseForks>true</reuseForks>
        <rerunFailingTestsCount>3</rerunFailingTestsCount>
        <maven.failsafe.debugArgs/>
        <license.use>true</license.use>
        <version.cargo.plugin>1.10.6</version.cargo.plugin>
        <clean.docker.volumes>true</clean.docker.volumes>
        <buildDocker>true</buildDocker>
        <docker.base.image>tomcat:9.0.74-jdk11</docker.base.image>
        <docker.image.wiremock>${ext.docker.image.wiremock}</docker.image.wiremock>
        <docker.wm.volume>./src/test/resources</docker.wm.volume>
        <docker.wm.volume.internal>/home/wiremock</docker.wm.volume.internal>
        <wiremock.port>50505</wiremock.port>
        <wiremock.api.key>${ext.wiremock.api.key}</wiremock.api.key>
        <tomcat.port>8080</tomcat.port>
        <docker.jacoco.skip>false</docker.jacoco.skip>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.vavr</groupId>
            <artifactId>vavr</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-1.2-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j2-impl</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.vintage</groupId>
            <artifactId>junit-vintage-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.microsoft.playwright</groupId>
            <artifactId>playwright</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.dotcms</groupId>
                <artifactId>dotcms-application-bom</artifactId>
                <version>${project.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <skip>${e2e.test.skip}</skip>
                    <argLine>${debug.args}</argLine>
                    <forkCount>${e2e.test.forkCount}</forkCount>
                    <reuseForks>true</reuseForks>
                    <rerunFailingTestsCount>3</rerunFailingTestsCount>
                    <includes>
                        <include>**/E2eTestSuite.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <id>default</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <showLogs>true</showLogs>
                    <follow>true</follow>
                    <skip>${e2e.test.skip}</skip>
                    <imagesMap>
                        <wiremock>
                            <name>${docker.image.wiremock}</name>
                            <run>
                                <ports>
                                    <port>wiremock.port:8080</port>
                                </ports>
                                <volumes>
                                    <bind>
                                        <volume>${docker.wm.volume}:${docker.wm.volume.internal}</volume>
                                    </bind>
                                </volumes>
                                <log>
                                    <prefix>[WireMock]</prefix>
                                    <color>green</color>
                                </log>
                            </run>
                        </wiremock>
                        <dotcms>
                            <run>
                                <env>
                                    <CATALINA_OPTS>-XX:+PrintFlagsFinal</CATALINA_OPTS>
                                    <DB_MAX_TOTAL>15</DB_MAX_TOTAL>
                                    <DOT_INDEX_POLICY_SINGLE_CONTENT>FORCE</DOT_INDEX_POLICY_SINGLE_CONTENT>
                                    <DOT_ASYNC_REINDEX_COMMIT_LISTENERS>false</DOT_ASYNC_REINDEX_COMMIT_LISTENERS>
                                    <DOT_ASYNC_COMMIT_LISTENERS>false</DOT_ASYNC_COMMIT_LISTENERS>
                                    <DOT_CACHE_GRAPHQLQUERYCACHE_SECONDS>600</DOT_CACHE_GRAPHQLQUERYCACHE_SECONDS>
                                    <JVM_ENDPOINT_TEST_PASS>obfuscate_me</JVM_ENDPOINT_TEST_PASS>
                                    <DOT_ENABLE_SCRIPTING>true</DOT_ENABLE_SCRIPTING>
                                    <DOT_ANNOUNCEMENTS_BASE_URL>http://localhost:8080</DOT_ANNOUNCEMENTS_BASE_URL>
                                    <DOT_ALLOW_ACCESS_TO_PRIVATE_SUBNETS>true</DOT_ALLOW_ACCESS_TO_PRIVATE_SUBNETS>
                                    <DOT_DOTCMS_DEV_MODE>true</DOT_DOTCMS_DEV_MODE>
                                    <DOT_AI_API_URL>http://wm:8080/c</DOT_AI_API_URL>
                                    <DOT_AI_IMAGE_API_URL>http://wm:8080/i</DOT_AI_IMAGE_API_URL>
                                    <DOT_AI_EMBEDDINGS_API_URL>http://wm:8080/e</DOT_AI_EMBEDDINGS_API_URL>
                                    <DOT_AI_MODELS_API_URL>http://wm:8080/m</DOT_AI_MODELS_API_URL>
                                </env>
                                <links combine.children="append">
                                    <link>wiremock:wm</link>
                                </links>
                            </run>
                        </dotcms>
                    </imagesMap>
                </configuration>
                <executions>
                    <execution>
                        <id>cleanup-at-start</id>
                        <goals>
                            <goal>stop</goal>
                            <goal>volume-remove</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                    </execution>
                    <execution>
                        <id>start</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <phase>pre-integration-test</phase>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <phase>verify</phase>
                    </execution>
                    <!--<execution>
                        <id>docker-stop</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <skip>${e2e.test.skip}</skip>
                        </configuration>
                    </execution>-->
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
    </profiles>

</project>