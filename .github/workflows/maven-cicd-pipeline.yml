name: Maven CICD Pipeline

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        description: 'Tags'
        required: false
  push:
    branches:
        - master
        - release-*
    paths-ignore:
      - '.gitignore'
      - '.dockerignore'
      - 'dotCMS/src/main/webapp/html'
      - '!docker/**'
      - 'tools/**'
      - 'cicd/**'
      - '.cicd/**'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.github/ISSUE_TEMPLATE/**'
  pull_request:
    paths-ignore:
      - '.gitignore'
      - '.dockerignore'
      - 'dotCMS/src/main/webapp/html'
      - '!docker/**'
      - 'tools/**'
      - 'cicd/**'
      - '.cicd/**'
      - '*.md'
      - '*.adoc'
      - '*.txt'
      - '.github/ISSUE_TEMPLATE/**'
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref || github.run_id }}
  cancel-in-progress: true
env:
  JVM_TEST_MAVEN_OPTS: "-e -B"
jobs:
  attach-pr-number:
    runs-on: ubuntu-latest
    name: Attach pull request number
    if: github.event_name == 'pull_request'
    steps:
      - name: Create file
        shell: bash
        run: |
          echo -n ${{ github.event.number }} > pull-request-number
      - name: Upload pull request number
        uses: actions/upload-artifact@v3
        with:
          name: pull-request-number-${{ github.event.number }}
          path: pull-request-number
  build-jdk11:
    name: "Initial JDK 11 Build"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
      - name: Get Date
        id: get-date
        run: |
          echo "date=$(/bin/date -u "+%Y-%m")" >> $GITHUB_OUTPUT
        shell: bash
      - name: Cache Maven Repository
        id: cache-maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: mavencore-${{ steps.get-date.outputs.date }}
      - name: Cache Node
        id: cache-node
        uses: actions/cache@v3
        with:
          path: |
            core-web/node_modules
            core-web/installs
          key: node-${{ steps.get-date.outputs.date }}
      - name: Build and Test with Maven
        run: ./mvnw --no-transfer-progress --fail-at-end  --show-version -DskipTests=true -DskipITs=true clean install --file pom.xml

      - name: Tar Maven Repo
        shell: bash
        run: tar -czf maven-repo.tgz -C ~ .m2/repository

      - name: Persist Maven Repo
        uses: actions/upload-artifact@v3
        with:
          name: maven-repo
          path: maven-repo.tgz

      - name: Delete Local Artifacts From Cache
        shell: bash
        run: rm -r ~/.m2/repository/com/dotcms

      - name: Upload build reports (if build failed)
        uses: actions/upload-artifact@v3
        if: ${{ failure() || cancelled() }}
        with:
          name: "init-build-reports-Initial JDK 11 Build" #Should not be picked up for JunitReports
          path: |
            target/build-report.json
            LICENSE
          retention-days: 2
  linux-jvm-tests:
    name: JVM Unit Tests - JDK ${{matrix.java.name}}
    runs-on: ubuntu-latest
    # Skip master in forks
    if: "github.repository == 'dotCMS/core' || !endsWith(github.ref, '/master')"
    needs: build-jdk11
    timeout-minutes: 240
    env:
      MAVEN_OPTS: -Xmx2048m
    strategy:
      fail-fast: false
      matrix:
        java:
          - {
            name: "11",
            java-version: 11,
            distribution: 'temurin',
            maven_args: ""
          }
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK ${{ matrix.java.name }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java.java-version }}
          distribution: ${{ matrix.java.distribution }}

      - name: Download Maven Repo
        uses: actions/download-artifact@v3
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build
        run: eval ./mvnw $JVM_TEST_MAVEN_OPTS test -pl :dotcms-core ${{ matrix.java.maven_args}}
      - name: Prepare reports archive (if maven failed)
        if: failure()
        shell: bash
        run: find . -name '*-reports' -type d | tar -czf test-reports.tgz -T -
      - name: Upload reports Archive (if maven failed)
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-reports-linux-jvm${{matrix.java.name}}
          path: 'test-reports.tgz'
      - name: core-maven-unit-tests (if build failed)
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: "build-reports-JVM Tests - JDK ${{matrix.java.name}}"
          path: |
            **/target/*-reports/TEST-*.xml
            target/build-report.json
            LICENSE
          retention-days: 2

  linux-frontend-tests:
    name: Frontend Unit Tests
    runs-on: ubuntu-latest
    # Skip master in forks
    if: "github.repository == 'dotCMS/core' || !endsWith(github.ref, '/master')"
    needs: build-jdk11
    timeout-minutes: 240
    env:
      MAVEN_OPTS: -Xmx2048m
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v3

      - name: apt clean
        shell: bash
        run: sudo apt-get clean

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Download Maven Repo
        uses: actions/download-artifact@v3
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build
        run: eval ./mvnw $JVM_TEST_MAVEN_OPTS -pl :core-web test
      - name: Prepare failure archive (if maven failed)
        if: failure()
        shell: bash
        run: find . -name 'surefire-reports' -type d | tar -czf test-reports.tgz -T -
      - name: Upload failure Archive (if maven failed)
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-reports-frontend
          path: 'test-reports.tgz'
      - name: frontend-unit-tests
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: "build-reports-Frontend unit tests"
          path: |
            **/target/*-reports/**/TEST-*.xml
            target/build-report.json
            LICENSE
          retention-days: 2

  linux-integration-tests:
    name: JVM Integration Tests - JDK ${{matrix.java.name}} ${{matrix.suites.name}}
    runs-on: ubuntu-latest
    # Skip master in forks
    if: "github.repository == 'dotCMS/core' || !endsWith(github.ref, '/master')"
    needs: build-jdk11
    timeout-minutes: 240
    env:
      MAVEN_OPTS: -Xmx2048m
    strategy:
      fail-fast: false
      matrix:
        java:
          - {
            name: "11",
            java-version: 11,
            distribution: 'temurin',
            maven_args: ""
          }
        suites:
          - {
              name: "MainSuite 1a",
              pathName: "mainsuite1a",
              maven_args: '"-Dit.test=MainSuite1a" -Dit.test.forkcount=1'
          }
          - {
              name: "MainSuite 1b",
              pathName: "mainsuite1b",
              maven_args: '"-Dit.test=MainSuite1b" -Dit.test.forkcount=1'
          }
          - {
              name: "MainSuite 2a",
              pathName: "mainsuite2a",
              maven_args: '"-Dit.test=MainSuite2a" -Dit.test.forkcount=1'
          }
          - {
              name: "MainSuite 2b",
              pathName: "mainsuite2b",
              maven_args: '"-Dit.test=MainSuite2b" -Dit.test.forkcount=1'
          }
    steps:
      - uses: actions/checkout@v3

      - name: apt clean
        shell: bash
        run: sudo apt-get clean

      - name: Set up Integration Tests ${{ matrix.java.name }} ${{ matrix.suites.name }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java.java-version }}
          distribution: ${{ matrix.java.distribution }}

      - name: Download Maven Repo
        uses: actions/download-artifact@v3
        with:
          name: maven-repo
          path: .
      - name: Extract Maven Repo
        shell: bash
        run: tar -xzf maven-repo.tgz -C ~
      - name: Build
        env:
          DOT_DOTCMS_LICENSE: ${{ secrets.DOTCMS_LICENSE }}
        run: eval ./mvnw $JVM_TEST_MAVEN_OPTS verify -pl :dotcms-integration ${{ matrix.suites.maven_args}} ${{ matrix.java.maven_args}}
      - name: Prepare reports archive (if maven failed)
        if: failure()
        shell: bash
        run: find . -name '*-reports' -type d | tar -czf test-reports.tgz -T -
      - name: Upload failure Archive (if maven failed)
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: test-reports-linux-jvm${{matrix.java.name}}-${{matrix.suites.pathName}}
          path: 'test-reports.tgz'
      - name: failsafe-it-tests  # Uploads will be merged with same name
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: "build-reports-IT Tests - JDK ${{matrix.java.name}} - ${{matrix.suites.name}}"
          path: |
            **/target/*-reports/TEST-*.xml
            target/build-report.json
            LICENSE
          retention-days: 2
