name: DotCMS/UI Tests
on:
  pull_request:
    types: [synchronize, opened, reopened, ready_for_review]
  push:
    branches:
      - master
      - release-*
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_TOKEN: ${{ secrets.CICD_GITHUB_TOKEN }}
  PULL_REQUEST_URL: ${{ github.event.pull_request._links.html.href }}
  IS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}
  HEAD_REF: ${{ github.head_ref }}
jobs:
  module-matcher-job:
    name: Module Matcher
    runs-on: ubuntu-latest
    outputs:
      module_found: ${{ steps.module-matcher.outputs.module_found }}
    steps:
      - id: fetch-core
        name: Fetch Core repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - id: read-cicd-local-env
        name: Read CICD local library
        run: source ${GITHUB_WORKSPACE}/cicd/local-env.sh
      - id: module-matcher
        name: Module Matcher
        uses: ./.github/actions/module-matcher
        with:
          build_id: ${{ env.BUILD_ID }}
          current: core-web
  lint:
    runs-on: ubuntu-latest
    needs: module-matcher-job
    if: needs.module-matcher-job.outputs.module_found == 'true'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0

      - uses: actions/cache@v2
        with:
          path: |
            ./core-web/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('./core-web/**/package-lock.json') }}
      - name: Configuring Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: "16.13.2"
      - name: Installing dependencies
        run: |
          cd core-web
          npm install
      - name: Running Lint in dotcms-ui
        id: lint_step
        run: |
          cd core-web
          if ! (npm run nx affected -- --target=lint --base=remotes/origin/master --head=HEAD --exclude=dot-rules,dot-layout-grid,dot-primeng-theme-styles,dot-rules,dotcms,dotcms-field-elements,dotcms-js,dotcms-models,dotcms-webcomponents,dotcdn-e2e,dotcms-block-editor,dotcms-block-editor-e2e,dotcms-ui-e2e) then
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "color=#ff2400" >> $GITHUB_OUTPUT
            exit 1;
          fi
  build:
    needs: [module-matcher-job, lint]
    if: needs.module-matcher-job.outputs.module_found == 'true' && github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 1
      - uses: actions/cache@v2
        with:
          path: |
            ./core-web/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('./core-web/**/package-lock.json') }}
      - name: Configuring Node.js
        uses: actions/setup-node@v2-beta
        with:
          node-version: "16.13.2"
      - name: Installing dependencies
        run: |
          cd core-web
          npm install
      - name: Building for production
        run: |
          cd core-web
          npm run build:prod
      - name: Running dotcms-ui tests
        id: test_run
        run: |
          cd core-web
          if ! (npx nx run dotcms-ui:test) then
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "color=#ff2400" >> $GITHUB_OUTPUT
            exit 1;
          else
            echo "status=success" >> $GITHUB_OUTPUT
            echo "color=#5E7D00" >> $GITHUB_OUTPUT
          fi
      - name: Push Tests to GitHub
        id: persist_results
        if: success() || failure()
        run: |
          chmod +x .cicd/github.sh && source .cicd/github.sh
          persistResults
          echo "message=$(logResults)" >> $GITHUB_OUTPUT

      - name: Running dotcms-webcomponents tests
        id: test_run2
        run: |
          cd core-web
          if ! (npx nx run dotcms-webcomponents:test) then
            echo "status=failure" >> $GITHUB_OUTPUT
            echo "color=#ff2400" >> $GITHUB_OUTPUT
            exit 1;
          else
            echo "status=success" >> $GITHUB_OUTPUT
            echo "color=#5E7D00" >> $GITHUB_OUTPUT
          fi
