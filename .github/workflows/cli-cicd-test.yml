name: CLI tests
on:
  pull_request:
    paths:
      - 'tools/dotcms-cli/**'
  push:
    branches:
      - master
      - release-*
jobs:
  cli_tests:
    name: CLI tests
    runs-on: ubuntu-latest
    outputs:
      tests_results_status: ${{ steps.run-cli-tests.outputs.status }}
      tests_results_report_url: ${{ steps.publish-test-results.outputs.tests_report_url }}
      tests_results_log_url: ${{ steps.publish-test-results.outputs.test_logs_url }}
    steps:
      - id: checkout-core
        name: Checkout core
        uses: actions/checkout@v3
      - id: prepare-license
        name: Prepare license
        working-directory: ./tools/dotcms-cli/
        env:
          DOTCMS_LICENSE_KEY: ${{ secrets.DOTCMS_LICENSE }}
        run: |
          DOTCMS_LICENSE_PATH=${GITHUB_WORKSPACE}/tools/dotcms-cli/license
          mkdir -p ${DOTCMS_LICENSE_PATH}
          echo "${DOTCMS_LICENSE_KEY}" > ${DOTCMS_LICENSE_PATH}/license.dat
          echo "DOTCMS_LICENSE_FILE=${DOTCMS_LICENSE_PATH}/license.dat" >> "$GITHUB_ENV"

      - id: run-cli-tests
        name: Run cli tests
        working-directory: ./tools/dotcms-cli/
        run: |
          ./mvnw clean verify
          EXIT=$?
          
          if [ $EXIT -eq 0 ]; then
              OUTPUT_STATUS="PASSED"
          else
              OUTPUT_STATUS="FAILED"
          fi
          
          echo "status=$OUTPUT_STATUS" >> $GITHUB_OUTPUT
          
          ./mvnw surefire-report:report-only surefire-report:failsafe-report-only
               
          RESULTS_PATH=${{ github.workspace }}/tools/dotcms-cli/target/test-results
          XML_REPORTS_PATH=${RESULTS_PATH}/xml-reports
          HTML_REPORTS_PATH=${RESULTS_PATH}/html-reports
          
          POM_FILE=${{ github.workspace }}/tools/dotcms-cli/pom.xml
               
          MODULES=$(grep "<module>" $POM_FILE | sed 's/<module>//' | sed 's/<\/module>//')          
          for module in $MODULES
          do
            mkdir -p ${XML_REPORTS_PATH}/${module}
            cp -r ${module}/target/surefire-reports ${XML_REPORTS_PATH}/${module}
            cp -r ${module}/target/failsafe-reports ${XML_REPORTS_PATH}/${module}
            mkdir -p ${HTML_REPORTS_PATH}/${module}
            cp -r ${module}/target/site ${HTML_REPORTS_PATH}/${module}
          done

          echo "results_location=${XML_REPORTS_PATH}" >> "$GITHUB_OUTPUT"
          echo "results_report_location=${HTML_REPORTS_PATH}" >> "$GITHUB_OUTPUT"
          
          ls -la ${XML_REPORTS_PATH}
          ls -la ${HTML_REPORTS_PATH}
          tree ${RESULTS_PATH}
