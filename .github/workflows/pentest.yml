name: pentest

on:
 workflow_dispatch:
# cronjob will be used when it is fully set up and complete
#  schedule:
#    - cron: '0 3 1,15 * *'

jobs:
  start:
    runs-on: ubuntu-latest
    
    steps:
      - name: Start EC2 Instance
        run: |
          aws ec2 start-instances --instance-ids ${{secrets.AWS_EC2_INSTANCE_ID }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}

  scanner:
    needs: start
    runs-on: [self-hosted, linux, x64, dotCMS-server]

    steps:
      - name: Start dotCMS with docker
        id: start-dotcms
        run: |
          docker-compose down && docker-compose up -d
          timeout=$(date +%s)
          while true; do
            container_status=$(docker inspect --format='{{.State.Status}}' ubuntu_dotcms_1)
            echo "Container Status: $container_status"
            if [[ "$container_status" == "running" ]]; then
              break
            fi
            if [ $(($(date +%s)-timeout)) -gt 300 ]; then
              echo "Timeout waiting for dotCMS to start"
              exit 1
            fi
            sleep 1
          done
          timeout=$(($(date +%s)-timeout))

      - name: Install updates
        run: sudo apt-get update

      - name: Run nikto scan
        run: nikto -h localhost:8080 |& tee /home/ubuntu/RunnerTest/report.txt

      - name: Stop dotCMS
        run: docker-compose down
        working-directory: /home/ubuntu

  pull_request:
    needs: scanner
    runs-on: [self-hosted, linux, x64, dotCMS-server]
    
    steps:
      - name: Pull dotCMS/core-test-results repository
        run: |
          git -C home/ubuntu/core-test-results pull
        working-directory: /home/ubuntu

      - name: Switch to pentest branch
        run: |
          cd /home/ubuntu/core-test-results
          git checkout -b pentest
        working-directory: /home/ubuntu
        
# assuming pentest folder already exists on pentest branch
      - name: Copy report to pentest folder
        run: |
          cp /home/ubuntu/RunnerTest/report.txt /home/ubuntu/core-test-results/pentest
        working-directory: /home/ubuntu/core-test-results

      - name: Configure Git
        run: |
          git config --global user.name "TommyB13"
          git config --global user.email "tommybennett72@gmail.com"
        working-directory: /home/ubuntu/core-test-results

      - name: Add changes
        run: |
          git add pentest/report.txt
        working-directory: /home/ubuntu/core-test-results

      - name: Commit changes
        run: |
          git commit -m "Add pentest report"
        working-directory: /home/ubuntu/core-test-results

      - name: Push changes to pentest branch
        run: |
          git push origin pentest
        working-directory: /home/ubuntu/core-test-results

      - name: Create pull request
        uses: peter-evans/create-pull-request@v3
        with:
# need to update this token once I know for sure what the correct token is called
          token: ${{ secrets.SECRET_TOKEN }}
          branch: pentest
          base: main
          title: Pentest Results
          body: |
            This is an automated pull request with the latest pentest results.
            Please review the attached report.
          labels: pentest
          repo: dotCMS/core-test-results

      - name: Stop AWS EC2
        run: |
          aws ec2 stop-instances --instance-ids ${{secrets.AWS_EC2_INSTANCE_ID }}
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
