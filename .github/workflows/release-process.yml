name: release-process-automation
on:
  release:
    types: [published]
jobs:
  release-process:
    name: Release Process Automation
    runs-on: ubuntu-latest
    env:
      DOT_CICD_BRANCH: master
      GITHUB_USER_TOKEN: ${{ secrets.CICD_GITHUB_TOKEN }}
      PULL_REQUEST: ${{ github.event.number }}
      REPO_USERNAME: ${{ secrets.EE_REPO_USERNAME }}
      REPO_PASSWORD: ${{ secrets.EE_REPO_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DEBUG: true
    steps:
      - name: GITHUB CONTEXT
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "${GITHUB_CONTEXT}"
        if: env.DEBUG == 'true'
      - name: Checkout core
        uses: actions/checkout@v2
      - name: Set Common Vars
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BUILD_ID="${{ github.head_ref }}"
          else
            BUILD_ID=$(basename "${{ github.ref }}")
          fi

          BUILD_HASH=$(git log -1 --pretty=%h)
          eval $(cat dotCMS/gradle.properties| grep dotcmsReleaseVersion)
          DOTCMS_VERSION="${dotcmsReleaseVersion}"

          if [[ ${BUILD_ID} =~ ^release-[0-9]{2}.[0-9]{2}(.[0-9]{1,2})?$|^v[0-9]{2}.[0-9]{2}(.[0-9]{1,2})?$ ]]; then
            IS_RELEASE='true'
            DRY_RUN='false'
          else
            IS_RELEASE='false'
            DRY_RUN='true'
          fi

          echo "BUILD_ID=${BUILD_ID}" >> $GITHUB_ENV
          echo "EE_BUILD_ID=${BUILD_ID}" >> $GITHUB_ENV
          echo "BUILD_HASH=${BUILD_HASH}" >> $GITHUB_ENV
          echo "DOTCMS_VERSION=${DOTCMS_VERSION}" >> $GITHUB_ENV
          echo "IS_RELEASE=${IS_RELEASE}" >> $GITHUB_ENV
      - name: Prepare dot-cicd
        run: |
          sh -c "$(curl -fsSL https://raw.githubusercontent.com/dotCMS/dot-cicd/${DOT_CICD_BRANCH}/seed/install-dot-cicd.sh)"
      - name: Run DotCMS Release Docker Image
        run: |
          ../dotcicd/library/pipeline.sh runRelease
      - name: Discover docker tags
        id: discover-docker-tags
        uses: dotcms/discover-docker-tags-action@main
        with:
          version: ${{ env.DOTCMS_VERSION }}
          hash: ${{ env.BUILD_HASH }}
          update_stable: ${{ env.IS_RELEASE }}
          also_latest: ${{ env.IS_RELEASE }}
      - name: Publish docker image
        id: publish-docker-image
        uses: dotcms/publish-docker-image-action@main
        with:
          dot_cicd_branch: ${{ env.DOT_CICD_BRANCH }}
          build_id: ${{ env.BUILD_ID }}
          tags: ${{ steps.discover-docker-tags.outputs.discovered_tags }}
          github_user_token: ${{ secrets.CICD_GITHUB_TOKEN }}
          docker_hub_username: ${{ secrets.DOCKER_USERNAME }}
          docker_hub_token: ${{ secrets.DOCKER_TOKEN }}
          dry_run: ${{ env.DRY_RUN }}
      - name: Slack Notification
        if: success() && env.jobRun == 'true'
        uses: rtCamp/action-slack-notify@master
        env:
          SLACK_WEBHOOK: ${{ secrets.RELEASE_SLACK_WEBHOOK }}
          SLACK_USERNAME: dotcms-bot
          SLACK_TITLE: "Important news!"
          SLACK_MSG_AUTHOR: " "
          MSG_MINIMAL: true
          SLACK_FOOTER: ""
          SLACK_ICON: https://avatars.slack-edge.com/temp/2021-12-08/2830145934625_e4e464d502865ff576e4.png
          SLACK_MESSAGE: "<!channel> This automated script is excited to announce the release of a new version of dotCMS - dotCMS ${{ env.BUILD_ID }} :rocket:"
