name: release-process-automation
on:
  push: #release:
#    types: [created]
jobs:
  release-process:
    name: Release Process Automation
    runs-on: ubuntu-latest
    env:
      DOT_CICD_CLOUD_PROVIDER: github
      DOT_CICD_TARGET: core
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_USER: dotcmsbuild
      GITHUB_USER_TOKEN: ${{ secrets.USER_TOKEN }}
      PULL_REQUEST: ${{ github.event.number }}
      TEST_RUN: true
      DEBUG: false
    steps:
      - name: GITHUB CONTEXT
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "${GITHUB_CONTEXT}"
        if: env.DEBUG == 'true'
      - name: Get commit message
        id: get-commit-message
        uses: dotcms/get-commit-message@master
        with:
          accessToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Set Common Vars
        run: |
          BRANCH=$(basename "${{ github.ref }}")
          REPO_USERNAME=${{ secrets.EE_REPO_USERNAME }}
          REPO_PASSWORD=${{ secrets.EE_REPO_PASSWORD }}
          AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          echo "branch=${BRANCH}" >> $GITHUB_ENV
          echo "ee_branch=${BRANCH}" >> $GITHUB_ENV
          echo "repo_username=${REPO_USERNAME}" >> $GITHUB_ENV
          echo "repo_password=${REPO_PASSWORD}" >> $GITHUB_ENV
          echo "aws_access_key_id=${AWS_ACCESS_KEY_ID}" >> $GITHUB_ENV
          echo "aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}" >> $GITHUB_ENV
          echo "base_folder=$(pwd)" >> $GITHUB_ENV
      - name: Prepare dot-cicd
        run: |
          export DOT_CICD_BRANCH=18562-automate-release-process
          sh -c "$(curl -fsSL https://raw.githubusercontent.com/dotCMS/dot-cicd/${DOT_CICD_BRANCH}/seed/install-dot-cicd.sh)"
          mkdir .ssh
          echo "${{ secrets.EE_RSA_KEY }}" > .ssh/id_rsa
          chmod 600 .ssh/id_rsa
      - name: Build DotCMS Release Docker Image
        run: |
          dotcicd/library/pipeline.sh buildRelease
        if: env.TEST_RUN == 'true'
      - name: Run DotCMS Release Docker Image
        run: |
          dotcicd/library/pipeline.sh runRelease
#      - name: Build distro files
#        run: |
#          dotcicd/library/pipeline.sh buildDistro
#      - name: Generate Javadoc
#        run: |
#          dotcicd/library/pipeline.sh generateJavadoc
#      - name: Push distro and javadoc
#        run: |
#          dotcicd/library/pipeline.sh pushToStaticDotCMS all
#        env:
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#      - name: Update OSGI version
#        run: |
#          dotcicd/library/pipeline.sh updateOsgiVersion
#      - name: Update/Publish Docker Image
#        run: |
#          dotcicd/library/pipeline.sh updatePublishDockerImage
