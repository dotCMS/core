name: release-process-automation
on:
  push: #release:
#    types: [created]
jobs:
  release-process:
    name: Release Process Automation
    runs-on: ubuntu-latest
    env:
      DOT_CICD_BRANCH: 18562-automate-release-process
      DOT_CICD_CLOUD_PROVIDER: github
      DOT_CICD_TARGET: core
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_USER: dotcmsbuild
      GITHUB_USER_TOKEN: ${{ secrets.USER_TOKEN }}
      PULL_REQUEST: ${{ github.event.number }}
      REPO_USERNAME: ${{ secrets.EE_REPO_USERNAME }}
      REPO_PASSWORD: ${{ secrets.EE_REPO_PASSWORD }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      SSH_RSA_KEY: ${{ secrets.EE_RSA_KEY }}
      TEST_RUN: true
      DEBUG: false
    steps:
      - name: GITHUB CONTEXT
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "${GITHUB_CONTEXT}"
        if: env.DEBUG == 'true'
      - name: Get commit message
        id: get-commit-message
        uses: dotcms/get-commit-message@master
        with:
          accessToken: ${{ secrets.GITHUB_TOKEN }}
      - name: Set Common Vars
        run: |
          BRANCH=$(basename "${{ github.ref }}")
          echo "BRANCH=${BRANCH}" >> $GITHUB_ENV
          echo "EE_BRANCH=${BRANCH}" >> $GITHUB_ENV
          echo "BASE_FOLDER=$(pwd)" >> $GITHUB_ENV
          docker --version
      - name: Prepare dot-cicd
        run: |
          sh -c "$(curl -fsSL https://raw.githubusercontent.com/dotCMS/dot-cicd/${DOT_CICD_BRANCH}/seed/install-dot-cicd.sh)"
      - name: Build DotCMS Release Docker Image
        run: |
          dotcicd/library/pipeline.sh buildRelease
        if: env.TEST_RUN == 'true'
      - name: Run DotCMS Release Docker Image
        run: |
          dotcicd/library/pipeline.sh runRelease
