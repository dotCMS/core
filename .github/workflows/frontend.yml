name: Frontend
on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    paths:
      - 'core-web/**'

jobs:

  check-all:
    outputs:
      name: ${{ steps.lint.outputs.name || steps.test.outputs.name || steps.build.outputs.name }}
      status: ${{ steps.lint.outputs.status || steps.test.outputs.status || steps.build.outputs.status }}
      color: ${{ steps.lint.outputs.color || steps.test.outputs.color || steps.build.outputs.color }}
      message: ${{ steps.persist_results.outputs.message }}
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        task:
          - lint
          - test
          - build

    name: Frontend Checks
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.17.0
          cache: yarn
          cache-dependency-path: 'core-web/yarn.lock'

      - name: Install Dependencies
        run: yarn --frozen-lockfile
        working-directory: core-web

      - name: Run Nx Affected ${{ matrix.task }}
        working-directory: core-web
        run: |
          if [ "${{ matrix.task }}" = "test" ] || [ "${{ matrix.task }}" = "lint" ]; then
            
            exclude_option="--exclude='*,!tag:check:test'"
            if ! (npx nx affected --target=${{ matrix.task }} --base=origin/master --head=HEAD --parallel $exclude_option) then
              echo "name=:x: ${{ matrix.task }}" >>$GITHUB_OUTPUT
              echo "status=failure" >>$GITHUB_OUTPUT
              echo "color=#ff2400" >>$GITHUB_OUTPUT
              exit 1;
            fi
          elif [ "${{ matrix.task }}" = "build" ]; then
            
            if ! (npx nx run dotcms-ui:build:production) then
              echo "name=:x: ${{ matrix.task }}" >>$GITHUB_OUTPUT
              echo "status=failure" >>$GITHUB_OUTPUT
              echo "color=#ff2400" >>$GITHUB_OUTPUT
              exit 1;
            fi
          fi
