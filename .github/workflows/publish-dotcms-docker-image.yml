name: Publish DotCMS docker image
on:
  workflow_dispatch:
    inputs:
      custom_label:
        description: 'Custom label to add as part of the tag'
        required: false
      update_stable:
        description: 'Update stable tags'
        required: true
        default: 'false'
      also_latest:
        description: 'Update also the "latest" tag (relies on update_stable input to be set to true)'
        required: false
        default: 'false'
      dry_run:
        description: 'Dry Run (does not publish to docker hub)'
        required: false
        default: 'false'
      multi_arch:
        description: 'Multi-arch flag, true: linux/amd64,linux/arm64 or false: linux/amd64'
        required: false
        default: 'false'
jobs:
  publish_image:
    name: Publish DotCMS docker image
    runs-on: ubuntu-latest
    steps:
      - name: GITHUB CONTEXT
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
        if: env.DEBUG == 'true'
      - name: Checkout core
        uses: actions/checkout@v3
      - name: Set Common Vars
        run: |
          BUILD_ID=$(basename "${{ github.ref }}")
          BUILD_HASH=$(git log -1 --pretty=%h)
          eval $(cat dotCMS/gradle.properties| grep dotcmsReleaseVersion)
          DOTCMS_VERSION="${dotcmsReleaseVersion}"
          PLATFORMS='linux/amd64'
          [[ "${{ github.event.inputs.multi_arch }}" == 'true' ]] && PLATFORMS='linux/amd64,linux/arm64'

          echo "BUILD_ID=${BUILD_ID}" >> $GITHUB_ENV
          echo "BUILD_HASH=${BUILD_HASH}" >> $GITHUB_ENV
          echo "DOTCMS_VERSION=${DOTCMS_VERSION}" >> $GITHUB_ENV
          echo "PLATFORMS=${PLATFORMS}" >> $GITHUB_ENV
      - name: Discover docker tags
        id: discover-docker-tags
        uses: dotcms/discover-docker-tags-action@v2.0
        with:
          version: ${{ env.DOTCMS_VERSION }}
          hash: ${{ env.BUILD_HASH }}
          label: ${{ github.event.inputs.custom_label }}
          update_stable: ${{ github.event.inputs.update_stable }}
          also_latest: ${{ github.event.inputs.also_latest }}
          image_name: dotcms/dotcms
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0
        with:
          platforms: amd64,arm64
        if: github.event.inputs.multi_arch == 'true'
      - id: docker-setup-buildx
        name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v2.2.1
        with:
          platforms: ${{ env.PLATFORMS }}
          driver-opts: |
            image=moby/buildkit:v0.10.6
        if: github.event.inputs.multi_arch == 'true'
      - name: Docker Hub login
        uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3.2.0
        with:
          context: ./docker/dotcms
          push: true
          tags: ${{ steps.discover-docker-tags.outputs.discovered_tags }}
          platforms: ${{ env.PLATFORMS }}
          build-args: |
            BUILD_FROM=COMMIT
            BUILD_ID=${{ env.BUILD_ID }}
