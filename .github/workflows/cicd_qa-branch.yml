# QA Build-Test-Deploy Workflow
#
# This workflow is triggered when a qa branch is pushed or manually via workflow_dispatch.
# It orchestrates a comprehensive QA build, test, and deployment process.
#
# Key features:
# - Triggers automatically when a qa branch is pushed
# - Gets version information from .mvn/maven.config in the qa branch
# - Uses standardized environment name throughout the workflow
# - Manual trigger option with configurable inputs
# - Comprehensive process including build, tests, CLI artifact building, and deployment
# - Deployment to the qa environment
# - Final reporting of the workflow status

name: 'QA Workflow'

on:
  workflow_dispatch:
    inputs:
      qa_branch:
        description: 'QA branch name'
        required: true
        type: string
      reuse-previous-build:
        description: 'Reuse artifacts from previous workflows'
        type: boolean
        default: false
        required: false
      build-on-missing-artifacts:
        description: 'Build if artifacts are missing'
        type: boolean
        default: true
        required: false
      run-all-tests:
        description: 'Run all tests'
        type: boolean
        default: true
        required: false
  push:
    branches:
      - 'qa-**'

# Concurrency group to manage multiple runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: false

jobs:
  # Get QA information from branch
  get-branch-info:
    name: Get QA Info
    uses: ./.github/workflows/cicd_comp_get-branch-info.yml
    with:
      branch_name: ${{ inputs.qa_branch }}
      prefix: "qa"

  # Initialize the QA build process
  initialize:
    name: Initialize
    needs: [get-branch-info]
    uses: ./.github/workflows/cicd_comp_initialize-phase.yml
    with:
      reuse-previous-build: ${{ inputs.reuse-previous-build || false }}
      build-on-missing-artifacts: ${{ inputs.build-on-missing-artifacts || false }}
      validation-level: 'full'

  # Build job - only runs if no artifacts were found during initialization
  build:
    name: QA Build
    needs: [get-branch-info, initialize]
    if: needs.initialize.outputs.found_artifacts == 'false'
    uses: ./.github/workflows/cicd_comp_build-phase.yml
    with:
      core-build: true
      version: ${{ needs.get-branch-info.outputs.branch_version }}
    permissions:
      contents: read
      packages: write

  # Test job - runs comprehensive tests
  test:
    name: QA Test
    needs: [get-branch-info, initialize, build]
    if: always() && !failure() && !cancelled()
    uses: ./.github/workflows/cicd_comp_test-phase.yml
    with:
      run-all-tests: ${{ inputs.run-all-tests || true }}
      jvm_unit_test: true
      integration: true
      postman: true
      karate: true
      frontend: true
      cli: true
      e2e: true
      artifact-run-id: ${{ needs.initialize.outputs.artifact-run-id }}
    secrets:
      DOTCMS_LICENSE: ${{ secrets.DOTCMS_LICENSE }}
    permissions:
      contents: read
      packages: write

  # CLI Build job - builds CLI artifacts
  build-cli:
    name: QA CLI Build
    needs: [get-branch-info, initialize, test]
    if: always() && !failure() && !cancelled()
    uses: ./.github/workflows/cicd_comp_cli-native-build-phase.yml
    with:
      buildNativeImage: true
      branch: ${{ github.ref }}
      artifact-run-id: ${{ needs.initialize.outputs.artifact-run-id }}
      version: ${{ needs.get-branch-info.outputs.branch_version }}

  # Deployment job - deploys to the qa environment
  deployment:
    name: QA Deployment
    needs: [get-branch-info, initialize, build-cli, test]
    if: always() && !failure() && !cancelled()
    uses: ./.github/workflows/cicd_comp_deployment-phase.yml
    with:
      artifact-run-id: ${{ needs.initialize.outputs.artifact-run-id }}
      environment: ${{ needs.get-branch-info.outputs.environment }}
      deploy-dev-image: true
      reuse-previous-build: ${{ inputs.reuse-previous-build || false }}
      docker_tag: ${{ needs.get-branch-info.outputs.docker_tag }}
      maven_revision: ${{ needs.get-branch-info.outputs.maven_revision }}
      maven_changelist: ${{ needs.get-branch-info.outputs.maven_changelist }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      EE_REPO_USERNAME: ${{ secrets.EE_REPO_USERNAME }}
      EE_REPO_PASSWORD: ${{ secrets.EE_REPO_PASSWORD }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      DEV_REQUEST_TOKEN: ${{ secrets.DEV_REQUEST_TOKEN }}

  # Finalize job - aggregates results from previous jobs
  finalize:
    name: Finalize
    if: always()
    needs: [get-branch-info, initialize, build, build-cli, test, deployment]
    uses: ./.github/workflows/cicd_comp_finalize-phase.yml
    with:
      artifact-run-id: ${{ needs.initialize.outputs.artifact-run-id }}
      needsData: ${{ toJson(needs) }}

  # Report job - generates and sends the final workflow report
  report:
    name: Report
    if: always()
    needs: [finalize]
    uses: ./.github/workflows/cicd_post-workflow-reporting.yml
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }} 