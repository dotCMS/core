name: pentest

on:
  workflow_dispatch:

jobs:

  scanner:
    runs-on: [self-hosted, Windows, x64]

    steps:
      - name: Start dotCMS with docker
        id: start-dotcms
        run: |
          docker-compose down && docker-compose up -d

      - name: Install updates
        run: sudo apt-get update
        
      - name: Pull rashik1144/core-test-results repository
        run: |
          git config pull.rebase false
          git remote set-url origin git@github.com:rashik1144/core-test-results.git
          git pull origin master
        working-directory: C:\core-test-results
        
      - name: Get latest release version
        id: get-latest-release
        run: |
          releases=$(curl -s "https://api.github.com/repos/rashik1144/test-copy/releases")
          release_version=$(echo "$releases" | jq -r '.[].tag_name' | sort -rV | head -n 1 | sed 's/^v//')
          formatted_version="release-$release_version"
          echo "Latest release version: $formatted_version"
          echo "release_version=$formatted_version" >> $GITHUB_ENV
        
      - name: Check if web server is running
        run: |
          server_status=$(wget --spider -S http://localhost:8082 2>&1 | grep "HTTP/" | awk '{print $2}')
          if [[ "$server_status" == "200" ]]; then
            echo "Web server is running"
          else
            echo "Web server is not running"
            exit 1
          fi

      - name: Generate SBOM and store it
        run: |
          # Install SBOM tool if required
          sudo apt update && sudo apt install sbompkg

          # Analyze the dotCMS docker image and store the SBOM in SPDX format
          sbompkg analyze docker://dotcms:latest > C:\sbom.spdx


      - name: Stop dotCMS
        run: docker-compose down
        working-directory: C:\
          
      - name: Switch to release branch
        run: |
          branch_name="${{ env.release_version }}"
          git fetch origin "$branch_name" && git checkout "$branch_name" || git checkout -b "$branch_name"
        working-directory: C:\core-test-results

      - name: Add files and commit changes
        run: |
          git add .
          git commit -m "Add test results for release ${{ env.release_version }}"
        working-directory: C:\core-test-results

      - name: Push changes to rashik1144/core-test-results repository
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.SECRET_PENTEST_TOKEN }}
          branch: ${{ env.release_version }}
          force: true
          directory: C:\core-test-results\
          repository: rashik1144/core-test-results
          
  maintenance:
    runs-on: [self-hosted, Windows, x64]

    steps:
      - name: Connect to self-hosted runner
        run: echo "Connecting to self-hosted runner to avoid termination due to inactivity"

