name: sbom

on:
  workflow_dispatch:

jobs:
  scanner:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout core-test-results repository
        uses: actions/checkout@v3
        with:
          path: core-test-results

      - name: Start dotCMS with Docker
        id: start-dotcms
        run: |
          # Download the dotCMS Docker image
          docker pull dotcms/dotcms:latest
          # Run the Docker container
          docker run -d -p 8082:8082 dotcms/dotcms:latest

      - name: Get latest release version
        id: get-release-version
        run: |
          # Fetch the latest release version from GitHub
          releases=$(curl -s https://api.github.com/repos/dotCMS/core/releases)
          release_version=$(echo "$releases" | jq -r '.[0].tag_name' | sed 's/^v//')
          formatted_version="release-$release_version"
          echo "Latest release version: $formatted_version"
          echo "release_version=$formatted_version" >> $GITHUB_ENV

      - name: Check server status
        id: check-server-status
        run: |
          # Check if the dotCMS server is running
          server_status=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8082/dotAdmin)
          if [ "$server_status" -eq 200 ]; then
            echo "Web server is running"
          else
            echo "Web server is not running"
            exit 1
          fi

      - name: Scan Docker Image with Syft
        run: |
          # Ensure pipx is installed and then install Syft
          pipx install syft
          syft dotcms/dotcms:latest -o cyclonedx-xml > core-test-results/cyclonedx.json

      - name: Stop dotCMS
        run: |
          # Stop and remove the Docker container
          docker ps -q --filter "ancestor=dotcms/dotcms:latest" | xargs docker stop
          docker system prune -f

      - name: Switch to release branch
        run: |
          cd core-test-results
          branch_name="${{ env.release_version }}"
          git fetch origin $branch_name
          if ! git checkout $branch_name; then
            git checkout -b $branch_name origin/$branch_name
          fi

      - name: Add files and commit changes
        run: |
          cd core-test-results
          git add .
          git commit -m "Add test results for release ${{ env.release_version }}"

      - name: Push changes to rashik1144/core-test-results repository
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.SECRET_PENTEST_TOKEN }}
          branch: ${{ env.release_version }}
          force: true
          directory: core-test-results
          repository: rashik1144/core-test-results
          
  maintenance:
    runs-on: ubuntu-latest

    steps:
      - name: Connect to self-hosted runner
        run: echo "This job is run on an Ubuntu runner. No specific connection required."
