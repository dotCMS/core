name: pentest

on:
  workflow_dispatch:

jobs:

  scanner:
    runs-on: [self-hosted, Windows, x64]

    steps:
      - name: Start dotCMS with docker
        id: start-dotcms
        run: |
          docker-compose down 
          docker-compose up -d
        
      - name: Pull rashik1144/core-test-results repository
        run: |
          git config pull.rebase false
          git remote add origin https://github.com/rashik1144/core-test-results.git
          git pull origin master
        working-directory: C:\Users\rashi\core-test-results
        
      - name: Get latest release version
        id: get-latest-release
        run: |
          $releases = Invoke-WebRequest -Uri "https://api.github.com/repos/rashik1144/test-copy/releases" | ConvertFrom-Json
          $release_version = ($releases | ForEach-Object { $_.tag_name }) | Sort-Object -Descending | Select-Object -First 1 -ExpandProperty TrimStart 'v'
          $formatted_version = "release-$release_version"
          Write-Output "Latest release version: $formatted_version"
          echo "release_version=$formatted_version" >> $env:GITHUB_ENV

        
      - name: Check server status
        id: check-server-status
        run: |
          $server_status = (Invoke-WebRequest -Uri "http://localhost:8082" -Method Head -UseBasicParsing).StatusCode
          if ($server_status -eq 200) {
            Write-Output "Web server is running"
          } else {
            Write-Output "Web server is not running"
            exit 1
          }


      - name: Generate SBOM and store it
        run: |
          # Install SBOM tool if required
          sudo apt update && sudo apt install sbompkg

          # Analyze the dotCMS docker image and store the SBOM in SPDX format
          sbompkg analyze docker://dotcms:latest > C:\Users\rashi\sbom.spdx


      - name: Stop dotCMS
        run: docker-compose down
        working-directory: C:\Users\rashi
          
      - name: Switch to release branch
        run: |
          branch_name="${{ env.release_version }}"
          git fetch origin "$branch_name" && git checkout "$branch_name" || git checkout -b "$branch_name"
        working-directory: C:\Users\rashi\core-test-results

      - name: Add files and commit changes
        run: |
          git add .
          git commit -m "Add test results for release ${{ env.release_version }}"
        working-directory: C:\Users\rashi\core-test-results

      - name: Push changes to rashik1144/core-test-results repository
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.SECRET_PENTEST_TOKEN }}
          branch: ${{ env.release_version }}
          force: true
          directory: C:\Users\rashicore-test-results\
          repository: rashik1144/core-test-results
          
  maintenance:
    runs-on: [self-hosted, Windows, x64]

    steps:
      - name: Connect to self-hosted runner
        run: echo "Connecting to self-hosted runner to avoid termination due to inactivity"

