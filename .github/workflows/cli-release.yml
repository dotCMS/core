name: dotCLI Release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
      next:
        description: 'Next version'
        required: false
        default: '1.0.0-SNAPSHOT'
      branch:
        description: 'Branch to cut from'
        required: true
      dry_run:
        description: 'Dry run'
        required: true
  push:
    branches:
      - '25951-implement-gha-generate-cli-release'

defaults:
  run:
    shell: bash

env:
  JAVA_VERSION: 11
  JAVA_DISTRO: temurin

jobs:         
  precheck:
    name: Pre-check
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.version.outputs.VERSION }}
      NEXT: ${{ steps.version.outputs.NEXT }}
      BRANCH: ${{ steps.version.outputs.BRANCH }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set release version
        id: version
        working-directory: ${{ github.workspace }}/tools/dotcms-cli
        shell: bash
        run: |
          VERSION=${{ github.event.inputs.version || '1.3.0' }}
          NEXT=${{ github.event.inputs.next }}
          BRANCH=${{ github.event.inputs.branch || '25951-implement-gha-generate-cli-release' }}
          DRY_RUN=${{ github.event.inputs.dry_run || false }}
          
          echo "VERSION=$VERSION"
          echo "NEXT=$NEXT"
          echo "BRANCH=$BRANCH"
          echo "DRY_RUN=$DRY_RUN"

          ./mvnw -B -ntp versions:set versions:commit -DnewVersion=$VERSION
          
          git config --global user.name "dcolina"
          git config --global user.email "daniel.colina@dotcms.com"
          
          git commit -a -m "üèÅ Releasing version $VERSION"
          git push origin "$BRANCH"
          
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
          echo "NEXT=$NEXT" >> "$GITHUB_OUTPUT"
          echo "BRANCH=$BRANCH" >> "$GITHUB_OUTPUT"

  release:
    needs: [ precheck ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # ref: master
          ref: '25951-implement-gha-generate-cli-release'
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRO }}

      - name: Cache Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2          

      - name: Prepare dotCMS license
        env:
          DOTCMS_LICENSE_KEY: ${{ secrets.DOTCMS_LICENSE }}
        run: |
          DOTCMS_LICENSE_PATH=${GITHUB_WORKSPACE}/tools/dotcms-cli/license
          mkdir -p ${DOTCMS_LICENSE_PATH}
          echo "${DOTCMS_LICENSE_KEY}" > ${DOTCMS_LICENSE_PATH}/license.dat
          echo "DOTCMS_LICENSE_FILE=${DOTCMS_LICENSE_PATH}/license.dat" >> "$GITHUB_ENV"

      - name: Build distribution
        working-directory: ${{ github.workspace }}/tools/dotcms-cli
        run: |
          ./mvnw -U clean install -Dtest.failure.ignore=true -DskipTests
          ./mvnw package -Dquarkus.package.type=uber-jar -DskipTests

      - name: Releaser
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_PROJECT_VERSION: ${{ needs.precheck.outputs.VERSION }}
          JRELEASER_SLACK_WEBHOOK: ${{ secrets.RELEASE_SLACK_WEBHOOK }}
          JRELEASER_SLACK_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        working-directory: ${{ github.workspace }}
        run: |
          tools/dotcms-cli/mvnw -Prelease jreleaser:full-release -Djreleaser.dry.run=${{ needs.precheck.outputs.DRY_RUN }} -Djreleaser.git.root.search=true -pl :dotCMS-cli

      - name: Set next version
        run: |
          ./mvnw -B -ntp versions:set versions:commit -DnewVersion=${{ needs.precheck.outputs.NEXT }}

          git commit -a -m "‚¨ÜÔ∏è  Next version $NEXT"
          git push origin "$BRANCH"