name: Build/Push dotCMS docker image (on release)
on:
  push:
    branches:
      - release-*
      - issue-26748-maven-build-docker-image
  repository_dispatch:
    types:
      - enterprise-update
jobs:
  prepare-build:
    name: Prepare build
    runs-on: ubuntu-latest
    steps:
      - run: echo 'GitHub context'
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
      - name: Process Params
        run: |
          if [[ "${{ github.event_name }}" == 'repository_dispatch' ]]; then
            BUILD_ID=${{ github.event.client_payload.build_id }}
          else
            BUILD_ID=$(basename "${{ github.ref }}")
          fi

          if [[ -z "${BUILD_ID}" ]]; then
            echo 'Could not resolve BUILD_ID, aborting'
            exit 1
          else
            echo "Found BUILD_ID: ${BUILD_ID}"
          fi

          echo "BUILD_ID=${BUILD_ID}" >> $GITHUB_ENV

  build_push_image:
    name: Build/Push Image
    needs: prepare-build
    uses: ./.github/workflows/maven-build-docker-image.yml
    with:
      ref: ${{ env.BUILD_ID }}
      docker_platforms: linux/amd64,linux/arm64
      force_snapshot: true
    secrets:
      docker_io_username: ${{ secrets.DOCKER_USERNAME }}
      docker_io_token: ${{ secrets.DOCKER_TOKEN }}
      ghcr_io_username: ${{ secrets.DOCKER_USERNAME }}
      ghcr_io_token: ${{ secrets.GHCR_TOKEN }}

  finish_build_push:
    name: Finish Build/Push
    needs: build_push_image
    runs-on: ubuntu-latest
    steps:
      - name: Format Tags
        id: format-tags
        run: |
          tags=''
          tags_arr=( ${{ needs.build_push_image.outputs.tags }} )

          for tag in "${tags_arr[@]}"
          do
            [[ -n "${tags}" ]] && tags="${tags}, "
            tags="${tags}\`${tag}\`"
          done

          echo "tags=${tags}" >> $GITHUB_OUTPUT

      - name: Slack Notification
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.DEVELOPERS_SLACK_WEBHOOK }}
          SLACK_USERNAME: dotBot
          SLACK_TITLE: "Attention dotters: Docker image built!"
          SLACK_MSG_AUTHOR: " "
          MSG_MINIMAL: true
          SLACK_FOOTER: ""
          SLACK_ICON: https://avatars.githubusercontent.com/u/1005263?s=200&v=4
          SLACK_MESSAGE: "<!channel> This automated script is happy to announce that a new docker image has been built for *${{ needs.build_push_image.outputs.version }}* with tag: ${{ steps.format-tags.outputs.tags }} :docker:"
