name: Maven Docker Build

on:
  push:
    branches:
      - 'testing-mvn-build'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref || github.run_id }}
  cancel-in-progress: true
env:
  JVM_TEST_MAVEN_OPTS: "-e -B"
jobs:
  build-dotcms-jdk11:
    name: "Initial dotCMS Build"
    runs-on: dot-xl-runner
    env:
      MAVEN_OPTS: -Xmx2048m
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      - name: Get Date
        id: get-date
        run: |
          echo "date=$(/bin/date -u "+%Y-%m")" >> $GITHUB_OUTPUT
        shell: bash

      - name: Add SHORT_SHA env property with commit short sha
        id: vars
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_OUTPUT
      - name: Check SHORT_SHA
        run: echo ${{ steps.vars.outputs.SHORT_SHA }}

      - name: Read Cached Maven Repository
        id: cache-maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: mavencore-${{ steps.get-date.outputs.date }}

      - name: Read Cached Node Modules
        id: cache-node
        uses: actions/cache@v3
        with:
          path: |
            core-web/node_modules
            core-web/installs
          key: node-${{ steps.get-date.outputs.date }}

      - name: Build WAR with Maven
        run: ./mvnw --show-version -DskipTests=true -DskipITs=true clean install --file pom.xml

      - name: Cache dotCMS TOMCAT
        uses: actions/upload-artifact@v3
        with:
          name: dotcms-tomcat-${{ steps.vars.outputs.SHORT_SHA }}
          path: dotcms-war/target/dotcms-war-1.0.0-SNAPSHOT.zip

      - name: Cache dotCMS WAR
        uses: actions/upload-artifact@v3
        with:
          name: dotcms-war-${{ steps.vars.outputs.SHORT_SHA }}
          path: dotcms-war/target/dotcms-war-1.0.0-SNAPSHOT.war

      - name: Docker Tags
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            dotcms/dotcms
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha,enable=true,priority=100,prefix=master_,suffix=_SNAPSHOT,format=short
            type=raw,value=master_latest_SNAPSHOT

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Prune Docker Volumes
        run: "docker system prune --volumes -af"

      - name: Download Tomcat from Cache
        uses: actions/download-artifact@v3
        with:
          name: dotcms-tomcat-${{ steps.vars.outputs.SHORT_SHA }}
          path: docker/dotcms-mvn/ROOT/srv/

      - name: Extract Tomcat
        shell: bash
        run: |
          cd docker/dotcms-mvn/ROOT/srv/ && unzip dotcms-war-1.0.0-SNAPSHOT.zip && rm dotcms-war-1.0.0-SNAPSHOT.zip
          mkdir -f docker/dotcms-mvn/ROOT/srv/dotserver/tomcat-9.0.53/webapps/ROOT

      - name: Download dotCMS WAR from Cache
        uses: actions/download-artifact@v3
        with:
          name: dotcms-war-${{ steps.vars.outputs.SHORT_SHA }}
          path: docker/dotcms-mvn/ROOT/srv/dotserver/tomcat-9.0.53/webapps/ROOT

      - name: Extract dotCMS WAR
        shell: bash
        run: cd docker/dotcms-mvn/ROOT/srv/dotserver/tomcat-9.0.53/webapps/ && unzip dotcms-war-1.0.0-SNAPSHOT.war && rm dotcms-war-1.0.0-SNAPSHOT.war


      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          push: true
          context: docker/dotcms-mvn
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          pull: true
          no-cache: true
          build-args: |
            BUILD_ID=${{ github.sha }}
            BUILD_FROM=COMMIT 
