# Docker Image Build Workflow
#
# This reusable workflow is responsible for building and pushing Docker images
# for dotCMS releases. It supports building for multiple platforms and can
# be configured with custom tags and other options.
#
# Key features:
# - Supports building for multiple platforms (amd64, arm64)
# - Uses Docker buildx for efficient multi-platform builds
# - Configurable tag formats and image names
# - Optional pushing to Docker Hub

name: Docker Image Build

on:
  workflow_call:
    inputs:
      ref:
        description: 'Git ref to use for the build'
        required: true
        type: string
      docker_platforms:
        description: 'Docker platforms to build for (comma-separated, e.g. linux/amd64,linux/arm64)'
        required: false
        type: string
        default: 'linux/amd64,linux/arm64'
      docker_context_cache_key:
        description: 'Cache key for Docker build context'
        required: true
        type: string
      push_images:
        description: 'Whether to push the images to the registry'
        required: false
        type: boolean
        default: true
    outputs:
      formatted_tags:
        description: "The formatted tags of the Docker images"
        value: ${{ jobs.build-push-image.outputs.formatted_tags }}
    secrets:
      docker_io_username:
        required: true
      docker_io_token:
        required: true

env:
  DOCKER_BUILD_CONTEXT: /home/runner/work/_temp/core-build

jobs:
  build-push-image:
    name: Build/Push Image
    runs-on: ubuntu-${{ vars.UBUNTU_RUNNER_VERSION || '24.04' }}
    outputs:
      formatted_tags: ${{ steps.docker-metadata.outputs.tags }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - uses: ./.github/actions/core-cicd/cleanup-runner

      # Restore Docker context from cache
      - name: Restore Docker Context
        id: restore-docker-context
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.DOCKER_BUILD_CONTEXT }}/context
          key: ${{ inputs.docker_context_cache_key }}
          fail-on-cache-miss: true

      # Extract version information from the ref
      - name: Extract version
        id: extract-version
        run: |
          if [[ "${{ inputs.ref }}" =~ ^v([0-9]+\.[0-9]+\.[0-9]+.*)$ ]]; then
            VERSION="${BASH_REMATCH[1]}"
          else
            echo "Unable to extract version from ref ${{ inputs.ref }}"
            exit 1
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Image version: ${VERSION}"

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ inputs.docker_platforms }}

      # Log in to Docker Hub
      - name: Login to Docker Hub
        if: inputs.push_images
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.docker_io_username }}
          password: ${{ secrets.docker_io_token }}

      # Configure Docker metadata
      - name: Docker meta
        id: docker-metadata
        uses: docker/metadata-action@v5
        with:
          images: dotcms/dotcms
          tags: |
            type=raw,value=${{ steps.extract-version.outputs.version }}
            type=raw,value=latest

      # Build and push Docker image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ env.DOCKER_BUILD_CONTEXT }}/context
          platforms: ${{ inputs.docker_platforms }}
          push: ${{ inputs.push_images }}
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }} 