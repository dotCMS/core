name: 'CLI Build'
on:
  workflow_call:
    inputs:
      buildNativeImage:
        type: boolean
        required: true
      branch:
        type: string
        required: true
      artifact-run-id:
        default: ${{ github.run_id }}
        type: string
      version:
        description: 'The version of the build'
        required: false
        type: string
        default: '1.0.0-SNAPSHOT'
    outputs:
      artifact-id:
        description: 'The ID of the uploaded artifact'
        value: ${{ jobs.build.outputs.artifact-id }}
      artifact-url:
        description: 'The URL of the uploaded artifact'
        value: ${{ jobs.build.outputs.artifact-url }}

env:
  BRANCH: ${{ inputs.branch || github.ref_name }}
  SKIP_TESTS: true
  ARTIFACT_RUN_ID: ${{ inputs.artifact-run-id || github.run_id }}

defaults:
  run:
    shell: bash

jobs:
  os-runners:
    name: 'Get OS matrix'
    runs-on: ubuntu-latest
    outputs:
      runners: ${{ steps.set-os.outputs.runners }}
    steps:
      - name: 'Set OS'
        id: set-os
        run: |
          if [[ "${{ inputs.buildNativeImage }}" == "true" ]]; then
            RUNNERS='[{ "os": "ubuntu-22.04", "label": "Linux", "platform": "linux-x86_64" }, { "os": "macos-13", "label": "macOS-Intel", "platform": "osx-x86_64" }, { "os": "macos-14", "label": "macOS-Silicon", "platform": "osx-aarch_64" }]'
          else
            RUNNERS='[{ "os": "ubuntu-22.04", "label": "Linux", "platform": "linux-x86_64" }]'
          fi
          echo "runners=$RUNNERS" >> $GITHUB_OUTPUT

  build:
    needs: os-runners
    name: 'Build native image on ${{ matrix.label }}'
    strategy:
      fail-fast: true
      matrix:
        include: ${{ fromJSON( needs.os-runners.outputs.runners ) }}
    runs-on: ${{ matrix.os }}
    outputs:
      artifact-id: ${{ steps.upload-artifact.outputs.artifact-id }}
      artifact-url: ${{ steps.upload-artifact.outputs.artifact-url }}
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4
        with:
          ref: ${{ env.BRANCH }}
      - uses: ./.github/actions/maven-job
        with:
          cleanup-runner: true
          stage-name: "Build Native Image ${{ matrix.label }}"
          maven-args: "package -Pnative -Pdist -DskipTests=$SKIP_TESTS -pl :dotcms-cli"
          native: true
          generates-test-results: false
          artifacts-from: ${{ env.ARTIFACT_RUN_ID }}
          version: ${{ inputs.version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: 'Upload built distribution'
        id: upload-artifact
        uses: actions/upload-artifact@v4
        with:
          name: cli-artifacts-${{ matrix.platform }}
          path: |
            ${{ github.workspace }}/tools/dotcms-cli/cli/target/distributions/*.zip
          retention-days: 2
          if-no-files-found: ignore