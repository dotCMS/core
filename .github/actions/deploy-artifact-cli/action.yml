name: 'Deploy CLI Artifact'
description: 'Deploy the dotCMS CLI artifacts to Artifactory'
inputs:
  branch:
    description: 'Branch to build from'
    required: true
  artifactory-repo-username:
    description: 'Artifactory Repository Username'
    required: true
  artifactory-repo-password:
    description: 'Artifactory Repository Password'
    required: true
  github-token:
    description: 'GitHub Token'
    required: true
  build-run-id:
    description: 'The run id of the build to pull the artifact from'
    required: true
  commit-id:
    description: 'The commit id that triggered the build'
    required: true

runs:
  using: "composite"
  steps:
    - name: 'Set up JDK'
      uses: actions/setup-java@v4
      with:
        java-version: 11
        distribution: temurin

    - name: 'Get Date'
      id: get-date
      run: |
        echo "date=$(/bin/date -u "+%Y-%m")" >> $GITHUB_OUTPUT
      shell: bash

    - name: Download Build Artifact
      id: data-download
      uses: dawidd6/action-download-artifact@v3.1.4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        workflow: build-test-master.yml
        #commit: ${{ github.sha }}
        workflow_conclusion: success
        search_artifacts: true
        dry_run: true
        name: cli-artifacts-*
        name_is_regexp: true
        path: .
        if_no_artifact_found: warn

    - name: Get SHAs and check if we should deploy
      id: check
      run: |
        build_artifact_exists=${{ steps.data-download.outputs.found_artifact }}
        if [[ ${build_artifact_exists} == "true" ]]; then
            run_id=`echo '${{ steps.data-download.outputs.artifacts }}' | jq -r '.[0].workflow_run.id'`
            found_artifacts=true
            echo "Artifact Run id: $run_id"
        else
           echo "No artifact found"
           run_id="${{ github.run_id }}"
           found_artifacts=false
        fi
        echo "run_id=$run_id" >> $GITHUB_OUTPUT
        echo "found_artifacts=$found_artifacts" >> $GITHUB_OUTPUT
      shell: bash

    - name: 'Download all build artifacts'
      id: download-cli-artifacts
      uses: actions/download-artifact@v4
      with:
        path: ${{ github.workspace }}/tools/dotcms-cli/cli/target
        pattern: cli-artifacts-*
        run-id: ${{ inputs.build-run-id || steps.check.outputs.run_id }}
        github-token: ${{ inputs.github-token }}

    - name: 'List CLI Artifacts'
      if: steps.check.outputs.found_artifacts == 'true'
      run: |
        ls -R ${{ github.workspace }}/tools/dotcms-cli/cli/target
      shell: bash

    - name: 'Maven settings.xml setup'
      uses: whelk-io/maven-settings-xml-action@v22
      if: steps.check.outputs.found_artifacts == 'true'
      with:
        servers: '[{ "id": "dotcms-libs", "username": "${{ inputs.artifactory-repo-username }}", "password": "${{ inputs.artifactory-repo-password }}" }, { "id": "dotcms-libs-snapshot", "username": "${{ inputs.artifactory-repo-username }}", "password": "${{ inputs.artifactory-repo-password }}" }]'

    - name: 'Deploy CLI Artifacts'
      if: steps.check.outputs.found_artifacts == 'true'
      run: |
        JVM_TEST_MAVEN_OPTS="-e -B --no-transfer-progress -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
        ./mvnw -ntp \
          ${JVM_TEST_MAVEN_OPTS} \
          -Dprod=true \
          -DskipTests=true \
          -DskipITs=true \
          deploy \
          -pl :dotcms-cli
      shell: bash
